[{"title":"macOS中基于L2TP协议的VPN连接时提示“IPSec 共享密钥”丢失问题解决","date":"2018-04-10T10:59:26.000Z","path":"2018/04/10/2018-04-10_macOS中基于L2TP协议的VPN连接时提示“IPSec 共享密钥”丢失问题解决/","text":"遇到的问题 “IPSec 共享密钥”丢失。请验证您的设置并尝试重新连接。 在网上找到很多相似的解决方法，但是却没有人说出为什么要这样做？？ 问题原因&amp;解决原因：最后在Oracle官方文档找到了解释： 引用 Oracle Solaris 10 8/11 Information Library 文档: /etc/ppp/options包含缺省应用于系统中所有 PPP 链路的特征（例如，计算机是否要求对等点对其本身进行验证）的文件。如果不存在此文件，将禁止非超级用户使用 PPP。 也就是说，默认情况下macOS跟Liunx一样，在/etc/ppp/目录下没有 options这个配置文件，所以对于非root用户就无法使用ppp链路。 解决知其然，所以知其后然，这时候的解决方法就是在/etc/ppp/目录下建立options`这个配置文件，并且配置ppp链路l2tp不需要ipsec密钥。 下面就是vim命令操作，如果想系统学习相关命令可查看 每天一个linux命令目录，这里不打算详细讲解，有兴趣同学可以另行学习。 操作步骤（1）在终端任意路径下输入命令： sudo vim /etc/ppp/options然后输入电脑密码后，显示vim操作界面后按键盘i进入插入模式，输入下面内容：12plugin L2TP.pppl2tpnoipsec （2）然后按esc键退出插入模式，最后输入:wq!，强制保存并退出vim模式。 命令解释 sudo：用管理员权限执行命令 vim：用vim打开文件，后面跟上文件所在的路径 plugin L2TP.ppp：配置ppp链路插件？具体暂未了解，知道的同学可以告诉我啊！ l2tpnoipsec: 配置ppp链路l2tp不需要ipsec密钥。 终端操作示意 最后，想验证是否保存成功，可以用open /etc/ppp/options命令打开文件查看内容： 总结在这个探索的过程，自己了解得更多，就会发现自己知道的越少！求甚解，也许就是最好的学习态度，大家都要坚持！ 参考引用 在文件中和命令行上使用 PPP 选项 - 系统管理指南：网络服务 Mac OS X 下无密钥方式连接基于L2TP协议的VPN mac的vpn配置“IPSec 共享密钥”丢失问题 - 简书 Mac 笔记本无共享密钥连接L2TP VPN-我的运维历程-51CTO博客 Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN « jiangrongyong’s Blog Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN | micmiu - 软件开发+生活点滴 每天一个linux命令目录 - peida - 博客园 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"IPsec","slug":"IPsec","permalink":"http://iHTCboy.com/tags/IPsec/"},{"name":"PPP","slug":"PPP","permalink":"http://iHTCboy.com/tags/PPP/"},{"name":"macOS","slug":"macOS","permalink":"http://iHTCboy.com/tags/macOS/"},{"name":"vpn","slug":"vpn","permalink":"http://iHTCboy.com/tags/vpn/"}]},{"title":"PyCharm 2018 for mac 数据库实战：链接SQLite、建表、添加、查询数据","date":"2018-04-03T13:46:26.000Z","path":"2018/04/03/2018-04-03_PyCharm 2018 for mac 数据库实战：链接SQLite、建表、添加、查询数据/","text":"一、前言 最近开始入门python，当然是要使用PyCharm，然后在项目中遇到.db数据库文件，双击打不开？网上找到了windows版本的教程，版本也比较旧，所以有空就来一发，当备忘也好~ 二、链接SQLite 2.1 控制台创建数据库DB文件 2.2 打开sqlite配置界面按下图步骤打开sqlite配置目录 2.3 安装sqlite驱动点击下载驱动，直到显示提示“no objects”： 2.4 链接刚才创建的数据库 ios_test.db文件 点击步骤4的“Test Connection” 时，显示 Successful 就表示连接成功，点击右下角的OK返回！ PyCharm自动打开Sqlite数据库： 三、操作数据库 3.1 创建一张表 3.2 添加数据 3.3 查询数据 3.4 关联表 3.5 更多示例 相关代码： 123456789101112131415161718192021222324252627282930313233343536-- 创建一个表create table iOSDevice( deviceName TEXT);-- 插入数据insert into iOSDevice values('iPhone8');insert into iOSDevice values('iPhone8 Plus');insert into iOSDevice values('iPhoneX');-- 查询所有数据select * from iOSDevice;-- 创建一个新表create table iProduct ( Mac text, iPhone text, iPad text, Watch text, -- 关联表 foreign key (iPhone) references iOSDevice(deviceName))-- 插入多个值insert into iProduct values( 'Macbook Pro', 'iPhone', 'iPad mini4', 'apple Watch');-- 查询表数据select * from iProduct; 四、总结 通过PyCharm进行SQLite操作，之前真没有想到PyCharm如此强大！IDE就是IDE，收费也是硬道理！希望好好利用PyCharm做更多有趣的事件~ 五、参考引用 PyCharm IDE 链接sqlite、建表、添加、查询数据 - CSDN博客 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"PyCharm","slug":"PyCharm","permalink":"http://iHTCboy.com/tags/PyCharm/"},{"name":"Python","slug":"Python","permalink":"http://iHTCboy.com/tags/Python/"},{"name":"SQLite","slug":"SQLite","permalink":"http://iHTCboy.com/tags/SQLite/"}]},{"title":"判断NSString为空的问题浅析","date":"2018-03-17T15:02:26.000Z","path":"2018/03/17/2018-03-17_判断NSString为空的问题浅析/","text":"前言判断字符串是否为空的情况，一般判断的逻辑如下： 是否为nil 是否是NSNull 是否去掉空格之后长度为0 在某书看到如下代码： 12345678910111213141516171819202122@interface NSString (Util)- (BOOL)isBlankString:(NSString *)str;@end@implementation NSString (Util)- (BOOL)isBlankString:(NSString *)str &#123; NSString *string = str; if (string == nil || string == NULL) &#123; return YES; &#125; if ([string isKindOfClass:[NSNull class]]) &#123; return YES; &#125; if ([[string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]] length]==0) &#123; return YES; &#125; return NO;&#125;链接：https://www.jianshu.com/p/fd32b759bace來源：简书 判断NSString为空的问题大家继续之前，可以认真看看上面的代码有没有问题？或者有没有优化的空间？ 原作者表示里面有一个坑，调用者为nil时： 12NSString *str = (网络解析出来的数据，解析结果为nil);BOOL isBlank = [str isBlankString]; 就是说，如果用实例方法进行判断为空，因为实例对象为空时，根据objc的动态性，向空对象发消息会直接返回nil，并不会找到实例方法进行调用。所以，要判断字符串为空，只能传入字符串对象（可能为空），进行判断。 1234567#import &lt;Foundation/Foundation.h&gt;@interface MyUtility+ (BOOL)isBlankString:(NSString *)string;@end 123456789101112131415161718192021#import \"MyUtility.h\"@implementation MyUtility+ (BOOL)isBlankString:(NSString *)str &#123; NSString *string = str; if (string == nil || string == NULL) &#123; return YES; &#125; if ([string isKindOfClass:[NSNull class]]) &#123; return YES; &#125; if ([[string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]] length]==0) &#123; return YES; &#125; return NO;&#125;@end 其中NULL、nil、Nil、NSNull的区别： 标志 值 含义 NULL (void *)0 C指针的字面零值 nil (id)0 Objective-C对象的字面零值 Nil (Class)0 Objective-C类的字面零值 NSNull [NSNull null] 用来表示零值的单独的对象 总结通过这个例子，可能看出看似简单的问题，其实都有非常值得探究的深渊！希望自己不要自尽为是，虚心学习，考虑问题有更多角度，细致严谨！ 参考引用 判断NSString为空容易犯的错 - 简书 nil / Nil / NULL / NSNull - NSHipster 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"NSNull","slug":"NSNull","permalink":"http://iHTCboy.com/tags/NSNull/"},{"name":"NSString","slug":"NSString","permalink":"http://iHTCboy.com/tags/NSString/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"nil","slug":"nil","permalink":"http://iHTCboy.com/tags/nil/"}]},{"title":"AppStore无法内购相关问题解决的解决方案","date":"2018-03-14T14:12:26.000Z","path":"2018/03/14/2018-03-14_AppStore无法内购相关问题解决的解决方案/","text":"1.如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况： 请确认应用是从 App Store 上面下载的。 请确认不是越狱安装破解插件导致无法购买。 请确认网络是否通畅 请确认在 系统设置 &gt; 通用 &gt; 访问限制 中的 “App 内购买项目” 是否为打开状态。 注销你的 Apple ID 重新进入游戏，重新尝试购买； 如果你已经购买成功但是却没有收到金币，那么你可以切换网络成移动数据网络，然后重新打开游戏确认。 如果以上情况都排除了还是无法进行购买，请联系我们技术。 2.点击支付购买的时候，提示“您的购买无法完成，如需帮助，请联系iTunes支持”您好，此情况是触发了苹果公司的安全机制，例如：高频率的购买、频繁更换国家/地区购买、高额的购买等等原因，需联系苹果公司客服提供Apple ID 核实具体原因。建议直接拨打苹果客服电话： 中國大陸：400-666-8800香港（中文） ：(852) 2112-0099香港（英文）： (852) 2112-0099澳門：先撥 0800-111， 再撥 800-708-5413紐西蘭：0800127753馬來西亞：1-800803638澳洲：（61）1300321456新加坡境內： 800-186-1087新加坡境外： (65) 6835-1812印尼：08001027753日本境內： 0120-27753-5日本境外： (81) 3-6365-4705越南： 1800 1127 更多查看：联系 Apple 获取支持和服务 - Apple 支持 3.为什么我用苹果手机充值的时候偶尔会出现延迟到账的情况？苹果系统用户在使用内购服务时候，均通过苹果账号生成订单并提交给我司进行对于商品发货，费用并非由我司直接扣除，因此中间可能会产生延迟发货情况，还请在交易过程中耐心等待。 4.获取其他 iTunes 购买项目的帮助 有些超过 90 天的项目和购买不符合退款条件。请参阅条款和条件以了解更多信息。 了解 iTunes Store 购买项目如何收费 — 包括通过“家人共享”功能购买的项目。 如果您收到一封关于帐户收费的电子邮件，但您不记得授权过这笔收费，请检查确认这封电子邮件是不是合法。 获取有关通过您可能已下载到设备上的应用进行的订阅和重复购买的帮助。 获取关于 iCloud 储存空间方案降级方面的帮助。 您还可以在 App Store 或 iTunes Store 中查看购买历史记录。 参考 关于 App 内购买项目 - Apple 支持 如果您没有看到应用内购买项目 - Apple 支持 获取关于从 App Store、iTunes Store 或 iBooks Store 所购项目的帮助 - Apple 支持 无法内购问题检查列表 – Support Center | Grid Diary 更改或移除 Apple ID 付款信息 查看、更改或取消您的订阅 - Apple 支持 联系 Apple 获取支持和服务 - Apple 支持 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore","slug":"AppStore","permalink":"http://iHTCboy.com/tags/AppStore/"},{"name":"无法内购","slug":"无法内购","permalink":"http://iHTCboy.com/tags/无法内购/"},{"name":"苹果客服电话","slug":"苹果客服电话","permalink":"http://iHTCboy.com/tags/苹果客服电话/"}]},{"title":"NSString的boolValue方法甚解","date":"2018-03-11T13:22:26.000Z","path":"2018/03/11/2018-03-11_NSString的boolValue方法甚解/","text":"前言NSString的boolValue之前有使用，但是一直没有真正了解什么时候返回YES（true）或NO(false)。其实，苹果在官方文档中已经写的很清楚，按command + control 点击boolValue进入文档就可以看到： &gt; boolValueThe Boolean value of the string. Declaration@property(readonly) BOOL boolValue; DiscussionThis property is YES on encountering one of “Y”, “y”, “T”, “t”, or a digit 1-9—the method ignores any trailing characters. This property is NO if the receiver doesn’t begin with a valid decimal text representation of a number.The property assumes a decimal representation and skips whitespace at the beginning of the string. It also skips initial whitespace characters, or optional -/+ sign followed by zeroes. 中文意思: 字符串中包含“Y”，“y”，“T”，“t”，或1-9的数字开关时，这个属性值为YES。 如果不是以有效的十进制数字开始的文本表示，则此属性为NO。 该属性采用十进制表示法，并在字符串的开头跳过空格。它也会跳过最初的空格字符（忽略全部的空格开头），或者单个 -/+ 符号开头。 测试一波大家可以思考一下，下面的代码输出结果是什么？ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546NSArray *tests = @[ @\"Y\", @\"N\", @\"T\", @\"F\", @\"t\", @\"f\", @\"1\", @\"0\", @\"Yes\", @\"No\", @\"No really no\", @\"true\", @\"false\", @\"To be or not to be\", @\"False\", @\"3567\", @\"0123456789\", @\"000\", @\"0ab\", @\"1cd\", @\"abc\", @\"\", @\"+aeb\", @\"+3sb\", @\"-ss\", @\"-01\", @\"-21\", @\" 1\", @\" 0\", @\"--1\", @\"++1\", @\"-+1\", @\" 2\", @\" 0\", @\" 2 0\", @\" 0 2\", @\" 20\", @\"000-1\", @\" + 111\", @\" +111\" ]; NSArray *boolToString = @[@\"NO\", @\"YES\"]; for (NSString *test in tests)&#123; NSLog(@\"boolValue:\\\"%@\\\" =&gt; %@\", test, boolToString[[test boolValue]]); &#125; 结果运行结果： 12345678910111213141516171819202122232425262728293031323334353637383940boolValue:\"Y\" =&gt; YESboolValue:\"N\" =&gt; NOboolValue:\"T\" =&gt; YESboolValue:\"F\" =&gt; NOboolValue:\"t\" =&gt; YESboolValue:\"f\" =&gt; NOboolValue:\"1\" =&gt; YESboolValue:\"0\" =&gt; NOboolValue:\"Yes\" =&gt; YESboolValue:\"No\" =&gt; NOboolValue:\"No really no\" =&gt; NOboolValue:\"true\" =&gt; YESboolValue:\"false\" =&gt; NOboolValue:\"To be or not to be\" =&gt; YESboolValue:\"False\" =&gt; NOboolValue:\"3567\" =&gt; YESboolValue:\"0123456789\" =&gt; YESboolValue:\"000\" =&gt; NOboolValue:\"0ab\" =&gt; NOboolValue:\"1cd\" =&gt; YESboolValue:\"abc\" =&gt; NOboolValue:\"\" =&gt; NOboolValue:\"+aeb\" =&gt; NOboolValue:\"+3sb\" =&gt; YESboolValue:\"-ss\" =&gt; NOboolValue:\"-01\" =&gt; YESboolValue:\"-21\" =&gt; YESboolValue:\" 1\" =&gt; YESboolValue:\" 0\" =&gt; NOboolValue:\"--1\" =&gt; NOboolValue:\"++1\" =&gt; NOboolValue:\"-+1\" =&gt; NOboolValue:\" 2\" =&gt; YESboolValue:\" 0\" =&gt; NOboolValue:\" 2 0\" =&gt; YESboolValue:\" 0 2\" =&gt; NOboolValue:\" 20\" =&gt; YESboolValue:\"000-1\" =&gt; NOboolValue:\" + 111\" =&gt; NOboolValue:\" +111\" =&gt; YES 总结不知道大家答对多少？是不是对这个方法又熟悉了几分呢？实践见真知。 参考引用 [NSString boolValue]-Manbolo Blog 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"NSString","slug":"NSString","permalink":"http://iHTCboy.com/tags/NSString/"},{"name":"boolValue","slug":"boolValue","permalink":"http://iHTCboy.com/tags/boolValue/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"两个NSInvocation崩溃引起的反思","date":"2018-03-05T15:42:26.000Z","path":"2018/03/05/2018-03-05_两个NSInvocation崩溃引起的反思/","text":"前言最近在使用NSInvocation进行多参数方法调用，结果就崩溃了！signature为nil 和 一直提示找不到方法！！！ method signature argument cannot be nil 崩溃信息：1234*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '+[NSInvocation _invocationWithMethodSignature:frame:]: method signature argument cannot be nil'*** First throw call stack:(0x1831a6d8c .........)libc++abi.dylib: terminating with uncaught exception of type NSException unrecognized selector sent to instance崩溃信息：1234*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[ViewController openView]: unrecognized selector sent to instance 0x10510b1b0'*** First throw call stack:(0x1831a6d8c ......)libc++abi.dylib: terminating with uncaught exception of type NSException 原始示例代码： 1234567891011121314151617181920212223242526272829303132333435363738394041- (void)myInvocation &#123; SEL myMethod = @selector(sum:parm:parm:); //创建一个函数签名，这个签名可以是任意的,但需要注意，签名函数的参数数量要和调用的一致。 NSMethodSignature * sig = [[self class] instanceMethodSignatureForSelector:myMethod]; //通过签名初始化 NSInvocation * invocatin = [NSInvocation invocationWithMethodSignature:sig]; //设置target [invocatin setTarget:self]; //设置selecteor [invocatin setSelector:myMethod]; int a=1; int b=2; int c=3; /* //index为2 是因为0、1两个参数已经被target和selector占用，其实可以这样设置： ViewController * view = self; [invocatin setArgument:&amp;view atIndex:0]; [invocatin setArgument:&amp;myMethod atIndex:1]; */ [invocatin setArgument:&amp;a atIndex:2]; [invocatin setArgument:&amp;b atIndex:3]; [invocatin setArgument:&amp;c atIndex:4]; [invocatin retainArguments]; //我们将c的值设置为返回值 [invocatin setReturnValue:&amp;c]; int d; //取这个返回值 [invocatin getReturnValue:&amp;d]; NSLog(@\"%d\",d); //消息调用 [invocatin invoke]; &#125;+ (int)sum:(int)a parm:(int)b parm:(int)c&#123; NSLog(@\"sum: %d:%d:%d\",a,b,c); return a+b+c;&#125; NSInvocation 注意项一直排查，开始以为是方法名写错了，认真一个一个字检查，没有错哦！！Way?! 不得而，还是在看看苹果文档！！！ instanceMethodSignatureForSelector:1+ (NSMethodSignature *)instanceMethodSignatureForSelector:(SEL)aSelector; Returns an NSMethodSignature object that contains a description of the instance method identified by a given selector. methodSignatureForSelector:1- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector; Returns an NSMethodSignature object that contains a description of the method identified by a given selector. 崩溃一 分析：从苹果文档可以看到，生成NSMethodSignature对象有2个方法，一个是实例方法和一个类方法。 如果SEL是类方法要使用 methodSignatureForSelector:， 如果SEL是实例方法就使用 instanceMethodSignatureForSelector: 所以，把instanceMethodSignatureForSelector: 改为methodSignatureForSelector 就解决啦！ 崩溃二 分析：有了上面的分析，崩溃二是因为 setTarget:使用实例self，而类方法应用使用类，所以修改为[invocatin setTarget:[self class]];，就解决啦！ 最终代码：123456789101112131415161718192021222324252627282930313233343536373839404142- (void)myInvocation &#123; SEL myMethod = @selector(sum:parm:parm:); //创建一个函数签名，这个签名可以是任意的,但需要注意，签名函数的参数数量要和调用的一致。 NSMethodSignature * sig = [[self class] methodSignatureForSelector:myMethod]; //通过签名初始化 NSInvocation * invocatin = [NSInvocation invocationWithMethodSignature:sig]; //设置target [invocatin setTarget:[self class]]; //设置selecteor [invocatin setSelector:myMethod]; int a=1; int b=2; int c=3; /* //index为2 是因为0、1两个参数已经被target和selector占用，其实可以这样设置： ViewController * view = self; [invocatin setArgument:&amp;view atIndex:0]; [invocatin setArgument:&amp;myMethod atIndex:1]; */ [invocatin setArgument:&amp;a atIndex:2]; [invocatin setArgument:&amp;b atIndex:3]; [invocatin setArgument:&amp;c atIndex:4]; [invocatin retainArguments]; //我们将c的值设置为返回值 [invocatin setReturnValue:&amp;c]; int d; //取这个返回值 [invocatin getReturnValue:&amp;d]; NSLog(@\"%d\",d); //消息调用 [invocatin invoke]; &#125;+ (int)sum:(int)a parm:(int)b parm:(int)c&#123; NSLog(@\"sum: %d:%d:%d\",a,b,c); return a+b+c;&#125; 总结出现这样一个问题，直接说明平时没有关注文档和API实现，当前NSInvocation不常用，但是这次排查也用半天时间，有时候怀疑自己代码时，还是要从根本上找原因——— 从官方文档重新开始！ 另外，复制网上的代码是一个危险的动作，不求甚解有时候坑就越深，希望自己以后不懂的知识要使用时，除了工期赶&amp;复制，还要及时补充自己的空白，知其码，并知其然！努力成为一个优秀工程师！严谨！ 参考引用 objective c - How can I invoke a class method by NSInvocation? - Stack Overflow NSInvocation - Foundation | Apple Developer Documentation methodSignatureForSelector: - NSObject | Apple Developer Documentation instanceMethodSignatureForSelector: - NSObject | Apple Developer Documentation 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"NSInvocation","slug":"NSInvocation","permalink":"http://iHTCboy.com/tags/NSInvocation/"},{"name":"NSMethodSignature","slug":"NSMethodSignature","permalink":"http://iHTCboy.com/tags/NSMethodSignature/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"Gitment评论功能接入踩坑教程","date":"2018-02-25T04:45:26.000Z","path":"2018/02/25/2018-02-25 _Gitment评论功能接入踩坑教程/","text":"前言之前接入的评论功能，都因为各种原因被放弃了，今天从新计划接入评论功能，所以就有了今天这篇文章。 评论模块简介 多说 - 最多用户使用的评论，但遗憾2017年6月将暂定服务；不建议新用户使用，但为旧用户保留，也感谢多说一路的陪伴； 网易云跟帖 - 网易提供的评论组件，功能比较简单，性能优秀；管理后台在查询上还不算特别智能，但足够普通用户使用； 畅言 - 搜狐提供的评论组件，功能丰富，体验优异；但必须进行域名备案。只要域名备过案就可以通过审核，简单问题复杂化。 Disqus - 国外使用较多的评论组件。万里长城永不倒，一枝红杏出墙来，你懂的。 以上评论模块应该大家都知道，多说和网易云跟帖没有了，畅言要备案，对于只是挂靠在GitHub的博客非常的不友好，放弃！Disqus，我们都希望自己的博客可以不分国界！所以Disqus也只能放弃！ 综上所述，将是我们要重点介绍的Gitment ！！！ Gitment评论模块 Gitment is a comment system based on GitHub Issues, which can be used in the frontend without any server-side implementation. Gitment 基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。 想了解具体示例，可以点击查看官方Demo Page：Gitment Demo 具体的接入我就不在这里说了，本文末有参考链接大家可以去了解学习，主要是说一下其中的坑点。 Gitment坑点小结1、owner: ‘Your GitHub ID’ owner: &#39;你的 GitHub ID&#39;, 可以是你的GitHub用户名，也可以是github id，建议直接用GitHub用户名就可以。 2、repo: ‘The repo to store commentsrepo: &#39;存储评论的 github repo&#39;这个是你要存储评论内容的仓库名，可以与博客下的仓库，也可以新建一个仓库专门存储评论内容的。 3、Error: Not Found问题owner或者repo配置错误了，注意名字和仓库名字的大小写。 4、Error: Comments Not Initialized 在注册OAuth Application这个步骤中，给Authorization callback URL指定的地址错了 还没有在该页面的Gitment评论区登陆GitHub账号 如果还是不行，可以参考另一个情况 Error: Comments Not Initialized · Issue #95 · imsun/gitment 5、Error：validation failedissue的标签label有长度限制！labels的最大长度限制是50个字符。 id: &#39;页面 ID&#39;, // 可选。默认为 location.href 这个id的作用，就是针对一个文章有唯一的标识来判断这篇本章。 在issues里面，可以发现是根据网页标题来新建issues的，然后每个issues有两个labels（标签），一个是gitment，另一个就是id。 所以明白了原理后，就是因为id太长，导致初始化失败，现在就是要让id保证在50个字符内。 对应配置的id为：1id: '&lt;%= page.title %&gt;' 如果用网页标题也不能保证在50个字符！ 最后，我用文章的时间，这样长度是保证在50个字符内，完美解决！1id: '&lt;%= page.date %&gt;' 注意事项： 用文章时间，避免了文章每次更新标题或路径时，会重新创建一个issue评论的问题，也解决了label长度问题。 关于Gitment的id在那里修改的问题，大家需要根据自己使用的主题，找到id配置的位置进行修改。（ps 可以在主题的github仓库中搜索gitment来定位） 6、gitment的汉化只需到模板里将原来定义CSS和JS的那两行改成：12&lt;link rel=\"stylesheet\" href=\"https://billts.site/extra_css/gitment.css\"&gt;&lt;script src=\"https://billts.site/js/gitment.js\"&gt;&lt;/script&gt; 即可。来源：https://github.com/imsun/gitment/issues/104 7、所有文章一键初始化评论配置正确的文章，第一次显示，提示还没有初始化： 文章作者需要登陆GitHub授权后，会显示初始化按钮(注意，不要多点按钮，否则issues出现多条一样的)： 点击初始化按钮后，如果正常就会出现： 关于自动初始化所有文章的功能，到本文编写时，还没有一个完善的解决方法，就是用脚本来执行自动化，有需要的可以详细了解：https://github.com/imsun/gitment/issues/5 8、请保持克制，切勿滥用。作者提醒使用本项目的用户，请保持克制，切勿滥用。详见 Gitment：使用 GitHub Issues 搭建评论系统 9、订阅issueissue订阅，有新评论时就可以通过邮件提醒，这个功能是把双刃剑，因为有些垃圾订阅邮件骚扰，大家看着用吧。 总结Gitment目前来说，已经解决了一个博客简单的评论功能，点赞 / 有完整的 Markdown / GFM 和代码高亮支持! 通过Gitment至少可以证明一点，生产力的发展有无限可能，环境的限制，会有的各种奇异的想法，或者奇异的东西出现，Gitment就是一个完美的证明，充分解决了一个简单博客的评论功能。另一方面，与国内的生活要求，希望大家能够遵守规则，让GitHub和Gitment在我们生活中快乐成长！ 参考引用 GitHub imsun/gitment: A comment system based on GitHub Issues. Gitment Demo Gitment：使用 GitHub Issues 搭建评论系统 | I’m Sun 添加Gitment评论系统踩过的坑 | XiChen’s Blog Hexo博客框架下Gitment取代多说评论 | 仁伯安 GITMENT系统VALIDATION FAILED问题的解决 所有文章一键初始化评论 · Issue #5 · imsun/gitment 评论框汉化问题 · Issue #104 · imsun/gitment Error: Comments Not Initialized · Issue #95 · imsun/gitment 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Gitment","slug":"Gitment","permalink":"http://iHTCboy.com/tags/Gitment/"},{"name":"博客评论功能","slug":"博客评论功能","permalink":"http://iHTCboy.com/tags/博客评论功能/"},{"name":"评论配置","slug":"评论配置","permalink":"http://iHTCboy.com/tags/评论配置/"}]},{"title":"免费将音频转成文字的快速方法","date":"2018-02-23T15:30:36.000Z","path":"2018/02/23/2018-02-23_免费将音频转成文字的快速方法/","text":"前言最近在看YouTube视频时，里面有自动字幕功能，当时非常激动，字幕很准确；其实YouTube这个功能在2010就上线了。今天就是想利用YouTube这个强大的功能，将音频转换成文本啊！因为尝试了讯飞和百度后，不只是收费，准确率也不好，特别是英文。 自己的音频（视频）如果是视频，直接在YouTube上传就可以，如果是音频，YouTube不接受纯音频文件。所以，我们得通过第三方网站 TunesToTube - Upload 上传，给音频配上画面。 上传音频后转换视频： 在YouTube视频管理，查看刚才上传的视频，需要等待一下，会自动生成字幕： 可以查看自动生成的字幕，并且下载！ YouTube的视频如果是YouTube上已经有的视频，你想下载字幕，则可以通过第三方API来下载完整的字幕，以下是用 - YouTube字幕下载 网站示意: 选择下载的字幕： 下载的字幕示意： 总结随着今年AI人工智能的发展，谷歌的自动翻译已经给世界带来了巨大的改变，相反国内，其实一直在说AI，却没有做出大的变化，就像优酷，没有考虑谷歌的强大，一直与爱x艺视频，腾x视频都在为版本争，而且国内都是综艺视频占大头，有点可惜。希望，AI在未来能解决更多简单操作但繁琐的重复劳动工作的问题，一起加油！ 参考引用 一款自动、免费整理英文录音的神器，居然是它 TunesToTube - Upload YouTube字幕下载_Vimeo字幕下载Download Youtube and Vimeo Captions(Subtitles)朱炜 推荐YouTube视频自动识别字幕的下载工具 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"YouTube字幕","slug":"YouTube字幕","permalink":"http://iHTCboy.com/tags/YouTube字幕/"},{"name":"字幕下载","slug":"字幕下载","permalink":"http://iHTCboy.com/tags/字幕下载/"},{"name":"自动翻译","slug":"自动翻译","permalink":"http://iHTCboy.com/tags/自动翻译/"},{"name":"音频转文本","slug":"音频转文本","permalink":"http://iHTCboy.com/tags/音频转文本/"}]},{"title":"利用iPhone“破解”下载百度云文件限速问题","date":"2018-02-16T09:12:16.000Z","path":"2018/02/16/2018-02-16_利用iPhone“破解”下载百度云文件限速问题/","text":"前言最近想下载一个资源，找到百度网盘的，文件总大小871.84M，下载速度100kb/s，没有开会员，这速度有良心了！but，下载到300多m就断开了！！！wtf！！！然后网上找到 Aria2GUI，然后发现，现在百度网盘已经封杀了。 纠结，开会员？这是一个伪需求，因为自己不经常使用百度网盘，就下载一次开一次会员15元，不是说这个贵，总会觉得感觉有点大财小用的样子，所以如果百度云能推出下载一次一分钱或一毛钱酱紫，我觉得是可以接受的。好了，废话就不多说了，今天我们的另一个方法吧。 打开iPhone百度网盘下载因为发现用手机百度网盘App下载，网速是根据你的网线速度决定的，不需要开通会员，网速也不会受到限制。因为百度网盘下载上的资源是不能分享到其它应用的（.rar、.zip、视频等），所以没有网速的限制吧！？ 正是利用这点，百度网盘找到你要下载的文件，点击下载就可以了，下载完后就是好事！接下来要考虑的是怎么把下载好的文件，拉出来！ 打开iTunes提取文件用iTunes找到手机，点击手机查看手机信息，点击文件共享，找到百度网盘的文稿： 把拖拽出来的文件，找到Cache文件，里面就是缓存的资源，包括下载的文件、在线看的视频内容、预览的图片等。 总结利用这个方法，我在家里网速10M情况下，不到半个小时，就已经下载完这个文件并且得到源文件！！所以比用其他的下载方法方便可靠又安全。用官方的应用下载确实是便捷！密码帐号这些都不会外漏，无安全的隐患。在这里祝大家玩得开心，下载的开心，新年快乐！ 参考引用 Aria2GUI iPhone的百度云下载的压缩包如何用其他软件解压？ - 知乎 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"百度云下载","slug":"百度云下载","permalink":"http://iHTCboy.com/tags/百度云下载/"},{"name":"百度网盘限制","slug":"百度网盘限制","permalink":"http://iHTCboy.com/tags/百度网盘限制/"},{"name":"破解下载限速","slug":"破解下载限速","permalink":"http://iHTCboy.com/tags/破解下载限速/"}]},{"title":"关于16进制颜色值转换为UIColor的思考","date":"2018-02-07T12:26:16.000Z","path":"2018/02/07/2018-02-07_关于16进制颜色值转换为UIColor的思考/","text":"前言大家都知道iOS的UIColor提供的自定义初始化是通过RGB(A) 4个10进行制的参数，那么为什么用16进制呢？因为web和安卓端以常识性用16进制读取，所以为了方便设计师出图标注，很多时候都是16进制的效果图。而今天就是要讨论一下，这个16进制的转换的方法。 网页颜色 - 维基百科: 在HTML和CSS中使用3字节共6个十六进制数字表示一种颜色，每字节从00到FF，相当十进位数字从0到255，按顺序前两位是红色的值，中间两位是绿的值，最后两位是蓝色的值。 由于网页（WEB）是基于计算机浏览器开发的媒体，所以颜色以光学颜色RGB（红、绿、蓝）为主。 网页颜色是以16进制代码表示，一般以“#”号开头，后面分别为R、G、B的16位进制数。 FF为最大数，代表十进制255。比如白色是R、G、B三个颜色最大，在网页代码便是：#FFFFFF。黑色是三个颜色为0，在网页代码便是：#000000。当颜色代码为#XXYYZZ时，可以用#XYZ表示，如#135与#113355表示同样的颜色。在CSS中，也可以使用rgb(127,127,127)代替#7F7F7F（十进制表示）。 有意思的是，可以知道表示颜色数总共有： 256^3 = 16,777,216 种，这个颜色就是我们常说的真彩色。 几种16进制颜色值转换UIColor的方式16进制转换为10进制后的整形转换为UIColor： 12// rgb颜色转换（rgbValue为16进制转换成10进制的整形）#define MACRO_COLOR_HexCOLOR(rgbValue) ([UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) &gt;&gt; 16))/255.0f green:((float)((rgbValue &amp; 0xFF00) &gt;&gt; 8))/255.0f blue:((float)(rgbValue &amp; 0xFF))/255.0f alpha:1.0]) 方法一： 12345678910#pragma mark -16进制颜色值转化UIColor+ (UIColor *)colorFromHexString:(NSString *)hexString&#123; unsigned rgbValue = 0; NSScanner *scanner = [NSScanner scannerWithString:hexString]; [scanner setScanLocation:1]; // bypass '#' character [scanner scanHexInt:&amp;rgbValue]; // Optionally prefixed with \"0x\" or \"0X\" return MACRO_COLOR_HexCOLOR(rgbValue);&#125; 这种方法，只能输入以#开头的十六进制颜色，比如#3c93fd，如果输入0X3c93fd，最后都会得到黑色。（因为rgbValue为0，所以全部颜色为0，得到黑色。） 方法二： 1234567+ (UIColor *)colorWithHexString:(NSString *) hexString &#123; NSScanner *scanner = [NSScanner scannerWithString: hexString]; unsigned hexNum; if (![scanner scanHexInt:&amp;hexNum]) return nil; return MACRO_COLOR_HexCOLOR(hexNum);&#125; 这种方法，只能输入以0X或0x开头的十六进制颜色，比如0x3c93fd，如果输入#3c93fd，最后都会得到nil（透明）。（scanner转换10进制失败，hexNum为0，但是直接return nil，） 方法三： 12345678910111213141516171819202122232425262728293031323334353637383940414243// 颜色转换三：iOS中十六进制的颜色（以#开头）转换为UIColor+ (UIColor *) colorWithHexString: (NSString *)color&#123; NSString *cString = [[color stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] uppercaseString]; // String should be 6 or 8 characters if ([cString length] &lt; 6) &#123; return [UIColor clearColor]; &#125; // 判断前缀并剪切掉 if ([cString hasPrefix:@\"0X\"]) cString = [cString substringFromIndex:2]; if ([cString hasPrefix:@\"#\"]) cString = [cString substringFromIndex:1]; if ([cString length] != 6) return [UIColor clearColor]; // 从六位数值中找到RGB对应的位数并转换 NSRange range; range.location = 0; range.length = 2; //R、G、B NSString *rString = [cString substringWithRange:range]; range.location = 2; NSString *gString = [cString substringWithRange:range]; range.location = 4; NSString *bString = [cString substringWithRange:range]; // Scan values unsigned int r, g, b; [[NSScanner scannerWithString:rString] scanHexInt:&amp;r]; [[NSScanner scannerWithString:gString] scanHexInt:&amp;g]; [[NSScanner scannerWithString:bString] scanHexInt:&amp;b]; return [UIColor colorWithRed:((float) r / 255.0f) green:((float) g / 255.0f) blue:((float) b / 255.0f) alpha:1.0f];&#125;作者：艳晓链接：https://www.jianshu.com/p/96835798e4fc 这种方法，做了0x和#判断，但是为什么那么长！！！有没有办法优化？ 优化的方法？因为用了NSScanner进行转换，所以为什么不用NSScanner直接判断，然后转换呢？另外苹果文档注释： 1- (BOOL)scanHexInt:(nullable unsigned *)result; // Optionally prefixed with \"0x\" or \"0X\" 所以，其实用NSScanner进行转换时，不用判断 “0x” or “0X”，所以直接判断 #后过滤掉(跳过)就可以啦！！！ 直接看代码吧，发现看代码比文字更有力！： 123456789101112+ (UIColor *) colorWithHexString:(NSString *)hexString &#123; NSScanner *scanner = [NSScanner scannerWithString:hexString]; //从当前的扫描位置开始扫描，判断扫描字符串是否从当前位置能扫描到和传入字符串相同的一串字符，如果能扫描到就返回YES，指针指向的地址存储的就是这段字符串的内容。 [scanner scanString:@\"#\" intoString:NULL]; unsigned rgbValue = 0; [scanner scanHexInt:&amp;rgbValue];// Optionally prefixed with \"0x\" or \"0X\" return MACRO_COLOR_HexCOLOR(rgbValue);&#125; 上面的scanString: intoString:方法是一个技巧，判断是否包含#，如果包括时，scanner的scanLocation会指向下一个字符。所以用scanHexInt:将十六进制无符号整形时，已经不包含#，所以能成功转换。 参考引用 uicolor-utilities/UIColor-Expanded.m at master · kballard/uicolor-utilities iOS中十六进制的颜色转换UIColor（RGB） - 简书 NSScanner：一个陌生的条件判断利器 - 简书 NSScanner类的基本用法 - CSDN博客 NSScanner使用详解 - 简书 网页颜色 - 维基百科 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"16进制颜色","slug":"16进制颜色","permalink":"http://iHTCboy.com/tags/16进制颜色/"},{"name":"NSScanner","slug":"NSScanner","permalink":"http://iHTCboy.com/tags/NSScanner/"},{"name":"UIColor","slug":"UIColor","permalink":"http://iHTCboy.com/tags/UIColor/"}]},{"title":"Mac查看文件内容常用的命令小结","date":"2018-02-04T14:04:16.000Z","path":"2018/02/04/2018-02-04_Mac查看文件内容常用的命令小结/","text":"前言最近苹果的热更新和私有库问题检查的更严了，如果应用被拒，苹果在拒绝信中会说到使用strings/otool/nm命令进行自查，所以总结了一些命令，方便查找和定位文件内容相关信息。 1、grep 作用：判断是否包含字符串 使用示例： grep -r &quot;xxx” path 检查是否包含（weixin）字符串： matches 表示包含。 2、strings 作用：find the printable strings in a object, or other binary, file 使用示例： strings a.out | grep hello //检查 a.out 文件中含有 hello 字符串的字节序列 检查二进制是否含有关键词的库（比如检查私有库）： 更多使用说明 man strings 3、otool 作用： object file displaying tool. (针对目标文件的展示工具，用来发现应用中使用到了哪些系统库，调用了其中哪些方法，使用了库中哪些对象及属性) 使用示例： otool -L path //查看可执行程序都链接了那些库 otool -L path | grep &quot;xxx&quot; //筛选是否链接了xxx库 otool -D path //查看支持的架构 otool -ov path //output the Objective-C class structures and their defined methods.(输出Object-C类结构以及定义的方法) 查看该应用是否砸壳: otool -l path | grep crypt //cryptid 0（砸壳） 1（未砸壳） 更多用法 man otool 4、nm 作用：display name list (symbol table). (显示符号表) 使用示例： nm path //得到Mach-O中的程序符号表 nm -nm path//目标文件的所有符号 符号表中标示为 undefined，意思是目标文件引用了类_XXX（XXX库），不过这并没有实现它。 更多用法 man nm 5、file 作用：determine file type. (判断文件类型) 使用示例： file path 判断.a/framework是静态库还是动态库:静态库：动态库： 6、lipo 作用：create or operate on universal files（创建或处理通用文件的工具） 使用示例： lipo -info &#39;file path&#39; // 判断静态库所支持的平台 - i386 armv7 armv7s x86_64 arm64 lipo -remove i386 origin_xxx.a -output op_xxx.a // 删除静态库包括的i386平台 lipo -thin i386 origin_xxx.a -output op_xxx.a // 拆分静态库，只保留i386 CPU架构 lipo -create device_xxx.a simulator_xxx.a -output universal_xxx.a //对真机或者模拟器分别打出 .a 文件合并 参考阅读 “nm tool” Xcode manual page iOS-private-api-scanner/iOS私有API扫描工作总结· mrmign/iOS-private-api-scanner iOS-private-api-checker苹果iOS私有API检查工具 iOS开发-如何判断framework是动态库或静态库以及framework静态库转.a静态库 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"grep","slug":"grep","permalink":"http://iHTCboy.com/tags/grep/"},{"name":"iOS命令行","slug":"iOS命令行","permalink":"http://iHTCboy.com/tags/iOS命令行/"},{"name":"lipo","slug":"lipo","permalink":"http://iHTCboy.com/tags/lipo/"},{"name":"mac命令行","slug":"mac命令行","permalink":"http://iHTCboy.com/tags/mac命令行/"},{"name":"nm","slug":"nm","permalink":"http://iHTCboy.com/tags/nm/"},{"name":"otool","slug":"otool","permalink":"http://iHTCboy.com/tags/otool/"},{"name":"strings","slug":"strings","permalink":"http://iHTCboy.com/tags/strings/"}]},{"title":"让你的iTerm更Geek!","date":"2018-02-03T15:42:16.000Z","path":"2018/02/03/2018-02-03_让你的iTerm更Geek!/","text":"前言iTerm2 作为一个免费&amp;开源的应用，Mac程序员应用必备的软件！作为一个专业的终端，功能真的很强大，iTerm + oh-my-zsh 应作为最佳配置使用！ 一键调出 iTerm2 我们有时会遇上这样一种情况，就是我们只想用命令行执行某一个特定的操作，然后就不需要它了。其实在这种情况下我们没有必要打开命令行应用的。比如我们就是想看一眼某个文件夹里面都有什么文件，类似这种操作我们其实没有必要单独开启一个命令行窗口的。 然后网上找到的配置是这样的，设置HotKey：打开iTerm的Preperence → Profiles → Keys → HotKey 进行勾选设置 Show/hide iTerm2 with a system-wide hotkey Hotkey toggles a dedicated window with profile勾选上面的两个选项，关闭iTerm2，然后再次打开，任意应用程序界面按快捷键尝试一下。你会爱上这个感觉。 然而！！！没有找到 Hotkey toggles a dedicated window with profile 这个选项！！！ 我是使用 iTerm2( Build 3.1.5.beta.2): Way! way!! way!!!原来新版已经移动到对应的Profiles下的Keys下： 设置一下热键就可以啦！ 实用&amp;装逼时间： 有时候想快速打开，真的很方便！ iTerm2 光标按照单词快速移动设置在Mac自带的终端中是可以使用 option+←和option+→ 这两个快捷键实现光标按照单词快速移动，但是发现iTerm用这个快捷键没有反应！！！每次只能用ctrl + f/b一个个字符移动，效率非常低！经过搜索，发现需要重新配置相应的映射。 打开iTerm2的 Preferences -&gt;选择相应的 Profile（默认为Default），选择“Keys”选项卡，然后可以在Key Mappings看到option+←和option+→ 这两组快捷键用作了其他功能，这里我们只需要重新绑定新的映射即可（下图是已经绑定之后的新映射）。 分别修改option+←和option+→的映射如下图所示，选择Action为“Send Escape Sequence”，然后输入“b”和“f”即可。 iTerm2 备忘命令行快捷键 快捷键 作用说明 command + f 搜索&amp;查找，如果输入搜索内容后，按下 tab 键，就会 iTerm 自动帮选中搜索关键词，并且自动的帮我们复制到了剪贴板中。如果输入的是 shift+tab，则自动将查找内容的左边选中并复制。按 esc 退出搜索。 command + k 清空屏幕 command + d 垂直分屏 command + shift + d 水平分屏 command + ; 查看历史命令 command + shift + h 查看剪贴板历史，会自动列出输入过的命令 command + number tab 标签窗口来回切换 command + option + ←/→ 或 command + [ / ] 切换屏幕 ctrl + x 第一次按时，移动光标至行首；再次按时，回到原有位置 ctrl + a 到行首（Ahead of line） ctrl + e 到行尾（End of line） ctrl + f/b 前进后退(相当于左右方向键) ctrl + u 清除当前行（无论光标在什么位置） ctrl + d 删除光标当前位置的字符 ctrl + h 删除光标之前的字符 ctrl + w 删除光标之前的单词 ctrl + k 删除光标当前位置到文本末尾的所有字符 ctrl + t 交换光标当前位置的字符与前一个字符的位置 ctrl + c 或 ctrl + j 或 ctrl + o 取消当前行输入的命令（中断操作）。重新起一行。 ctrl + y 粘贴之前（ctrl +u/k/w）删除的内容 ctrl + p 上一条命令。调出命令历史中的前一条（Previous）命令，相当于通常的上箭头 ctrl + n 下一条命令。调出命令历史中的下一条（Next）命令，相当于通常的上箭头 ctrl + s 冻结终端操作（暂停脚本） ctrl + q 恢复冻结（继续执行脚本） ctrl + r 搜索命令历史。根据用户输入查找相关历史命令（reverse-i-search） ctrl + l 或 command + r 或 clear 换到新一屏，创建一个空屏 ctrl + i 或 tab 横行制表符，在命令行中补齐指令 !word 重复运行最近一条以“word”开头的指令，如!ls 或 !l !$ 调用上一条指令的最后一个参数作为当前指令对象,如，假设上一条指令为： ls abc.txt bbc.txt 那么， vi !$ 相当于： vi bbc.txt !number 调用执行指定编号的历史记录指令,如!2, !11 参考引用 打造高效个性Terminal（一）之 iTerm | BlueSun 让你的Mac更Geek（逼格） - 简书 iTerm - 让你的命令行也能丰富多彩 - SwiftCafe 享受代码的乐趣 Mac下iTerm2光标按照单词快速移动设置 - CSDN博客 OS X 下的 iTerm 2 如何让 cursor 跳字移动？ · Ruby China iTerm2 快捷键大全 - 陈斌彬的技术博客 Mac 终端Terminal光标移动快捷键 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Terminal","slug":"Terminal","permalink":"http://iHTCboy.com/tags/Terminal/"},{"name":"iTerm进阶","slug":"iTerm进阶","permalink":"http://iHTCboy.com/tags/iTerm进阶/"},{"name":"命令行快捷键","slug":"命令行快捷键","permalink":"http://iHTCboy.com/tags/命令行快捷键/"}]},{"title":"装逼神句———有道词典命令行查询工具","date":"2018-01-29T00:49:16.000Z","path":"2018/01/29/2018-01-29_装逼神句———有道词典命令行查询工具/","text":"装逼说明不喜欢安装有道词典的应用程序，因为太耗资源还一堆广告，但是用浏览器打开dict.youdao.com也挺麻烦的，不是吗？快来试试有道词典命令行工具吧！ 看图装逼 自已装逼安装1npm install yddict -g 使用说明1yd &lt;要查询的单词&gt; 在/usr/local/lib/node_modules/yddict/目录下，可以进行一些自定义，或者更改查询的来源，主要源码 index.js： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#!/usr/bin/env nodeconst request = require('request');const cheerio = require('cheerio');const chalk = require('chalk');const fs = require('fs');const Spinner = require('cli-spinner').Spinner;const isChinese = require('is-chinese')const urlencode = require('urlencode');const spinner = new Spinner('努力查询中... %s');const home = process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];const configFile = home + \"/config.json\";let color = 'gray';//更改查询结果的文字颜色spinner.setSpinnerString('|/-\\\\');spinner.start();const readFile = (filename, encoding) =&gt; &#123; try &#123; return fs.readFileSync(filename).toString(encoding); &#125; catch (e) &#123; return null; &#125;&#125;;const config = JSON.parse(readFile(configFile,\"utf8\"));const input = process.argv.slice(2)const word = input.join(' ')const isCn = isChinese(word);const URL = isCn ? `http://dict.youdao.com/w/eng/$&#123;urlencode(word)&#125;`:`http://dict.youdao.com/w/$&#123;urlencode(word)&#125;`const options = &#123; 'url':URL&#125;;if(config)&#123; if(config.proxy)&#123; options.proxy = config.proxy; &#125; if(config.color)&#123; color = config.color; &#125;&#125;const color_output = chalk.keyword(color);request(options,(error, response, body)=&gt;&#123; const $ = cheerio.load(body, &#123; ignoreWhitespace: true, xmlMode: true &#125;); let result = ''; spinner.stop(true); if(isCn)&#123; $('div.trans-container &gt; ul').find('p.wordGroup').each(function(i,elm)&#123; result = $(this).text().replace(/\\s+/g,\" \"); &#125;); &#125;else&#123; result = $('div#phrsListTab &gt; div.trans-container &gt; ul').text(); &#125; // phrase if (result === '') &#123; result = $('div#webPhrase &gt; p.wordGroup').text(); &#125; // sentence if (result === '') &#123; result = $('div#fanyiToggle &gt; div.trans-container &gt; p:nth-child(2)').text(); &#125; console.log(color_output(result));&#125;); 装逼指导 kenshinji/yddict: 一个命令行查单词的工具💻 📚 npm-有道词典命令行查询工具 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"命令行查单词","slug":"命令行查单词","permalink":"http://iHTCboy.com/tags/命令行查单词/"},{"name":"有道词典","slug":"有道词典","permalink":"http://iHTCboy.com/tags/有道词典/"}]},{"title":"你好，2018！","date":"2018-01-01T13:49:16.000Z","path":"2018/01/01/2018-01-01_你好，2018！/","text":"德鲁克在《管理的实践》中写道：“管理者很多时候在做决策的时候，都是在分析未来有可能有什么市场环境的变化，这些变化会有什么机会。” 序言这一年，在生命中非常有意义的一年，从创业者离场，回到一个中型企业，改变非常大。从职场熟人到职场老油条？毕业不知觉已经3年多了，有时还会回忆美好的学生时代，有时在想大学时在努力一点，也许现在生活更加美好一点啦。一路走过的2017，经历了非常之多，是时候在尘封前记录下来吧！ 第一章 创业公司的离开想起2016年初，辞职后就跟同事开始了创业公司，见证公司从无名，到有名，到离开时6人的团队，也换过了鲜血，一路走过来，确实不容易。其实，刚开始有同事离开时，自己心里确实很难过，一起就是兄弟，一样拼博，刚开始想不通，内心不能接受，慢慢的就理解了，其实就像自己当初离开上家公司一样，地球总是在转运，我们的离开只是一点一滴，生活还在，大家都没有离开。开怀，要情商高，经历多了自然会提升。 其中，最想谈的，还是我们的老板，他让我相信，如果经历没有达到量变，思维能力是感悟不出来的，除了技术是死知识，活的能力，只有多经历，然后多听，听听别人的脑海，自己的世界就会更大！ 最后，很非常我们的团队，在这样创业环境中，我们努力了，进步了，虽然我们只是创业大军时的一个缩影，在这个美好的时代，能够参与创业，见证一个公司的成立，这是像一个生命的诞生，充满着创业者的心血，希望大家以后看到创业公司和创业者，要多一点理解和多一份帮忙，也许一个公司的生死就在你的手里~ 第二章 说走就走的旅行年初离职后，选择给自己放松一下，说走就走，最后选择了去云南看雪。有意思的事，朋友圈大家都说冬天去云南风景不够美。事实证明，也只有自己去到，才能感觉到当地风俗文化，建筑人情。春夏秋冬，风景别致！ 云南确实是一个不错的地方，丽江的古韵，香格里拉的风情，大理的庙石，昆明的春天，值得一去。 在夏末时，去惠州看海，比之前去的珠海更漂亮，海更大，水更青，一个周末的时间有点紧凑，所以享受不了海水的温暖，在一个异地，另有一番滋味~ 另外今年办了港澳通行证和护照，但是入职新公司，就是没有更多的时间能够真正的给自己去一个更好的，或者说更加幻想的地方，去体验更多的世界角落，更美好的东西，更漂亮的东西，更加广阔的眼界。希望2018年，给自己更多的高度和视觉，凤凰涅磐！ 第三章 团队的魅力在2017年之前的工作，虽然公司也有团队，但这个阶层是不一样的。之前都是自己负责iOS的全部开发工作，现在是，在一个iOS的团队里，这是一个团队协作！ 团队协作能力，一直是我缺失的重要一部分。工作不在是的一亩三分地，每做一个git commit 都要考虑清楚，不仅仅是对团队的影响，严重的会影响整个项目，并且整个项目你并不能够从整体上把握，这是很可怕的事情。一个big team，只有在一个团队中，才能感受到团队的力量，并且希望大家遵守规则，一起努力的做好。 团队管理能力，说到管理，层次提升了，需要的能力也更高了，咱现在的条件，我确实是没有这样的能力去做一个团队的管理。我希望自己能够再接再厉，今年努力的去尝试，管理的经验不会白来，自己要珍惜这样的机会。 第四章 公司的氛围拒绝老油条。 虽然我工作了几年，这个时候大家都变成老油条，工作的事件能推掉就推掉，能闲着就玩游戏，能早点下班了就早点走。不能说不把公司当成家，是没有错的；但是没有把工作做好，我觉得这是很不应该的。 希望自己拒绝老油条！务实基础，努力进取！ 公司的环境，是我工作以来，最好的氛围啦。 团队协作，git管理，谷歌搜索，英文文档，韩文文档，各种国外的文化，感受各地的特色，慢慢地发现自己太渺小了，自己了解了太少了，自己确实对这个世界并不熟悉。 “人穷志短”实在是太精辟了。最近大家说的『贫穷限制了我的想象力』，我是发现程序员们都越来越限制自己的能力，满足不了自己的工作，满足不了自己的欲望，只是轻声叹息。愿大家，不要把责任都推到公司，多从自己找些原因，然后克服自己，战胜自己！ 第五章 中年危机？二十七八的年轻人，开始考虑人生的发展和最终的归属，我不能说这是没有根据，但实在是自己给自己限制了想像力。 正如下图，给自己一个最终的目标吧，程序员职业发展路线： 其实我觉得没什么压不压力的，没什么中年不中年危机的，主要是因为你们的脑海中都是有家庭，上有老下有小，家庭压力大，然后在中国传统的世界观里面总是有家，然后就买房买车，要各种的生活需求。然后自己团不过气来吧！其实自己学会放松，无欲无求，也就这样子，就像国外的程序员一样，没有说什么，困不困难了，没工作就没工作，该生活还是要生活。把这种做技术和做管理作为一种自己的兴趣，把上班当成了自己的爱好，当成自己想要做的事情，那你就不会觉得有什么危机，工作就是你的生活，生活就是工作，把生活和工作作为生活的一部分，那也是一个很好的理想。还怕自己每天总是想着我被辞退，我被炒鱿鱼，甚至说我自己活不下去，我自己老了，又何必。学会居安思危，但是同时也不要杞人忧天。生活每天都是充满了挑战，充满了学习，自己快乐就好！但愿，你能懂！ 第六章 学习的动力2017年，在深蹲iOS中，也在耕耘Swift。专注于iOS开发，喜欢移动开发，在学习Android/Python/bash，希望自己能在脚本自动化方面下功夫，然后打造移动的自动化，完成从前端到后端的打通，实现自己的梦想。 学海无涯，量力而行。 第七章 2017计划 锻炼 健康 存钱 节俭 读书 学习 旅游 娱乐 锻炼健康：除了平时多吃水果外，还要每天晚上睡觉前也要运动一下，仰卧起坐之类的都可以做；还有周末有空一定要去跑一下步，多运动锻炼，更多的需要自觉，形成一个习惯了，才是一个长久之计。 存钱节俭：计划每月存固定的钱，绝对不能拿出来用，给自己定每月的花费。今年确实是可以存点钱，因为没有出去怎么玩，也没有什么高端爱好，2018继续勉励，不用卖的东西，绝不要买！ 读书学习：2017年，确认没有读完几本书，主要还是在工作中总结，总结自己的经历和实践。今年，主要专注移动自动化，当然希望领导、演讲、博弈、文化、经济等方面知识要多感悟，构建多个知识体系的大全观。同时，希望今年学2到3门编程语言吧，Python/Ruby/?。 旅游娱乐：长线：张家界、杭州、厦门、北京、西藏； 短线：香港、澳门、深圳、清远。 2018，旺！旺！旺！ “和真理一样，未来总是掌握在少数人手中。” 希望自己，像追求真理一样，努力成为少数人。 最后，用一句话总结和展望：“小伙子，要有耐心，打造你的核心技能，要想做出世界一流的工作，不单是好奇心，还需要那种改变世界的憧憬，去想象有一天，自己的工作对世界产生很大的影响。” 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"2018","slug":"2018","permalink":"http://iHTCboy.com/tags/2018/"},{"name":"年终总结","slug":"年终总结","permalink":"http://iHTCboy.com/tags/年终总结/"}]},{"title":"你真的懂使用Runtime进行swizzle的最佳写法？","date":"2017-11-18T13:15:16.000Z","path":"2017/11/18/2017_11_你真的懂使用Runtime进行swizzle的最佳写法？/","text":"前言runtime 的黑魔法很多人都一定听过，或者已经在使用了。但是，怎么swizzle方法才是最好呢？ 一般写法123Method originalMethod = class_getInstanceMethod(aClass, originalSel); Method swizzleMethod = class_getInstanceMethod(aClass, swizzleSel); method_exchangeImplementations(originalMethod, swizzleMethod); 或者是下面这种方式，swizzle第二种写法: 12345678Method originalMethod = class_getInstanceMethod(aClass, originalSel); Method swizzleMethod = class_getInstanceMethod(aClass, swizzleSel); BOOL didAddMethod = class_addMethod(aClass, originalSel, method_getImplementation(swizzleMethod), method_getTypeEncoding(swizzleMethod)); if (didAddMethod) &#123; class_replaceMethod(aClass, swizzleSel, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod)); &#125;else&#123; method_exchangeImplementations(originalMethod, swizzleMethod); &#125; 更好写法其它，这样写，一般不会有问题，但是在一些情况下，比如这个hook的类没有实现你要swizzle的方法，这时是没有swizzle成功的，然后你自己写的 swizzle 里又自己调用自己，就无限循环。 1234567891011121314151617Method originalInsMethod = class_getInstanceMethod(class, originalSelector);// 处理为实例方法if (originalInsMethod)&#123; method_exchangeImplementations(originalInsMethod, swizzledMethod);&#125;else&#123; // 处理为类方法 Method originalClassMethod = class_getClassMethod(class, originalSelector); if (originalClassMethod) &#123; method_exchangeImplementations(originalClassMethod, swizzledMethod); &#125;else&#123; // 如果hook的类没有实现这个方法，则先添加方法，然后设置方法的IMP为一个空block。否则直接class_replaceMethod，则方法实则没有交接 class_addMethod(class, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod)); method_setImplementation(swizzledMethod, imp_implementationWithBlock(^(id self, SEL _cmd)&#123;&#125;)); &#125;&#125; 总结至于这个为什么会更好？ 有时间在慢慢说啦~ 参考 利用ios的hook机制实现adobe air ios ane下appdelegate的动态替换 - CSDN博客 Method结构, SEL, IMP理解 - Vanbein’s Blog 深入理解 Objective-C 的方法调用流程 - 简书 [iOS]在运行时为类添加方法 Runtime中Swizzle时你可能没注意到的问题 - 简书 Hello World 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Runtime","slug":"Runtime","permalink":"http://iHTCboy.com/tags/Runtime/"},{"name":"swizzle","slug":"swizzle","permalink":"http://iHTCboy.com/tags/swizzle/"}]},{"title":"使用AutoLayout约束, 为啥图片的大小(Image size)却还以实际大小显示？","date":"2017-11-18T12:49:16.000Z","path":"2017/11/18/2017_11_使用AutoLayout约束, 为啥图片的大小(Image size)却还以实际大小显示？/","text":"问题给一个 UIImageView 设置一张图片时，使用 AutoLayout 给 UIImageView 约束宽高，但是实际显示的大小，图片以实际的大小显示出来，代码也没有设置 frame，设置contentMode为UIViewContentModeScaleAspectFit 也不起作用。 原因最后注册到约束时，设置了 @property NSLayoutPriority priority; ，就是设置了线束的优先级为UILayoutPriorityDefaultHigh，导致这个约束级别比图片默认显示的大小的优先级低。 解决方法如果开始一定要给一个低级的约束，那么要以约束大小显示时，在重新添加一个相同大小约束的UILayoutPriorityRequired，这样就会覆盖低优先级的约束，图片大小就不会超级约束范围。 参考 Hello World ios - With Auto Layout, how do I make a UIImageView’s size dynamic depending on the image? - Stack Overflow 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AutoLayout","slug":"AutoLayout","permalink":"http://iHTCboy.com/tags/AutoLayout/"},{"name":"Imagesize","slug":"Imagesize","permalink":"http://iHTCboy.com/tags/Imagesize/"},{"name":"图片实际大小显示","slug":"图片实际大小显示","permalink":"http://iHTCboy.com/tags/图片实际大小显示/"}]},{"title":"UIActivityIndicatorView的hidden隐藏属性没作用？","date":"2017-11-15T01:17:16.000Z","path":"2017/11/15/2017_11_UIActivityIndicatorView的hidden隐藏属性没作用？/","text":"现象创作的UIActivityIndicatorView，想当作一般的 View 使用，然后想隐藏时，把hidden属性设置为 YES；但是一直没有作用。 原因UIActivityIndicatorView有一个属性hidesWhenStopped。它默认为YES(true)。建议用这个属性来隐藏UIActivityIndicatorView，因为在一些异步和通知回调中，hidden属性起不到作用，可以参考我写的 GitHub Demo. // default is YES. calls -setHidden when animating gets set to NO 解决方案设置indicatorView.hidesWhenStopped属性，使用startAnimating、stopAnimating方法来按钮 UIActivityIndicatorView 是否显示，这样不管什么情况下，都可以正常。 1indicatorView.hidesWhenStopped = YES; 123456if (isShow) &#123; [self.loadingView startAnimating];&#125;else&#123; [self.loadingView stopAnimating];&#125; 参考 Hello World xcode6 - swift UIActivityIndicatorView .hidden = false not working - Stack Overflow ios - UIActivityIndicatorView hidden property is set to YES by default - Stack Overflow https://github.com/iHTCboy/UIActivityIndicatorViewDemo 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"UIActivityIndicatorView","slug":"UIActivityIndicatorView","permalink":"http://iHTCboy.com/tags/UIActivityIndicatorView/"},{"name":"hidden隐藏没效","slug":"hidden隐藏没效","permalink":"http://iHTCboy.com/tags/hidden隐藏没效/"}]},{"title":"iOS11适配UIToolbar无法点击问题","date":"2017-11-09T12:54:16.000Z","path":"2017/11/09/2017_11_iOS11适配UIToolbar无法点击问题/","text":"前言一个简单的浏览器，使用到UIToolbar做底部工具栏，在 iOS11 上就有点击无响应的问题。现在发现苹果一到大系统版本，很多 UIView的实现和生命周期都变化，他们系统不用兼容 iOS10，想怎么改就怎么改，没有顾虑，但是我们作为开发者只能受累。 iOS 11原因：Toolbar 在iOS11默认添加有_UIToolbarContentView，_UIToolbarContentView _UIButtonBarStackView覆盖在自定义的按钮上面，导致按钮无响应。 解决为了解决iOS11(与较低版本兼容)的问题，您只需要在UIToolBar被添加为UI层次结构的子视图之后，调用 layoutIfNeeded方法，UIToolbarContentView会降低到UIToolBar的第一个子视图，然后你就可以将所有的子视图添加到最顶层。 For example in ObjC: 12345UIToolbar *toolbar = [UIToolbar new];[self addSubview: toolbar];[toolbar layoutIfNeeded];&lt;here one can add all subviews needed&gt; 在创建成功后，使用layoutIfNeeded方法，让_UIToolbarContentView马上生效，这样在添加子视图就没有问题啦。 总结iOS11 上的 NavigationBar 好像也有相似的结构变化，每一次新系统，用户无愿意升级，开发者为适配要付出更多，一方面是苹果的改变压力在加大，系统的维护也是一个很大工作；另一方面 App 的界面越来越复杂，如果在搭建时没有设计好 UI 框架，部分依赖系统组件功能，导致受到影响也比较大。 参考阅读 Hello World ios - iOS11 UIToolBar Contentview - Stack Overflow iOS 11 breaks slacktextviewcontroller · Issue #604 · slackhq/SlackTextViewController 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"UIToolbar","slug":"UIToolbar","permalink":"http://iHTCboy.com/tags/UIToolbar/"},{"name":"iOS11","slug":"iOS11","permalink":"http://iHTCboy.com/tags/iOS11/"}]},{"title":"解决 iTunes 12.7 无法下载 AppStore应用的IPA包问题","date":"2017-10-30T05:04:16.000Z","path":"2017/10/30/2017_10_解决 iTunes 12.7 无法下载 AppStore应用的IPA包问题/","text":"问题描述苹果 iTunes 12.7 已经无法下载 ipa 包，如果想在 iTunes 12.7 使用已经无力回天。所以，只能降级！降级！降级！ 注：降级 iTunes 12.6.2 会导致无法识别到 iPhone8 / iPhone8 plus / iPhone X 设备， 2017.10月30号更新，下载 iTunes 12.6.3 支持 iPhone 8，iPhone X和iOS 11。 降级步骤1.下载旧的 iTunes 12.6首先下载旧包： 下载链接 下载 iTunes 12.6.3： Mac, PC 32-bit or PC 64-bit 支持 Mac 和 Windows! 2.卸载 iTunes 12.7如果你已经下载新版本，只能先卸载，否则无法安装。 3.安装 iTunes12.6.2.dmg以下以 Mac 电脑安装为例，windows 类似（但没有验证哦） 安装过程，要关闭一些应用，只能关闭不然无法安装： 安装时间有点长？最终是20分钟安装完，看电脑性能，又要换电脑了-_- 。 4.打开 iTunes 报错如果之前安装过 其它版本，打开时提示 iTunes安装完之后显示：不能读取文件‘iTunes Library.itl’’,说因为它是由更高版本iTunes所创建的。你要现在下载 iTunes 吗？ 解决方法 到 Music/iTunes 目录下，删除 iTunes 目录就可以，重启打开就正常 5.打开 iTunes 应用第一次打开 iTunes 是没有应用列表的，要点击如图设置： 6.又可以下载 ipa 啦，happy！ 总结目前这个方法在 10月30号还可以使用，后续不知道苹果会不会禁止，所以，iTunes 12.6 的安装包大家保存好啦~ 其实，苹果这个做也是迎合云端的趋势，现在已经很少有人在电脑上备份手机信息、通讯录、相片等，未来苹果也是希望用户使用 iCloud 来同步数据和备份数据。大家慢慢就习惯了，当然用 ipa 包另有所图的就这样啦~ 2017.10月30号更新方法2现在有另一种解决方案：苹果提供了一个版本的iTunes（12.6.3）的支持新的设备，iTunes 12.6.3包括支持iPhone 8，iPhone X和iOS 11设备的识别。Deploy apps in a business environment with iTunes - Apple Support 下载 iTunes 12.6.3： Mac, PC 32-bit or PC 64-bit* Deploy apps in a business environment with iTunesLearn how to deploy apps with iTunes. Apple offers Volume Purchase Programs and Apple Configurator on Mac to help enterprise environments manage and mass-deploy apps on iOS devices. But certain business partners might still need to use iTunes to install apps. Install apps with iTunesIf you’ve already installed a newer version of iTunes, you can download this version of iTunes on your Mac, PC 32-bit or PC 64-bit* and run the installer. After installation is complete, you can continue to deploy apps with iTunes.You won’t be prompted to download new versions of iTunes after you install this version. Manually update to the latest version of iTunes when you’re ready to upgrade. *Apple provides technical support only for the latest version of iTunes.Published Date: Oct 14, 2017 这个iTunes 12.6.3 是苹果10月14日更新的，最大特点是支持iPhone 8，iPhone X和iOS 11。根据苹果说明，提供 iTunes 12.6.3 来满足一些企业的需求，比如批量 iOS 部署，现在看来安装 iTunes 12.6.3 这个版本，应该是可下载 IPA 包的可行方案的权宜之计。** 参考 Hello World Apple - Support - iTunes Downloads app store - Get ipa file in Mac with iTunes 12.7 - Stack Overflow iphone - How do I download an iOS App (IPA) file to my Mac after iTunes 12.7 update? - Ask Different Apple still offers an iTunes version with App Store, Ringtones and other features removed in ‘focused’ iTunes 12.7 | 9to5Mac Deploy apps in a business environment with iTunes - Apple Support 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iTunes 12.7","slug":"iTunes-12-7","permalink":"http://iHTCboy.com/tags/iTunes-12-7/"},{"name":"下载IPA包","slug":"下载IPA包","permalink":"http://iHTCboy.com/tags/下载IPA包/"}]},{"title":"iOS11沙盒测试内购时重复提示登陆账号","date":"2017-10-28T11:44:16.000Z","path":"2017/10/28/2017_10_iOS11沙盒测试内购时重复提示登陆账号/","text":"问题目前在 iOS11.0.3上，通过储值登陆沙盒账号，得到错误“无法连接到iTunes商店” 或者 反复出现“登陆”界面。在ios10，我使用同样的沙盒帐户测试，则正常登陆并支付。 解决目前测试发现有效的方法： 在后台创建一个新的沙盒账号登陆，但是如果登陆成功后在登出，再次登陆时会重复弹出登陆界面。 把应用上传到 iTunes Connet，然后用 TestFlight 进行测试。 备注在苹果论坛上有很多人反馈，影响了很多开发者，有开发者因为苹果审核时沙盒登陆失败而被拒。但苹果尚未修复它，呵~ 参考 ios11 beta sandbox cannot connect to App Store | Apple Developer Forums iphone - iOS 11 - Is in app purchase testing using a sandbox user keeps asking to sign in for anyone else too? Forever loop? - Stack Overflow 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS11","slug":"iOS11","permalink":"http://iHTCboy.com/tags/iOS11/"},{"name":"sandbox","slug":"sandbox","permalink":"http://iHTCboy.com/tags/sandbox/"},{"name":"内购登陆反复","slug":"内购登陆反复","permalink":"http://iHTCboy.com/tags/内购登陆反复/"},{"name":"沙盒测试","slug":"沙盒测试","permalink":"http://iHTCboy.com/tags/沙盒测试/"}]},{"title":"教你如何强制显示一个竖屏的不能侧滑返回的SFSafariViewController","date":"2017-10-28T11:28:16.000Z","path":"2017/10/28/2017_10_教你如何强制显示一个竖屏的不能侧滑返回的SFSafariViewController/","text":"强制让控制器竖屏显示1234567891011121314151617181920- (BOOL)shouldAutorotate&#123; return NO;&#125;- (UIInterfaceOrientationMask)supportedInterfaceOrientations&#123; return UIInterfaceOrientationMaskPortrait;&#125;- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation&#123; return UIInterfaceOrientationPortrait;&#125;// 隐藏系统状态样- (BOOL)prefersStatusBarHidden&#123; return YES;&#125; 设置不让SFSafariViewController侧滑返回12345678910111213141516Swift:let viewController = SFSafariViewController(URL: url) presentViewController(viewController, animated: true) &#123; for view in viewController.view.subviews &#123; if let recognisers = view.gestureRecognizers &#123; for gestureRecogniser in recognisers where gestureRecogniser is UIScreenEdgePanGestureRecognizer &#123; gestureRecogniser.enabled = false &#125; &#125; &#125; &#125; 123456789101112131415OC: EFKRSafariViewController *safari = [[EFKRSafariViewController alloc] initWithURL:url]; safari.closeHandler = completion; [self presentViewController:safari animated:YES completion:^&#123; // 禁止侧滑返回，因为侧滑返回导致强制竖屏会变回横屏 for (UIView * view in safari.view.subviews) &#123; NSArray&lt;__kindof UIGestureRecognizer *&gt; * array = view.gestureRecognizers; if (array.count) &#123; for (UIScreenEdgePanGestureRecognizer * sepgr in array) &#123; sepgr.enabled = NO; &#125; &#125; &#125; &#125;]; 如何创建继承SFSafariViewController的控制器，在里面添加上面的代码就可以啦！ 总结有时候，我们在修改系统的控件属性时，总是希望想找到一个属性方法设置后，就可以达到自己想要的 UI或者逻辑，但其实，系统不可以提供那么多自定义的 API，所以，我们只能通过自己去找到想要的东西，然后去修复它，达到目的。类似的思想，比如hook。代码上也是很其妙。 参考扩展 SFSafariViewController in iOS 9.2 | Apple Developer Forums ios - Safari View Controller Swipe Left to dismiss goes black - Stack Overflow 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"SFSafariViewController","slug":"SFSafariViewController","permalink":"http://iHTCboy.com/tags/SFSafariViewController/"},{"name":"iOS侧滑返回","slug":"iOS侧滑返回","permalink":"http://iHTCboy.com/tags/iOS侧滑返回/"},{"name":"强制竖屏","slug":"强制竖屏","permalink":"http://iHTCboy.com/tags/强制竖屏/"}]},{"title":"AppStore 应用的本地化显示语言到底是什么决定的？","date":"2017-10-28T11:04:16.000Z","path":"2017/10/28/2017_10_AppStore 应用的本地化显示语言到底是什么决定的？/","text":"本地化 App Store 信息iTunes Connect 本地化说明： 在添加 App 至您的帐户之后，您可以添加语言并输入您的 App 在 App Store 中显示的本地化信息。若要查看您可以本地化 App 元数据的语言和语言区列表，请参见 App Store 本地化。若要了解您可以本地化的属性，请参见必填项、可本地化以及可编辑的属性。 例如，如果主要语言设置为英文，那么该信息在所有 App Store 地区中都会显示为英文。如果您为您的 App 添加了法文并对文本、关键词和屏幕快照进行了本地化，那么语言设置为法文的用户会看到法文的本地化内容。所在地区支持法文（而非英文）的用户，也会看到法文的本地化内容。用户也可以在所有法语 App Store 中使用本地化关键词搜索到您的 App。在其他 App Store 地区，用户会看到以主要语言显示的信息（本示例中为英文）。 用户在设备上设置的语言控制 App Store 中显示的本地化内容。 如果没有与设置语言匹配的可用本地化内容，将显示最接近的本地化内容。如果您需要显示特定语言区的元数据，请在您的 App 中添加特定语言区的语言——例如，添加法文（加拿大）。无论用户设备的语言设置如何，您 App 的 App Store 网址（URL）都是相同的。 您在 iTunes Connect 中添加到 App 中的语言与您在 Xcode 中添加到 App 中的语言不同。您在 Xcode 中添加的语言在 App Store 中的“语言”下显示。若要本地化您 App 的二进制文件，请参阅“Internationalization and Localization Guide（《国际化和本地化指南》）”。 【重要事项】仅当 App 状态为可编辑时，您才可以管理语言。 问题总结1.主要语言是指什么？有什么作用？ 如果某个 App Store 地区没有提供本地化的 App 信息，那么 App 信息将以主要语言呈现。如果您没有看到想要使用的支持语言，请参阅 常见问题。 也就是，在新建App时，苹果要求选择 主要语言（其实就是至少有一种本地化语言）： 应用创建好后，还可以更改主要语言，前提是有创建了2个以上本地化语言： 所以，主要语言的作用就是 作为应用在 AppStore 上显示的主本地化语言。也就是说，如果应用只支持一种本地化语言，那么在所以 AppStore 上都是显示一样的语言。那么如果有2种本地化语言，又怎么显示呢？ 2.如果应用支持2种本地化语言，用户在 AppStore 上会显示那种本地化语言呢？假如应用支持 英文(英国)（主要语言）和法文： 用户操作系统中设置本地化的语言为英文，应用支持英文，则显示英文 App Store ; 用户操作系统中设置本地化的语言为法文，应用支持法文，则显示法文 App Store ; 用户操作系统中设置本地化的语言为中文的中国账号用户，因为在中国地区不支持英文和法文（按苹果支持语言列表查询），则显示主要语言：英文 App Store ; 用户操作系统中设置本地化的语言为中文的法国账号用户，因为在法国地区支持法文, 英文（英国）（按苹果支持语言列表查询），则优先显示排前语言：法文 App Store 。（参考下图） 可以得出， 应用在 AppStore 显示的本地化语言顺序，如果应用支持用户设备操作系统中设置本地化的语言，那么应用在 AppStore 本地化以操作系统中设置本地化的语言来显示。如果设置本地化的语言不被应用支持，以用户账号所在地区支持的本地化语言为显示，如果支持多种，排序在前为准。如果用户账号所在地区支持的本地化语言不被应用支持，那么以应用设置的主要语言显示。 苹果默认 AppStore 多数地区本地化都支持 英文（英国），加拿大、美国、澳大利亚除外: 3.我的 app 信息已本地化，它在 App Store 上为什么不以特定的语言显示？要在 App Store 上看到您的 app 的特定本地化内容，您需要更改 OS X 或 iOS 的语言。 OS X：&gt; 退出 iTunes 前往“系统偏好设置”中的“语言与地区” 添加新的语言，或将所需语言拖放到语言列表的顶部 打开 iTunes 点按“iTunes Store”按钮 滚动到页面底部 点按页面右侧的当前地区图标 选取所需的 App Store 的地区 搜索您的 App，此时应能看到您提供的本地化信息 iOS： 按两次主屏幕按钮，然后将 App Store 扫出屏幕，从而关闭 App Store 前往“设置”&gt;“通用”&gt;“多语言环境”&gt;“语言” 轻按所需的语言 轻按“完成” 打开 App Store 并滚动到页面底部 如果已经登录，则轻按您的 Apple ID，然后轻按“注销” 轻按“登录” 轻按“创建 Apple ID” 选取所需的地区并轻按“下一步” 显示语言将发生变更。如果您不想创建新的 Apple ID，则轻按以新的语言显示的“取消” 搜索您的 app，此时应能看到您提供的本地化信息 要查看原始语言的本地化内容，请重复上述步骤，然后用您现有的 Apple ID 登录。 更多参考 本地化 App Store 信息 - iTunes Connect 开发人员帮助 本地化 - iTunes Connect 资源和帮助 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore","slug":"AppStore","permalink":"http://iHTCboy.com/tags/AppStore/"},{"name":"Localization","slug":"Localization","permalink":"http://iHTCboy.com/tags/Localization/"},{"name":"应用本地化语言","slug":"应用本地化语言","permalink":"http://iHTCboy.com/tags/应用本地化语言/"}]},{"title":"为新 iPhone X 添加启动图片","date":"2017-10-28T10:53:16.000Z","path":"2017/10/28/2017_10_为新 iPhone X 添加启动图片/","text":"Xcode9 的 iPhone X 启动图片iPhone X 启动图片大小： Portrait size ： 1125px × 2436px Landscape size：2436px × 1125px 在 Xcode9 中位置： 启动图片尺寸： 目前是 iTunes 上传没有强制要求与说明，但是如果没有在 iPhoneX显示会上下留黑边，最好现在开始添加，苹果建议使用 storyboard 创建启动图片，但是要注意 iPhoneX 高度约束问题。网上给了一个应用没有iPhoneX启动图时打开的效果： 最新消息，iPhone X 的屏幕快照可选性在 iTunes Connet 后台上传，因为昨天 iPhoneX 可预定啦！ iTunes Connect 现已支持 iPhone X 屏幕快照2017年10月27日 现在，您可以为 iPhone X 上传屏幕快照。您将在 iOS App 版本信息页的“App 预览和屏幕快照”下方看到一个针对 5.8 英寸显示屏的新标签。请注意，iPhone X 的屏幕快照为可选项，且不能用于更小尺寸的设备。在 iPhone 上运行的所有 App 仍需提供 5.5 英寸显示屏的屏幕快照。iPhone X 屏幕快照分辨率1125 x 2436（纵向）2436 x 1125（横向）在《iTunes Connect 开发人员帮助》中了解更多关于上传屏幕快照的信息。了解更多有关为 iPhone X 更新 App 的信息。 参考 Launch Screen - Icons and Images - iOS Human Interface Guidelines ios - iPhone X: Incorrect launch-screen orientation used - Stack Overflow iTunes Connect 现已支持 iPhone X 屏幕快照-2017年10月27日 Submitting iOS apps to the App Store - Apple Developer 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"LaunchScreen","slug":"LaunchScreen","permalink":"http://iHTCboy.com/tags/LaunchScreen/"},{"name":"Xcode9","slug":"Xcode9","permalink":"http://iHTCboy.com/tags/Xcode9/"},{"name":"iPhoneX","slug":"iPhoneX","permalink":"http://iHTCboy.com/tags/iPhoneX/"}]},{"title":"Xcode8报错：\"Framework not found IOSurface for architecture arm64\"或者 \"Framework not found FileProvider for architecture x86_64/arm64\".","date":"2017-10-27T00:33:16.000Z","path":"2017/10/27/2017_10_Xcode8报错：Framework not found IOSurface for architecture arm64 或者 Framework not found FileProvider for architecture x86_64:arm64./","text":"Xcode8 编译报错： Framework not found IOSurface for architecture arm64或者 Framework not found FileProvider for architecture x86_64/arm64. 原因IOSurface.framework和 FileProvider.framework是 iOS11 新增加的库，但 Xcode8下没有这个库。打包静态库的时候，有一个Link Frameworks Automatically设置，默认为YES，会自动链接框架。所以Xcode 9打包的静态库时，在Xcode 8项目编译时候会提示找不到 IOSurface.framework和 FileProvider.framework。 题外话，这个在 Xcode5 和 Xcode6 过度时，Metal.framework 时发生过，可能过了就忘记了。也发现 Xcode 很多特性平时没有注意，有空真要多看看 LLVM 的知识。 结果如果原厂升级到 Xcode9，则不受影响。如果 Xcode8 编译报错，网上最初给出的方案，在 Xcode8 中添加IOSurface.framework和 FileProvider.framework后打包，结果最后坑定了！ 在 Xcode8 中添加IOSurface.framework和 FileProvider.framework后打包，上传iTunes Connet 报错： 正解解决方案 Build Settings 中 Link Frameworks Automatically 把默认Yes 改成 No ，在 Xcode8 编译就能通过。 参考&amp;扩展阅读 ios8 - XCode 6 GM: linker error when building for device (Metal not found) - Stack Overflow New Features in Xcode 5 XCode’s New “Link Frameworks Automatically” &amp; How to Fix “framework not found Metal for architecture armv7” ios - Framework not found IOSurface for architecture arm64 - Stack Overflow ios - When do you have to link Frameworks and Libraries to an XCode project? - Stack Overflow Don’t we need to link framework to XCode project anymore? objective c - @import vs #import - iOS 7 - Stack Overflow Modules和Autolinking的介绍与使用 - 简书 xcode 新特性的 一点理解 enable module 和 link frameworks automatically - 滴水成川 - CSDN博客 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Framework not found","slug":"Framework-not-found","permalink":"http://iHTCboy.com/tags/Framework-not-found/"},{"name":"IOSurface","slug":"IOSurface","permalink":"http://iHTCboy.com/tags/IOSurface/"},{"name":"Xcode9","slug":"Xcode9","permalink":"http://iHTCboy.com/tags/Xcode9/"}]},{"title":"沙盒测试账号：不允许创建 iTunes 账户","date":"2017-10-27T00:33:16.000Z","path":"2017/10/27/2017_10_沙盒测试账号：不允许创建 iTunes 账户/","text":"1.出现情况 在设置里登陆沙盒账号提示： 不允许创建 iTunes 账户此 Apple ID 目前无法用于 iTunes Store, 请稍后重试 正确方式： 沙盒测试账号只能在测试应用点击储值时，弹窗中输入账号，不能在设置里的 App Store 里添加。 苹果的文档也有说明，测试账号不能在设置里登陆 ： Important: Don’t enter your test account information in the Store settings panel. Doing so may invalidate your test account. 2. 正确的沙盒测试流程 To perform testing for in-app purchase products Set up test user accounts within Users and Roles in iTunes Connect, as detailed in Creating Sandbox Tester Accounts in iTunes Connect Developer Guide.You’ll need a test user for each territory you want to test the app in. Clear any account information stored on your test device. In Settings, go to the Store settings. Click the Sign Out button.This prevents an actual user account from automatically being used when testing. Important: Don’t enter your test account information in the Store settings panel. Doing so may invalidate your test account. Connect your test device to your Mac. In Xcode, set your test device as your scheme’s destination. Open your app, and perform your in-app purchase product testing. Use your test account credentials to test the purchase.When your app uses the Store Kit API to request a payment, you’re asked to sign in. Select Use Existing Account and enter your test account user name and password. You are then asked to confirm the purchase. The transaction completes.No financial transaction takes place, but a receipt is generated for a successful transaction. 3.参考： Testing Your App and In-App Purchase Products unable to log in with sandbox test users on device 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Sandbox","slug":"Sandbox","permalink":"http://iHTCboy.com/tags/Sandbox/"},{"name":"iTunes账户","slug":"iTunes账户","permalink":"http://iHTCboy.com/tags/iTunes账户/"},{"name":"沙盒测试","slug":"沙盒测试","permalink":"http://iHTCboy.com/tags/沙盒测试/"},{"name":"沙盒账号","slug":"沙盒账号","permalink":"http://iHTCboy.com/tags/沙盒账号/"}]},{"title":"Xcode9 打包App Store Icon(1024xp) WARNING ITMS-90704 -90717 问题解决","date":"2017-10-12T01:00:16.000Z","path":"2017/10/12/2017_10_Xcode9 打包App Store Icon(1024xp) WARNING ITMS-90704 -90717 问题解决/","text":"Xcode9 打包，上传 iTunes Connet 报错，提示需要在icon添加一张 Marketing 1024x1024 的图标 WARNING ITMS-90704: “Missing Marketing Icon. iOS Apps must include a 1024x1024px Marketing Icon in PNG format. Apps that do not include the Marketing Icon cannot be submitted for App Review or Beta App Review.” Xcode9 中需要添加： 如果是 Xcode8还是在 iTunes Connect 后台添加 1024x1024 图标： App Store 1024x1024px 图标规范用 Xcode9 打包后上传 iTunes Connet 报错： ERROR ITMS-90717 Invalid App Store Icon. The App Store Icon in the asset catalog in ‘Some.app’ can’t be transparent nor contain an alpha channel. 原因：Xcode9中 1024x1024的图标只能 Alpha通道为否的 png 或 jpg 图片。 总结 App Store Icon (1024px)图标在 Xcode9 中只能放置不透明（没有 alpha通道）的 png 或 jpg 格式图片。 参考： Marketing/App Store Icon PNG transparency issue | Apple Developer Forums Add an App Store icon - Xcode Help ERROR ITMS-90717 - 简书 添加一个 App Store 图标 - iTunes Connect 开发人员帮助 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"App Store Icon","slug":"App-Store-Icon","permalink":"http://iHTCboy.com/tags/App-Store-Icon/"},{"name":"ITMS-90704","slug":"ITMS-90704","permalink":"http://iHTCboy.com/tags/ITMS-90704/"},{"name":"ITMS-90717","slug":"ITMS-90717","permalink":"http://iHTCboy.com/tags/ITMS-90717/"},{"name":"Xcode9","slug":"Xcode9","permalink":"http://iHTCboy.com/tags/Xcode9/"}]},{"title":"Xcode快捷键 高效必记","date":"2017-03-27T13:58:16.000Z","path":"2017/03/27/2017_03_Xcode快捷键 高效必记/","text":"前言最近入职，忙于公司业务熟悉与熟练。工作三年了，上一年在创业公司，更多的是学习公司生存法则，忙于产品开发，没有好好总结，有机会也可以写写创业公司那么事，对个人而言是宝贵的经历。所以，最近在工作中，也会慢慢总结一下自己经验，然后思考一下，也当学习分享，一起进步！所以今天就先从IDE效率总结开始啊！ Xcode快捷键文字版有空在编辑，上个图片版先！个人认为这些背下来，都是提高效率不少！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Xcode","slug":"Xcode","permalink":"http://iHTCboy.com/tags/Xcode/"},{"name":"快捷键","slug":"快捷键","permalink":"http://iHTCboy.com/tags/快捷键/"}]},{"title":"再见2016","date":"2016-12-31T15:25:26.000Z","path":"2016/12/31/2016_再见2016/","text":"罗曼.罗兰说：“世界上只有一种真正的英雄主义，就是在认清生活真相之后仍然热爱生活。” 序言这一年，改变非常大，从职场新人到职场老人？毕业不知觉已经2年了，完全离开学生时代，有时候回想，学生的努力还不够，在校园学习的时光永远是美好的。一路过来，快愉。现在睡在2016年最后一天，是时候来总结一下！ 第一章 创业公司的开始想起年初，辞职后就跟同事开始了创业公司，公司从无名，到有名，到现在6人的团队，一路走过来，确实不容易。 说点实在的吧。在医美行业，完全不了解，整容在这之前给我的第一感觉就是手术，无法想法为美而整形的女生。然后接着开始努力补缴医美行业知识，发现这个行业有太多东西要学习，从一个外行人，慢慢变成一个不外不内的人啊-_-.. 没有成为内外人，确实不像我们老板那样，在这个行业一直做了二十几年，需要的敢气不是每个人都可以做到。年轻的时候，自己还是不敢认定一个行业，还是想多出去走走，多看看世界。 回顾起来，还是感谢当初公司给我这个机会，忙碌的前3个多月开发出一款产品，就像自己小孩一样，每天看到他长大，完成不一样的感觉。用了那么多心血，加了一个多月的班，我们都是怀着同样的梦想，一起向着目标出发，真的，就像我们在创业，我们产品随时可以深受用户喜爱。 说到创业公司，没有经历过从0到1的过程，真的不能想象，这是像一个生命的诞生，一个公司的长成，不是随便就成长，所以现在看到大厂，让我觉得老板都不容易，也明白了，为什么老板都想垄断，因为付出的努力和面对的风险，不是一般的打工心态的员工能想像的。现在我也许能想像了，但是老板的思维还是没有。老板总是从效益看问题，比如一个产品，并不是我们技术人员那样：能不能实现？怎么实现？技术未来如何？ 老板只会问：这个产品比别人强那里？多久能上线？能赚到大钱？ 在创业公司的这一年，看着公司成长，每天的运营，就像一颗树成长一样，经历的东西，真的很多说不出来，以后有机会，可以另外淡淡。看着公司成长，同时自己也学习到非常多的东西，运营、推广、策划、市场。一句话总结就是：努力并改变着，压力并前进着，无奈并期盼着。 第二章 生活的闲心记得不很清楚，一年过去了，都不知道做了什么呢。周末双休，本来打算在家可以多看几本书，现在看到也没能看多少本。 前半年一直忙着项目，然而并没有很好执行16年计划表，没有运动，没有锻炼，没有好好休息。后半年一直调整身体，也没有很好的学会生活，或者说不懂得生活，除了工作和学习，其它爱好也没有培养一下。可能我自己是工作狂人吧，只是自己不知道。 希望新的一年里，自己能好好的利用时间，好好的享受生活，享受工作，让自己的世界里，快乐与幸福！ 第三章 说走就走的世界今年真的没有去那里玩，计划的每月一游，也没有做到。也许工作真的身不由已，也许时间真的不是自己的，也许很多事情要我们去完成，但是我们不能为了工作而工作，说就是这样。生活的向往，就是工作的动力，去旅游的心情也是希望看到更多世界角落，从眼中看风景，然后在风景里看到别人工作，自然就会明白，生活就是工作，工作也是生活，从来没有公开的一清二楚。把生活和工作分得太开的人，都不太会生活吧。 除了广西广东，第一次离开南方，去了上海，想出去看看世界。上海是中国内地的金融中心，从民国就是外国人的一个大门，很多外国公司设立，相对广州，上海给我的感觉是，繁华的地方更繁华，田园的风景也是田园，并不会因为多了更多的高楼显得更大城市。在上海，大城市的感觉就是，地铁方便，公车没太多人，便利的地方更多完善。生活节奏，个人感觉没有广州快，比如吃早餐，上海的生煎，煎饼果子都是比广州的包点制作麻烦的，广州早餐蒸好装袋就ok，当然广州早上喝粥也是很清爽的一天。或者喝个早茶，对于上班族来说，只能想想了。总的来说，上海有上海的好，高楼大厦给了我们对城市的渴望。想起高中对于未来根本没有想法，只是听大人们说，现在认真读书，以后对自己会更好，也确实是这样，多读书没有错。如果读对书，那么应该更好。 珠海因为格力让大家都注意到，地理位置在澳门旁边，所以，发展也可以，主要的公交车也很方便，地形山丘多，所以旅游业相对好，交通其实不算方便，去珠海长隆海洋王国，45分钟的客车也不远。那天晚上看完烟花，返程时，一堆人，根本没有公车过来，也根本上不了车，准备11点了，太晚了，的士加价，黑车不敢坐，用手机打开滴滴，发现一百元内也能接受，就滴滴了，其实一路上也有点害怕，人生地不熟，车在开着，外面的风景一片黑，远远看去对面的澳门，依然光辉四射。所以，移动互联网还是改变了传统行业，有些我们接触不到的，就没有深深感受到吧，2017年，中国的移动互联网将改变的更快更深入更全面吧。 第四章 身心冥想不可否认的是，今年真的没有去长跑了。 吃了准备9个月的药品，已经不是第一次发现生命的感觉。幸与不幸，人云亦云。 病这事，如果没有生病，自己还以为自己很强大；一但生病，在中国依然病不起，无数的例子每天都在发生。每次都感觉自己很幸运，也很不幸运。 在医院里，我看到太多不幸，原因就是我们的医疗意识太薄弱了，根本不把病看在眼里，总以为身体自己能调节好，身体自己能恢复。感冒2个星期还不懂着去看医生，总感觉自己下个星期就会好。也许正是我们的自大与无知，让自己的生命跟自己开了一场玩笑。然后我们只看到我们社会的不是非，而没有自己珍惜锻炼身体的时间与机会。 时刻怀着感恩的心，上天给了你一次机会，依然需求你去珍惜。 钱不是万能的，但有钱却能解决很多问题，“人穷志短”实在是太精辟了。当你没有钱的时候，你会看重很多你不应该看重的东西，很多东西你可以用钱买来（比如技术和别人的经历）但你不愿意，因为你手上钱不多所以要省省是吧。结果你只能花自己的时间去琢磨，而等你琢磨透时商机已去！ 第五章 生活的一两点2017计划： 重新锻炼 节俭存钱 读书厨艺 工作游玩 锻炼：加油！每天多走走，多呼吸。 存钱：哈哈！节俭开始！毕业那时，感觉自己开始有自己的工资了，然后大笔的花了，用了，现在才发现，自己买了很多无用，或者体验不到生活品质的消费，生活需要理性节俭。 读书：如烂笔头！读书改性，让人聪慧。 游玩：听君一言！ 第六章 学习的一两点 iOS android swift python React-Native 2016年iOS一条路走到黑了，现在回头一看，进步的也很大，15年的自己太年轻了，慢慢的，自己进步也变得慢了。 学习的安卓没有进步了，swift也开始熟悉起来，混合开发也在学习，h5也在学习，js也在接触。发现大学没有好好学的，现在也要开始学，所以，知识是不管用不用上，多学点准没错，人生不等闲。 2017年，专注于iOS开发，喜欢移动开发。 学海无涯，量力而行。 第七章 2017计划 锻炼健康 存钱节俭 读书学习 旅游娱乐 锻炼健康：除了锻炼，还要多关注自己的体重，由于天天坐办公室，肚子会大，同时加班、熬夜等，要早睡，多吃水果等。 存钱节俭：计划每月存固定的钱，绝对不能拿出来用，给自己定每月的花费。同时，也要节俭，不用卖的东西，绝不要买。 读书学习：主要专注移动开发，还有领导、演讲、博弈、文化、经济等，多个知识体系的大全观。希望今年学2到3门编程语言吧。 旅游娱乐：长线：昆明、张家界、杭州、北京、西藏； 短线：深圳、清远、东莞、（香港、澳门） 2017，鸡动人新！ “每一天都是余生最年轻的一天，人生永远没有太晚的开始”。 事实上，任何行业都需要至少1万小时的积累，你不想承认这个规律，你希望自己努力一个月，就赶紧成为业界大神。 最后，用一句话总结： 这是一个最好的时代，也是一个最坏的时代，但这是我们自己的时代。","tags":[{"name":"2017","slug":"2017","permalink":"http://iHTCboy.com/tags/2017/"},{"name":"年终奖","slug":"年终奖","permalink":"http://iHTCboy.com/tags/年终奖/"},{"name":"年终总结","slug":"年终总结","permalink":"http://iHTCboy.com/tags/年终总结/"},{"name":"草从集","slug":"草从集","permalink":"http://iHTCboy.com/tags/草从集/"}]},{"title":"React Native项目Xcode打包发布iOS问题","date":"2016-12-25T12:45:16.000Z","path":"2016/12/25/2016_React Native项目Xcode打包发布iOS问题/","text":"Xcode打包分布准备对于新手来说，如果是混合开发或者纯RN应用开发好后，想打包上线了，却发现官方文档没有找到详细打包的流程文档，对于完全没有经验的新手真的不太好友。下面是参考资料总结而成： 1、打包命令 react-native bundle，在RN项目根目录下：1react-native bundle --entry-file index.ios.js --platform ios --dev false --bundle-output ios/ios.jsbundle 参数：–entry-file ：ios或者android入口的js名称，比如index.ios.js–platform ：平台名称(ios或者android)–dev ：设置为false的时候将会对JavaScript代码进行优化处理。–bundle-output,：生成的jsbundle文件的所在目录和名称，比如 ios/ios.jsbundle。 在当前项目中，输入上面命令，然后在ios/目录下生成2个离线包： 123456789101112131415$ react-native bundle --entry-file index.ios.js --platform ios --dev false --bundle-output ios/ios.jsbundle[2016-12-25 19:55:01] &lt;START&gt; Initializing Packager[2016-12-25 19:55:01] &lt;START&gt; Building in-memory fs for JavaScript[2016-12-25 19:55:01] &lt;END&gt; Building in-memory fs for JavaScript (88ms)[2016-12-25 19:55:01] &lt;START&gt; Building Haste Map[2016-12-25 19:55:02] &lt;END&gt; Building Haste Map (1091ms)[2016-12-25 19:55:02] &lt;END&gt; Initializing Packager (1212ms)[2016-12-25 19:55:02] &lt;START&gt; Transforming files[2016-12-25 19:55:15] &lt;END&gt; Transforming files (13122ms)bundle: startbundle: finishbundle: Writing bundle output to: ios/ios.jsbundle(node:8023) DeprecationWarning: Using Buffer without `new` will soon stop working. Use `new Buffer()`, or preferably `Buffer.from()`, `Buffer.allocUnsafe()` or `Buffer.alloc()` instead.bundle: Done writing bundle outputAssets destination folder is not set, skipping... 运行上面命令后，在项目的ios文件夹下看到 ios.jsbundle、ios.jsbundle.meta。 2、iOS项目中导入包 3、修改项目中BundleURL修改AppDelegate.h的定向URL，需要注意的是名字要跟你生成的jsbundle的名字一致。 123// jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index.ios\" fallbackResource:nil]; jsCodeLocation = [[NSBundle mainBundle] URLForResource:@\"ios\" withExtension:@\"jsbundle\"]; 如果项目是混合开发，那么用到BundleURL的地方也要改成这个BundleURL地址。 如果修改了项目的js文件，那么就要重新打包一次，或者利用热更新机制更新。 参考 React Native ios打包 - 简书 React Native iOS打包，给用户生成ipa文件 - 简书 React Native程序部署至iOS应用商店之前需要的配置和如何生成release版本的APK包 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"RN","slug":"RN","permalink":"http://iHTCboy.com/tags/RN/"},{"name":"ReactNative","slug":"ReactNative","permalink":"http://iHTCboy.com/tags/ReactNative/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"打ipa包","slug":"打ipa包","permalink":"http://iHTCboy.com/tags/打ipa包/"}]},{"title":"iOS应用显示一直安装，重启无效，也删除不了问题","date":"2016-12-23T06:23:16.000Z","path":"2016/12/23/2016_iOS应用显示一直安装，重启无效，也删除不了问题/","text":"解决方法 在AppStore搜索这个应用，看到应用还在下载，点击取消，桌面的加载中的应用就消失了！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"应用无法安装","slug":"应用无法安装","permalink":"http://iHTCboy.com/tags/应用无法安装/"}]},{"title":"iOS读取文件Bundle pathForResource方法返回nil问题","date":"2016-11-29T09:19:16.000Z","path":"2016/11/29/2016_iOS读取文件Bundle pathForResource方法返回nil问题/","text":"检查代码1234567oc: NSString* soundPath = [[NSBundle mainBundle] pathForResource:@\"wakeup\" ofType:@\"caf\"]; NSLog(@\"soundPath:%@\", soundPath); swift 3.0: let audioFile = Bundle.main.path(forResource: \"frogs.m4a\", ofType: nil) print(audioFile) 代码反复看了，clear工程n次，手机删掉项目n次，还是返回空，然后测试了一些pdf，png，mp3文件有路径返回，瞬间晕倒了 问题所在音频文件没有包含到项目资源中，手工添加就可以了！ 总结这种问题，不是代码多好多好就可以，一个问题，不只是知识点问题，可能对知识抱有怀疑，可以查正，如果发现查不到，然后这个问题是出在工具上，如果我直接新建一个工程，然后没有问题了就不管了，如果没有从根源上解决，下次出现也不能解决，这就是经验。 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Bundle","slug":"Bundle","permalink":"http://iHTCboy.com/tags/Bundle/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"pathForResource","slug":"pathForResource","permalink":"http://iHTCboy.com/tags/pathForResource/"}]},{"title":"清除Xcode的Archives列表的无用Apps","date":"2016-11-21T09:36:16.000Z","path":"2016/11/21/2016_清除Xcode的Archives列表的无用Apps/","text":"Archives目录当有多个账号同时登陆Xcode时，有一些应用不在本机发布，就会出现下图的空列表： 删除你一定非常想删除这样的列表，但是Xcode中却没有删除功能！ 进入目录：~/Library/Developer/Xcode/Products 删除对应无用的应用就可以！！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Archives","slug":"Archives","permalink":"http://iHTCboy.com/tags/Archives/"},{"name":"Xcode","slug":"Xcode","permalink":"http://iHTCboy.com/tags/Xcode/"}]},{"title":"NSDateFormatter的hh与HH和yyyy与YYYY出坑","date":"2016-10-11T15:30:16.000Z","path":"2016/10/11/2016_NSDateFormatter的hh与HH和yyyy与YYYY出坑/","text":"原因最近发现应用的倒计时显示为00:00:00，开始以为后台给的时间问题，然后怀疑是缓存问题，跟着代码调试了很久，终于发现原因。 123NSDateFormatter *formatter = [[NSDateFormatter alloc] init];formatter.dateFormat = @\"yyyy-MM-dd hh:mm:ss\";NSDate *nowDate = [formatter dateFromString:currentTime]; 发现一台设备调试显示： nowDate == nil 其它设备日期显示正确 解决 @”yyyy-MM-dd hh:mm:ss”; 改成 @”yyyy-MM-dd HH:mm:ss”; hh:mm:ss按照12小时制的格式进行字符串格式化如果时间处于00：00：00——12：59：59，则返回的字符串正常如果时间处于13：00：00——23：59：59，则返回的字符串是实际时间-12小时后的值，也就是说比真实的时间少了12个小时。 HH:mm:ss按照24小时制的格式进行字符串格式化 当手机时间为任意一个区间，则返回的字符串都是正常的。 参考时间格式化hh:mm:ss和HH:mm:ss区别NSDateFormatter的yyyy和YYYY到底什么区别 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"HH","slug":"HH","permalink":"http://iHTCboy.com/tags/HH/"},{"name":"NSDateFormatter","slug":"NSDateFormatter","permalink":"http://iHTCboy.com/tags/NSDateFormatter/"},{"name":"YYYY","slug":"YYYY","permalink":"http://iHTCboy.com/tags/YYYY/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"iOS CoreSpotlightSearch探索之道","date":"2016-06-18T10:17:16.000Z","path":"2016/06/18/2016_iOS CoreSpotlightSearch探索之道/","text":"前言看到上图的搜索结果，找完了文档都没有发现这个效果怎样实现，我也是醉了，然后不小心看到下图，我相信有方法能实现，只是现在还没有发现！ 研究了几天，还是让我找到了结果，苹果还是不行啊，还是我不行？反正一路过来，不容易！！自己想实现的效果，含泪也要实现出来—.— 下面就是探索之道，喜欢看代码的就直接先上代码看吧 CoreSpotlightSearchDemo 1、普通类型一般应用搜索出来的结果都是一图片，一标题，一内容 但是如果想实现没有图片呢？如下图：123456789101112131415161718192021222324252627282930313233 // 把一个空数据赋给图片对象，然后系统好像判断了如果没有图片，则不显示？ attributedSet.thumbnailData = [NSData new];``` ### 2.右上角带有时间右上角带有时间的类型，一直看文档和网上的教程，都没有发现时间的设置，一般都是简单提一下怎么设置然后显示，不求甚解？！![带有时间的](http://upload-images.jianshu.io/upload_images/99517-ba6003190161f2c5.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)``` // 显示时间的必要条件 attributedSet.contentType = (NSString*)kUTTypeMessage; attributedSet.contentCreationDate = [NSDate date];``` ### 3.显示电话下图是实现的电话显示和系统通讯录的搜索结果比较，系统有FaceTime的会显示，没有就隐藏，同时有发送短信的功能。但是系统好像没有开放这么多功能给开发者，只是给了电话的显示。而且，电话设置多个号码，但是点击时，直接打数据数组的第一个号码。最后是图标也不一样，系统的电话图标是实心的，实现的却是空心，累都凉了。``` // 显示的必要条件，是一个数据，可以有多个号码，但只会读第一个电话 attributedSet.phoneNumbers = @[@\"12345678\",@\"42535353\"]; attributedSet.supportsPhoneCall = @1;``` ![实现的电话类型png](http://upload-images.jianshu.io/upload_images/99517-f20fb4943676011f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![通讯录.png](http://upload-images.jianshu.io/upload_images/99517-6f5f9aa97a5dd3db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![有多个号码系统打电话则显示多个选择.PNG](http://upload-images.jianshu.io/upload_images/99517-bf0bdb549134fa58.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)### 4.带有位置导航的点击导航会跳转到地图，然后系统自动导航（代码里写好了经纬度），系统的地图都没有显示这个图标出来，就是这样了。提醒的是，如果你点击导航图标默认是跳转到系统的地图，然后是你当前地点到目标地点的线路规范，然后就可以导航了。如果点击cell其它内容，则跳转回应用，自己实现逻辑。![位置导航类型.png](http://upload-images.jianshu.io/upload_images/99517-8ccdd6d64132edc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) // 显示的必要条件，经纬度 attributedSet.longitude = @113.270793; attributedSet.latitude = @23.135308; attributedSet.supportsNavigation = @1; 12345### 5.带有星星评价的这个测试了很久才显示出来的，心累了。星星的显示，只能是整数个或者半个星星，最大是5，就是显示5星。星星后面还可以星星的评价说明，这个起点缀作用啦！![带星星评价](http://upload-images.jianshu.io/upload_images/99517-8ff8d409ba87cac9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) //要选中对应的媒体类型 attributedSet.contentType = (NSString) kUTTypeAudio;// attributedSet.contentType = (NSString) kUTTypeMovie; attributedSet.rating = @3.5; attributedSet.ratingDescription = @”raign44”;123456### 6.音乐我实现出来的音乐跟系统的音乐显示完全不一样，不清楚是我这边没有实现，还是苹果没有开放接口。我感觉是苹果没有开放的原因，如果你实现了一定要告诉我，我会知错就改的。![音乐类型](http://upload-images.jianshu.io/upload_images/99517-18253ee128b3f451.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![ 苹果音乐.PNG](http://upload-images.jianshu.io/upload_images/99517-3ebc424e2ecb1f06.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) attributedSet.contentType = (NSString*) kUTTypeAudio; attributedSet.album = @\"album\"; attributedSet.lyricist = @\"lyricist\"; attributedSet.composer = @\"composer\"; attributedSet.artist = @\"artist\"; ``` 7.文档类型【未实现】这个也没有测试出来，等高手。文档类型带的是时间的修复。找到字段，设置了，但没有显示出来。下面是印象笔记和有道云笔记实现的效果。 8.邮件类型【未实现】系统的邮件类型显示分三行的。第一行是发件人，第二行是主题，第三行是内容。但是我还是没有找到苹果实现的效果。QQ邮箱显示的也是三行，但是他用了一个技巧，就是内容用了一个换行\\\\n，让内容一分为二，这样的效果我只能说将就了，但系统的实现我也没有找到，知道的麻烦也通知一下我，我一个星期在嘛呀。。 9.搜索关键字？最特别的是，我在搜索很多关键字时，发现京东每一次都出现，并且关键字也命中啦！如下图： 当时我就疑惑，这tm的怎么实现的！！！x爆天了！查看了系统的文档，都没有发现这样的搜索接口。然后想到 关键字的搜索，比如用&quot;*&quot; &quot;?&quot;，但是发现系统是无法代替换搜索的。最后想到京东覆盖了非常多的关键字，就是大量的注入关键字！！。这招真服了！！ 关于大量注入，我测试了一万条，因为系统的索引建立是在子线程执行，然后其实也没有什么大问题。 10.其它类型有了前面的类型，想要让你搜索结果显示的不一样，就是综合其它效果，做出自己漂亮吸引的形式啦！！如下是京东的商品显示，效果感觉还可以。当然，其它应用应该找到合适自己的显示，或好的让用户点击的欲望吧！ 11.言外之意从前面就可以看出，CSS(CoreSpotlightSearch)有非常多，非常复杂的知识，很多需要大家了解搜索吧。比如可以设置搜索关键字@property(nullable, copy) NSArray&lt;NSString*&gt; *keywords; ，也可以设置每一条搜索的过期时间@property (copy, null_resettable) NSDate * expirationDate，当然还可以删除某条记录或全部，关于更新，我发现每一条记录是根据UniqueIdentifier，如果发现相同的UniqueIdentifier，则系统会覆盖原来的内容，从而达到更新的作用。还有点击搜索结果，跳转回应用做逻辑处理，大家可以参考本文结尾的参考文章来学习，在这里就不多言了。 12.写写总结代码写的越多，对人生的感悟越多，对代码也产生了敬畏之道。有人说，代码产生的是对用户的作用，不要一言追求重构，新技术。一个小小的功能，也许就是用户继续使用你的App的惟一原因，而不是这一次你重构了多少代码。 所以，在使用CSS时，应该考虑怎么为用户提供优质的搜索结果，而不是竞争或出风头！ 因为用户有权选择不显示应用的搜索结果： 但我在想，我安装了200+应用，有时候都不想显示，苹果没有一个全部关闭的按钮，我想这不是苹果不知道，而是不“为”！就是希望用户保留搜索，一个大数据的时代！！ 当然，我们在使用时，是不是也要关心一直搜索隐私问题，苹果说了(他说了算)： 参考 如何使用iOS 9的Core Spotlight框架 iOS开发之Core Spotlight实战 Core Spotlight Framework Reference App Search Programming Guide/ Search Drives User Engagement Introducing Search APIs - WWDC 2015 - Videos - Apple Developer 快速上手 Core Spotlight iOS9适配 《AdaptationTips》 喜欢的点赞一个，有问题先看代码吧，欢迎留言交流！Demo: CoreSpotlightSearchDemo 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"CoreSpotlightSearch","slug":"CoreSpotlightSearch","permalink":"http://iHTCboy.com/tags/CoreSpotlightSearch/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"彻底删除Mac下iMessage的历史聊天记录","date":"2016-05-18T07:49:16.000Z","path":"2016/05/18/2016_彻底删除Mac下iMessage的历史聊天记录/","text":"最近在用iMessage群发短信，然后就有了正文： 1、清空数据库在Finder桌面时，按住Option键后点“前往”-“资源库”即可，/Users/XXX/Library/Messages/Archive，XXX是当前的用户名。里面就有历史记录的。 2、快速删除单条记录组合键 option+command+delete(大的那个 小键盘不管用) 参考 iMessage推广（群发）技术研究 怎样实现iMessage群发 AppleScript的终极入门手册 彻底删除imessage记录 如何在os x中批量删除iMessage？ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Mac","slug":"Mac","permalink":"http://iHTCboy.com/tags/Mac/"},{"name":"iMessage","slug":"iMessage","permalink":"http://iHTCboy.com/tags/iMessage/"}]},{"title":"草从集1.0【2015年总结】.ipa","date":"2015-12-30T17:54:26.000Z","path":"2015/12/31/2015_最后的总结/","text":"序言这一年，改变很多，从学生角色，完全成为一个职场能人。一路过来，不及思考，不及选择，不及放弃。现在回想，也就如此，也值一谈，就此开始！ 第一章 最后的桂林实习想起年初，还在桂林市区实习，从上年10月开始，那日子过的太美好了，以致于现在来看，进步的不够多，也留下了对工作的认知。 说点实在的吧。实习时为了产品上线，曾在公司睡过觉；因为太闲，也曾经跟老板哭诉过；因为年轻，也曾经不估而终。现在想起来，已经没有那么可怕，只是现在如果叫我在加班到12点，已经不可能了，人总是这样，经过好的东西好，坏的东西，就不想在接触。 回顾起来，还是感谢当初公司给我这个实习机会(虽然公司已经倒闭)，然后，公司的同事都很友好，行政妹纸很漂亮，说起来也很感谢我的组长，虽然当时不敢给我做太多东西，现在想想，只是我不主动去问，不主动去学，以致进步那么慢，现在回想，也不明白当初忙什么。 说点其它，就是公司的普遍情况，就是员工总是会偷懒，而老板也没有办法。想起KPI, 超过10个bug扣工资，很多问题，解决方案总是不完美，追求的到底又是什么，有能力，你可以选择。 说到生活，习惯于一个人的生活，一个人的晚餐（乐于苦逼），很大的床，没有断的网和电，没有声音，一切都很安静，还有习惯的早餐：粽子，辞职那个实习生告诉我，他接了私活，1个月赚7k，那时候我知道我也可以，但发现自己没有突破自己，经验是练习出来的，自信也一样。自信点，你OK！ 第二章 最后的大学时光记得很清楚，1月20号回学校，因为连工资都不要了。现在想想，工资也没多少，所以，期待明年，一个有梦的年轻人。说远了，回到学校，还是学校每学期最后的菜———— 生产实习，尽做一些没有技术的工作。但是发现，自己很努力，做了一个LBS的应用，这个其实还是要感谢实习的公司，让我入手了地图这一块东西，让我产生做一个云图的想法。 待在学校，有一个不好，就是懒，没有上班，不想早起，没有压力，不想学习。坚持着最后的跑步，那个时候，其实还是有点太自信，还有想放假的松散，25号就回家了，没有想到，这么快，大学生活真的结束了，真的如此之快，已经在没有机会在图书馆待上一个上午，已经没有机会在操场上跑几圈。 如果现在回想，大学有什么遗憾，我想说，英语是我的第一个做的最差的事，虽然现在英语强了很多，但是还是不够，不知道有生之年能不能说出一口流利的英文？哈哈，其次就是学习的方向，一直在网络和编程纠结，大二大三在网络上用尽心血，导致得大病，其实，我一直保持着乐观的心态，感谢那一次的死神之交。我知道我欠这个世界的东西太多，还不能就这样没有了。也许是太努力了，一直没有想过淡女朋友，也遇到一些喜欢的女孩，无法一见相识吧，现在回想，也没有什么遗憾吧。最好的还在前方等我，只有我努力得足够优秀，她才会看得见我吧！哈哈～ 第三章 最后的论文答辩过完年，就一直在广州实习，根本已经没有了害怕学校的思想，学校不在是避风港，我也要断奶！请了一个星期回来答辩，久别大学，回去时已经是6月，学生还是学生，只是自己已经变了罢。那几天，还是去了图书馆和操场，拍了一组大学照片留念，也就匆匆离去。 想想，那时候还有人帮我改论文格式，大学认识到几个人，还是要感谢一番，长见识的时候，不要害羞，勇敢勇敢！一生没有多少回相聚，此刻一别，又是人间多少年！ 当我把最后的行李箱拉到大门后，我已经没有当初刚入学的喜悦，也没有寒暑假的愉快，惟一难舍的都在校园的每个角落，永远带不走。心走远，人定行。 第四章 实习到工作的大半年从3月到现在的大半年，想想当初，找工作就定下来，虽然在广州长大，但是对广州市区其实一点都不熟悉，从来没有来广州市区玩。好了，开始工作吧！ 现在想想，当初没有经验，找工作很随便，也进很多坑，现在长大了，应该去选择一些不同的世界。先说回工作，当初的想法时，不考虑工资，有机会就把握机会，有学习就多学习，导致其实自己前几个月一分钱都没有，这是教训。这也暴露了我一个一直以来严重的问题，没有清楚认识自己，到底自己值多少钱？还要别人来评价，那么就是不值钱。所以，我想对毕业生说：清楚自己的能力和价格，你才能突破自己，超越自我！ 来点实在的。在公司机会很大，大到只有我一个人负责iOS（这尼玛工资不大呢），是不是机会大大！！确实，这段时间让我成长非常多，要感谢公司的。可惜，在我要走时，我还是不想吐槽一下。因为我们总是说公司福利不好，但是对比公司其它部门，我们的福利已经很好。当然，对我来说，你有能力选择更好的机会，那么无可厚非我会选择更好的！ 说到工作，实在点的，就是工作久了，你就想偷懒，感觉没有激情，生活重复，工作重复。发现公司的种种不是，吐槽公司的每一个角落，八卦公司的花边新闻。当失去信仰时，我应该换一个地方思索了；当无法在吐槽时，我应该换一个地方呼吸了；当累了，休息一下，下一站，更漂亮！ 第五章 生活的一两点看了一下今年的计划： 锻炼 存钱 读书 游玩 锻炼：今年养成了跑步的习惯，虽然一周一次，现在轻松跑个15圈，真的想不到，以前体测什么的，最害怕跑步。当年只顾学习，出来混的总是要还的。锻炼，这个事，在家也可以，每天要让出一些时间来做。加油！ 存钱：存了多少？？哈哈，不多，其实就是自己那么一点，因为当初工薪也不高，慢慢的，靠自己努力吧。明年计划大大的，哈哈！ 读书：没有统一，估计读了20本？30本？反正很忙，但是，读的书都有体会？？明年计划，每一本书都写一个读书笔记，好记忆，不如烂笔头！ 游玩：计划一个月在广州游玩一次，已经实现了，生活中最快乐的，就是游着玩，第一个风景和美食，都有不一样的文化，且听君一言！ 第六章 学习的一两点 iOS android swift python 对于学习这个东西，体会很深刻。以前在学校，想学习什么就学习什么，以为多学习一点，将来可能会用的上，在学校确实不会发现什么不对，因为根本没有机会证明你学习的东西，是否真会用的上。出来工作后，也以为多学习一些，就会利害一些，同时发现，自己只是懂一些皮毛，技术每天都在更新，世界每天都在变。 今年计划学习4门技术，但后来发现，自己东一点，西一点，其实什么都没有精通，想跳槽，却发现自己不行？！所以，学习上，明年还是专注iOS，swift，其它的就是有时间学习一下，不会作为重点要突破，大概就这样，行动吧！ 第七章 2016年计划 锻炼健康 存钱节俭 读书学习 旅游娱乐 锻炼健康 ：除了锻炼，还要多关注自己的体重，由于天天坐办公室，肚子会大，同时加班、熬夜等，要早睡，多吃水果等。 存钱节俭 ：计划每月存固定的钱，绝对不能拿出来用，没有钱就看着办，干等下个朋工资这样。同时，也要节俭，不用卖的东西，绝不要买。 读书学习 ：主要专注iOS相关，还有领导、演讲、博弈、文化、经济等，多个知识体系的大全观。 旅游娱乐 ：长线：上海、杭州、北京、西藏； 短线：深圳、清远、东莞、珠海、（香港、澳门） 2016，马上行动！","tags":[{"name":"2016","slug":"2016","permalink":"http://iHTCboy.com/tags/2016/"},{"name":"年终奖","slug":"年终奖","permalink":"http://iHTCboy.com/tags/年终奖/"},{"name":"年终总结","slug":"年终总结","permalink":"http://iHTCboy.com/tags/年终总结/"},{"name":"草从集","slug":"草从集","permalink":"http://iHTCboy.com/tags/草从集/"}]},{"title":"iOS快速枚举中stop注意事项","date":"2015-12-17T00:03:26.000Z","path":"2015/12/17/2015_iOS快速枚举中stop注意事项/","text":"最近有一个需要，只存储服务器返回数组里最多3个照片，所以遍历数时需要做一个判断： 1.版本11234[picArray enumerateObjectsUsingBlock:^(NSDictionary * dic, NSUInteger idx, BOOL * _Nonnull stop) &#123; if(idx &gt;2) *stop = YES;//最多3张照片 [pics addObject:[dic objectForKey:@\"picture\"]];&#125;]; 2.版本21234[picArray enumerateObjectsUsingBlock:^(NSDictionary * dic, NSUInteger idx, BOOL * _Nonnull stop) &#123; [pics addObject:[dic objectForKey:@\"picture\"]]; if(idx &gt;2) *stop = YES;//最多3张照片 &#125;]; 3.版本312345[picArray enumerateObjectsUsingBlock:^(NSDictionary * dic, NSUInteger idx, BOOL * _Nonnull stop) &#123; if(idx &gt;1) *stop = YES;//最多3张照片 [pics addObject:[dic objectForKey:@\"picture\"]]; //也可以写在这里 if(idx &gt;1) *stop = YES;//最多3张照片 &#125;]; 注意点大家看懂了吗，*stop＝ YES；时，不会马上结束本次遍历，还会执行下面的代码。 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"BOOL * stop","slug":"BOOL-stop","permalink":"http://iHTCboy.com/tags/BOOL-stop/"},{"name":"enumerate","slug":"enumerate","permalink":"http://iHTCboy.com/tags/enumerate/"},{"name":"快速枚举","slug":"快速枚举","permalink":"http://iHTCboy.com/tags/快速枚举/"}]},{"title":"iOS项目添加WatchKit App模块实践","date":"2015-11-02T17:05:26.000Z","path":"2015/11/03/2015_iOS项目添加WatchKit App模块实践/","text":"最近在公司原来一个项目里增加了Apple Watch模块，遇到了很多坑。首先说明，本人目前对Swift还不深入熟悉，所以还是打算在原项目里用OC来实现。其次，我用了Apple Watch3个月了，还是第一次入门，看了喵神的教程，一步步来的。想想WatchOS 都2了，再不用用都老了。 下面简单说一下这个过程： 0、前言如果在这之前，你没有看过或了解WatchKit相关内容，那么建议你读喵神的两篇文章Apple WatchKit 初探、WWDC15 Session笔记 - 30 分钟开发一个简单的 watchOS 2 app 一、增加watchOS这个步骤就看图带过吧，对于还不知道的新手来说，看图最直接： 1.新建Target 2.选择 watchOS 3.这步骤注意，默认勾选了Notification Scene，要解释一下： Glance Scene ： 如果勾选，就会在Interface.storyboard里默认生成GlanceController的界面，如果原来选中了，后来想不要，就直接在Interface.storyboard里把GlanceController界面删除就可以了。 Complication : 这个就是在系统表盘显示时，滚动 Digital Crown 时，进行一些操作，现在OS2里增加的时间旅行，就是滚动 Digital Crown时，天气和日程表计划跟着变动，这个功能还是有点用的。 4.点击激活吧 5.最后在原来项目里增加了这两个目录App和Extension。 二、一些坑要填1.默认新建的Target版本都是1.0，所以你要改成跟你现在项目的版本一样才行，不然就会报错。App和Extension的Target版本都要改。 2.默认App和Extension的Valid Architectures都是“armv7 armv7s i386 arm64”WatchOS运行的框架要改为armv7k。如果要在模拟器运行，增加i386。 还有一些其实的小问题，不太记得了，相信大家如果遇到自行搜索就能解决。 三、一些代码Watch显示的界面全部由Interface.storyboard里的界面生成，逻辑就是在Extension里写，具体也没什么好写的，由于我是用OC写的，连图片缓存的都不会，参考了喵神原OS1文章： 在 Extension 的 target 中获得图片 (比如从网络下载或者代码动态生成等)，并且需要重复使用的话，最好用 WKInterfaceDevice 的 -addCachedImage:name: 方法将其缓存到手表中。这样，当我们之后再使用这张图片的时候就可以直接通过 -setImageNamed: 来快速地从手表上生成并使用了。每个 app 的 cache 的尺寸大约是 20M，超过的话 WatchKit 将会从最老的数据开始删除，以腾出空间存储新的数据。 现在OS2就出现几个问题： 1.add方法增加的是图片的名字，如果我是从网络下载的，名字怎么取？ 2.如何判断有没有缓存？ 3.OS2默认已经不会自动删除旧的数据了？ WKInterfaceDevice类里的*cachedImages这个属性OS2下报错，不知道为什么？有懂的求留言。1@property (nonatomic, readonly, strong) NSDictionary&lt;NSString*, NSNumber*&gt; *cachedImages WK_AVAILABLE_IOS_ONLY(8.2); // name and size of cached images 在这篇文章Apple Watch应用优化的一些心得技巧总结找到一些图片优化的方法WatchKit用的图片库：Github上的WKImageCache，或者直接用KFSwiftImageLoader,或者有新的库，暂时没有去研究，求补充。 最后提供一个WatchKit下用的NSURLSession方法，网上都是Swift写，OC这样写： 1234567891011121314NSString *requestUrl= @\"http://www.google.com\";NSURLSession * session = [NSURLSession sharedSession];NSURLSessionDataTask * task = [session dataTaskWithURL:[NSURL URLWithString:requestUrl] completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123; if(data!=nil)&#123;// 请求成功 NSDictionary *resultDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:nil]; &#125;else&#123;//请求失败 &#125; &#125;];[task resume];// 调用这个方法才会去请求网络 四、审核的一些坑前面提到勾选 include Glance Scene 和 include Complication ，结果在实现时，没有搞好，直接在Glance Scene里显示一个下载链接的二维码，苹果审核员问我二维码是干什么用的？它会变吗？ Glance Scene最好要用一些有意义的数据显示 Complication这个，我是勾选了，第二次又被拒绝，我想说，苹果审核能一次审核全部功能吗？？？？ 取消Complication功能，就是把下图的Data Source Class删除，在把五个勾去掉就可以了： 终于改了，希望审核明天通过吧！！ 五、总结关于Watch App审核，如果你选择了某个功能，但没有实现，那么一定会被拒绝的，大家注意一下这点，坑就来那里～ 用了一个星期，了解了WatchKit的基础功能，实现了基本的需求。其实发现，刚开始很害怕实现不了，或者说，去做时知道一定会遇到很多问题，所以不敢去碰它。作为工程师，我们需要恒心和勇气，才能面对接下来的大数据时代，我们的知道时刻要充电，做好准备吧！ 最后想吐槽一下苹果Watch，不知道是不是只有我遇到这个问题，表盘下面掉漆，这是苹果的技术吗？？？ 参考 Apple WatchKit 初探 WWDC15 Session笔记 - 30 分钟开发一个简单的 watchOS 2 app Apple Watch应用优化的一些心得技巧总结 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Watch App","slug":"Watch-App","permalink":"http://iHTCboy.com/tags/Watch-App/"},{"name":"WatchKit","slug":"WatchKit","permalink":"http://iHTCboy.com/tags/WatchKit/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"第三方登陆图标处理探究","date":"2015-10-18T16:09:26.000Z","path":"2015/10/19/2015_第三方登陆图标处理探究/","text":"很多应用都使用了第三方登陆，但是如果用户没有安装第三方登陆的app，那么怎么处理呢？ 没有安装部分应用的情况 全部安装的情况 探究可以看到，应用在处理一些界面时，不但是要按照设计图来实现，同时也要考虑非正常情况，用户体验就在这里吧，做，或不做，它就在那里，不惊不喜～ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"优雅","slug":"优雅","permalink":"http://iHTCboy.com/tags/优雅/"},{"name":"同步登陆","slug":"同步登陆","permalink":"http://iHTCboy.com/tags/同步登陆/"},{"name":"第三方登陆","slug":"第三方登陆","permalink":"http://iHTCboy.com/tags/第三方登陆/"}]},{"title":"AppStore审核被拒，不能带“屌”","date":"2015-10-18T15:48:24.000Z","path":"2015/10/18/2015_AppStore审核被拒，不能带“屌”/","text":"问题最近app突然被拒，回复里说有 “屌” 字不行？？！！原因说，我的应用是4+评级，所以应用的图标、截图、应用描述不能有“屌”字！！ 讨论应用里有两个地方用到“屌”字 中国互联网屌丝报告 就是这么屌 上面文字，在中国使用应该是正常吧？如果按苹果这个逻辑，是不是AppStore里不能有“屌”字？ 那么问题来了，你一定猜到：这个应用评级一定不是4+！ 是的，你一定也猜到，我找到4+的，并且用“屌”为应用名了： 结论最后，为了尽快上线，我们应用还是删除了相关图片，但是希望，苹果测试能不能“专业”一点，中国国情是什么你懂吗？难道他们就是有一个“敏感词”表，发现这个字，就直接拒绝？？? 希望大家都平时都注意一下～避免意外～ —本文图片来源苹果官方，如有侵权请告知删除。 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore","slug":"AppStore","permalink":"http://iHTCboy.com/tags/AppStore/"},{"name":"App审核","slug":"App审核","permalink":"http://iHTCboy.com/tags/App审核/"},{"name":"屌","slug":"屌","permalink":"http://iHTCboy.com/tags/屌/"}]},{"title":"QQ和微信同步登陆，AppStore审核被拒4次的坑路","date":"2015-10-16T15:58:26.000Z","path":"2015/10/16/2015_QQ和微信同步登陆，AppStore审核被拒4次的坑路/","text":"最近应用加入了微信和QQ同步登陆，结果被拒绝了4次！！下面就让我带大家回顾这坑路～ 第一次最拒绝第一次以为是苹果测试手机没有安装QQ导致，所以写了代码判断手机是否安装QQ，如果没有安装就隐藏掉QQ登陆图标。 12345678910 //判断是否有qqif (!([QQApiInterface isQQInstalled] &amp;&amp; [QQApiInterface isQQSupportApi])) &#123; view.hideQQ = YES;&#125; //判断是否有微信if (![WXApi isWXAppSupportApi])&#123; view.hideWeixin = YES;&#125; 问题总结 苹果不止用一台设备测试，或者不止一个人测试同一应用 苹果用iPad测试，我觉得因为在iPad上就知道应用支持不支持iPad吧 苹果不允许应用隐藏图标吗？！都没有安装显示毛线啊！ 第二次被拒绝苹果不允许我隐藏图标，那么我就显示出来吧！同时也会判断安装，如果没有安装就提示用户没有安装！这样也不给！！ 第三次被拒绝这次没有办法了，网上的方法说，如果没有key安装QQ的能用web网页登陆～ 腾讯的官方文档翻了个底朝天，友盟的文档也翻了个底朝天，俩demo也翻了个底朝天。经过不懈努力，问题终于解决，原因真是够蛋疼的！！友盟或者QQ互联提供的demo工程是低于xcode6.0创建的，默认工程的info.plist里有Bundle display name和Bundle name两个key。而xcode6.0之后创建的工程的info.plist里没有Bundle display name！！调用腾讯的登录API就弹出个webview界面提示需要安装最新版本QQ。加上这个key就一切正常了，再删掉这个key调用QQ登录绝逼不行！！这tmd腾讯也太操蛋了吧！！！！ 第四次被拒绝最后一次，苹果也有点不耐烦了！！！看到详细说明，如果第三方app没有安装，那么可以用网页授权方式！！终于找到出路了！！但是怎么才能web登陆？？？ 最后，在cocoachina 论坛找到答案： 只要让腾讯客服对appid开通个权限就可以。 总结在这个过程中，也看了一些应用的实现，基本都上面几种方式的一种，但是就能上架，这个苹果的测试人员有很多种吗？？！！不管怎样，就这样走过坑！！应用最终上架了！！ 微信同步登陆如果没有安装微信，微信同步登陆只能通过手机号码，不知道苹果测试员怎么测试呢？！ 参考文章 关于IOS项目QQ空间授权提示安装最新版本的QQ的解决方法 iOS qq第三方登录为什么没有安装qq的时候没有显示登录页面？ - iOS 开发 - 知乎 腾讯aouth提示没有安装QQ软件? android/IOS友盟social对qq/qzone的分享/授权登录支持情况说明表 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"QQ","slug":"QQ","permalink":"http://iHTCboy.com/tags/QQ/"},{"name":"同步登陆","slug":"同步登陆","permalink":"http://iHTCboy.com/tags/同步登陆/"},{"name":"微信","slug":"微信","permalink":"http://iHTCboy.com/tags/微信/"}]},{"title":"iOS开发之让列表滚回最顶端最佳实践","date":"2015-10-01T14:07:22.000Z","path":"2015/10/01/2015_iOS开发之让列表滚回最顶端最佳实践/","text":"原来项目中一直用这个方法滚动回到首页：123NSIndexPath *bottomIndexPath=[NSIndexPath indexPathForItem:0 inSection:0];[self.collectionView scrollToItemAtIndexPath:bottomIndexPath atScrollPosition:UICollectionViewScrollPositionTop animated:YES]; 上面代码是collectionView滚动到第一区第一个，直到有一次应用崩溃，发现第一区没有item!! 尼玛，怎么办！！！ 最后，找到下面代码，这样应用的健壮性又提高了，妈妈在也不用担心数据为空的情况啦！！ 1234567//CGRectMake(0, 0, 1, 1)可以直接返回到UITableView的最顶端[tableview scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:NO];//CGRectMake(0, 0, 0, 0)设定无效//[tableview scrollRectToVisible:CGRectMake(0, 0, 0, 0) animated:NO]; 上面方法，tableView/collectionView下都有效，直接复用！！！ 参考：iOS开发之让UITableView滚动控制并返回到最顶端 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"TableView","slug":"TableView","permalink":"http://iHTCboy.com/tags/TableView/"},{"name":"collectionView","slug":"collectionView","permalink":"http://iHTCboy.com/tags/collectionView/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"scroll","slug":"scroll","permalink":"http://iHTCboy.com/tags/scroll/"}]},{"title":"Hexo搭建Github Pages博客填坑教程","date":"2015-09-05T17:23:36.000Z","path":"2015/09/06/2015_Hexo搭建Github-Pages博客填坑教程/","text":"目录： 1.安装Hexo 2.部署Hexo 3.Hexo命令 4.一些报错处理 5.博客管理 6.插件（RSS、Sitemap） 7.评论设置 8.404页面 9.统计 10.更新 11.总结 12.参考引用 13.搭建博客相关网站 简述本文主要讲解Hexo安装时遇到的坑，Hexo安装之后的使用教程，Hexo安装需要的环境和教程，请自行百度、谷歌。 1.安装Hexo1$ npm install -g hexo 坑1这里可能安装失败，可以权限不够，在命令前加sudo1$ sudo npm install -g hexo 2.部署Hexo1$ hexo init 注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。执行命令生，会在当前命令的路径下，生成以下文件： 1234567891011.├── .deploy├── public├── scaffolds├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json .deploy：执行hexo deploy命令部署到GitHub上的内容目录 public：执行hexo generate命令，输出的静态网页内容目录 scaffolds：layout模板文件目录，其中的md文件可以添加编辑 scripts：扩展脚本目录，这里可以自定义一些javascript脚本 source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。 _drafts：草稿文章 _posts：发布文章 themes：主题文件目录 _config.yml：全局配置文件，大多数的设置都在这里 package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 3.Hexo命令Hexo下，通过 _config.yml 设置博客，可以想象成我们用的软件里的设置一样，只是它通过一个文件列出这些参数，然后让我们填写和修改。 全局设置 在你博客目录下有一个文件名_config.yml，打开可以配置信息。 局部页面 在你博客目录下 \\themes\\你使用的主题\\_config.yml 写博客相关命令 1234567Hexo常用命令：hexo new \"postName\" #新建文章hexo new page \"pageName\" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHub 当然，如果每次输入那么长命令，那么一定想到用简写： 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 其它的，还可以复合命令： 12hexo deploy -ghexo server -g 有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧 1$ hexo clean 当本地调试出现诡异现象时候，请先使用 hexo clean 清理已经生成的静态文件后重试。 注：Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。 4.一些报错处理坑2 一 ERROR Plugin load failed: hexo-server原因：Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.解决方法，执行命令：sudo npm install hexo-server 二 执行命令hexo server，有如下提示：Usage: hexo….原因：我认为是没有生成本地服务解决方法，执行命令：npm install hexo-server –save提示：hexo-server@0.1.2 node_modules/hexo-server 三 白板和Cannot GET / 几个字原因:由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令： 1234567npm install hexo-renderer-ejs --savenpm install hexo-renderer-stylus --savenpm install hexo-renderer-marked --save这个时候再重新生成静态文件，命令：hexo generate （或hexo g）启动本地服务器：hexo server （或hexo s） 5.博客管理上面命令中，其实生成文章，可以直接把写好的文章插入到目录/_posts 下面，后缀为.MD就行，在文章头部固定格式： 12345title: Mac提高使用效率的一些方法 #文章的标题，这个才是显示的文章标题，其实文件名不影响date: 2015-09-01 20:33:26 #用命令会自动生成，也可以自己写，所以文章时间可以改categories: technology #文章的分类，这个可以自己定义tags: [Mac,效率,快捷方式] #tag，为文章添加标签，方便搜索--- 当然，里面有很多东西的，如果你专注于写作，那么可以不用太关心了，比如tags标签可以写成下面那样，因为hexo文章的头部文件是用AML来写的。 123tags:- tag1- tag2 如果在博客文章列表中，不想全文显示，可以增加 , 后面的内容就不会显示在列表。 1&lt;!--more--&gt; 6.插件 安装插件 1$ npm install &lt;plugin-name&gt; --save 添加RSS1npm install hexo-generator-feed 然后，到博客目录 /public 下，如果没有发现atom.xml，说明命令没有生效！！！(楼主就是在这里被坑了次)解决方法：1$ npm install hexo-generator-feed --save 这个命令来自hexo-generator-feed 123456789101112131415Install $ npm install hexo-generator-feed --save Hexo 3: 1.x Hexo 2: 0.xOptions You can configure this plugin in _config.yml. feed: type: atom path: atom.xml limit: 20 type - Feed type. (atom/rss2) path - Feed path. (Default: atom.xml/rss2.xml) limit - Maximum number of posts in the feed (Use 0 or false to show all posts) 其中可以选择：然后在 Hexo 根目录下的 _config.yml 里配置一下 1234567feed: type: atom path: atom.xml limit: 20#type 表示类型, 是 atom 还是 rss2.#path 表示 Feed 路径#limit 最多多少篇最近文章 最后，在 hexo generate之后，会发现public文件夹下多了atom.xml！ 例如要订阅我的blog只要输入ihtc.cc/atom就可以搜寻到啦！ 添加Sitemap Sitemap 的提交主要的目的，是要避免搜索引擎的爬虫没有完整的收录整个网页的内容，所以提交 Sitemap 是能够补足搜索引擎的不足，进而加速网页的收录速度，达到搜寻引擎友好的目的。 1$ npm install hexo-generator-sitemap --save 这个命令来自hexo-generator-sitemap 1234567891011 Install $ npm install hexo-generator-sitemap --save Hexo 3: 1.x Hexo 2: 0.xOptions You can configure this plugin in _config.yml. sitemap: path: sitemap.xml path - Sitemap path. (Default: sitemap.xml) 同样可以选择：在 Hexo 根目录下的 _config.yml 里配置一下 123sitemap: path: sitemap.xml #path 表示 Sitemap 的路径. 默认为 sitemap.xml. 对于国内用户还需要安装插件 hexo-generator-baidu-sitemap, 顾名思义是为百度量身打造的. 安装 1$ npm install hexo-generator-baidu-sitemap --save 然后在 Hexo 根目录下的 _config.yml 里配置一下 12baidusitemap: path: baidusitemap.xml 为了博客有更好的展示率, 最好的方式是通过搜索引擎, 提交 Sitemap文件是一个方式，具体可参考： Hexo 优化与定制(二) | Kang Lu’s Blog ｜Hexo优化｜如何向google提交sitemap（详细） | Fiona’s Blog 其它插件Plugins · hexojs/hexo 7.评论设置在Hexo中，默认使用的评论是国外的Disqus,不过因为国内的”网络环境”问题，我们改为国内的多说评论系统。 需要说明的是 short_name:字段，这个字段为你多说填写的站点名字，比如我的域名：ihtcboy.duoshuo.com，那么我的short_name:”ihtcboy” 8.404页面 GitHub Pages 自定义404页面非常容易，直接在根目录下创建自己的404.html就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。其实，404页面可以做更多有意义的事，来做个404公益项目吧。 腾讯公益 404.html : 12345678910111213141516171819202122232425&lt;html&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;404&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;!--&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\" /&gt; &lt;title&gt;公益404 | 不如&lt;/title&gt;&lt;/head&gt;&lt;body&gt;#404 Not found By Bruce&lt;h1&gt;404 Page Not Found&lt;/h1&gt;--&gt;&lt;br&gt;&lt;script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;br&gt;&lt;!--公益404介接入地址益云公益404 http://yibo.iyiyun.com/Index/web404腾讯公益404 http://www.qq.com/404失蹤兒童少年資料管理中心404 http://404page.missingkids.org.tw--&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt; 复制上面代码，贴粘到目录下新建的404.html即可！ 9.统计 因Google Analytics偶尔被墙，故国内用百度统计 最新的统计服务已经开放，两行代码轻松搞定，你可以直接使用：不蒜子本人墙裂推荐，只需要两行代码哦。各种用法实例和显示效果参考不蒜子文档中的实例链接。不蒜子，极客的算子，极简的算子，任你发挥的算子。 为hexo博客添加访问次数统计功能 | 不如 10.更新 更新hexo： 1npm update -g hexo 更新主题： 12cd themes/你的主题git pull 更新插件： 1npm update 11.总结本文主要是解释了自己搭建过程中遇到的问题，还有综合了其它Hexo教程的总结，还有图床、搜索、CDN加速等内容没有说到，大家用到可以自行百度谷歌！ 12.参考引用如何搭建一个独立博客——简明Github Pages与Hexo教程hexo系列教程：（一）hexo介绍 | Zippera’s bloghexo系列教程：（二）搭建hexo博客 | Zippera’s bloghexo你的博客 | 不如使用hexo搭建博客 | Alimon’s Bloghexo边搭边记 | sunnyxx的技术博客hexo搭建静态博客以及优化 | Joanna’s coding blogHEXO+Github,搭建属于自己的博客 - 简书在hexo自訂rss | kpman | codeRSS/Atom、Sitemap for SEO | Michael Hsu.twHexo 优化与定制(二) | Kang Lu’s BlogHexo | { GoonX }不蒜子 | 不如 13.搭建博客相关网站Hexo官网hexojs/hexoGitHub Pages 14.个人域名添加SSL阿里云版本：Github pages个人域名添加SSL | 温柔小猪 其它版本：为自定义域名的GitHub Pages添加SSL 完整方案 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Github Pages","slug":"Github-Pages","permalink":"http://iHTCboy.com/tags/Github-Pages/"},{"name":"Hexo","slug":"Hexo","permalink":"http://iHTCboy.com/tags/Hexo/"},{"name":"搭建博客","slug":"搭建博客","permalink":"http://iHTCboy.com/tags/搭建博客/"}]},{"title":"草从集0.5.ipa","date":"2015-09-04T15:46:26.000Z","path":"2015/09/04/2015_草从集0.5_ipa/","text":"说多不重，说长不远，也有工作半年啦，而这些，对于我来说，现在回过去总结，总是有点刚刚毕业那些的感动，有点刚刚梦想那种不怕的向上情怀。从心理学上，心智成熟并不是那么重要；从哲学上，明悟并不是那么着急；从肉体上，健康并不是那么锻炼；从智力上，工作并不是那么回事…. 从心开始其实，有点怀旧，并不是说不能一天睡到晚，只是能一天到晚看一本书，已经是一种奢侈。只是工作多了，慢慢接受变不回的学生时代，理解不能改变的事，然而还在乎那些希望，有时候，心太硬，也去行动，更多的是心软，着急于那些河流的奔流，逃亡于那些僵尸的麻木。 半年过去，还是想重心再来，没有太多的想法。回首四年，太多的感动，有非常多，说不出来的默默的感动。有时候我们抱怨，想想那些美好的昨天，可笑的我们都抱怨明天了。有些事太泛，仅仅只于文字，体验不到的，永远只有自己心里知道，哭过的，笑过的，害怕的，孤独的，无奈的，内疚的，太多太多的，我都忘记了。现在看来，都只是开始，承担、负责、成长、奋斗、寂寞、倾城、红灯、绿光、物欲、纵流。更多的，一份成熟，一份努力，一份稳定，一份梦想！ 工作大学的时候，一直不知道自己要做什么，一直在想，这个不会，那个不会，这个难学，那个难掌握，这个没前途，那个还没火！！ 现在看来，都淡于工作之外。终于明白，其实那时的自己，找各种借口，给各种理由，让自己迷茫，然后就继续装逼，继续赶路，然后明天那些幸福的校园，我不反对各种玩，玩出自己的人生大有人在。可惜，我可以告诉你，你都是个例！！个例！！个例！！重要的话要说三遍！ 总结：5W:工作跟学习没有二样，都是做，不同的是， 自己去做，被逼去做 或者 被逼去做，自己去做 ，顺序也是！马云首富今年多少岁？你今年多少岁？你们差距在那里？ how: 只管去做！ 技术其实，真正写代码，也就是近一年的事，没有想到！没有想到！没有想到！真的有很多我自己都不相信，一句话，就是靠那么小点运气，走到今天！如果说，我进步怎样？可以说，这一年，进步很大，如果说，我满意吗? 我只说，没有尽全力。 思想 现在，公司的同事交流，都跟我说一句： “永远不要当一个码农！” 对于技术的优劣，好坏，有一个理解，这就是Thinking in C/C++/Java/OC/Python/…. 理解 写的代码多了，发现码如其人，看一个人的代码，就知道这个人的水平，性格，能力，思想，人品…很多经典的书都是这样，日月、人件、原件… 理解思想只是第一层，理解人与机器的区别会更进一层，理解人与机器与人的整合… 总结 掌握基本MarkDown写作，这个要感谢简书，这个语法真很棒！ iOS开发能力的提高，目前还是处于初级向中级的进阶，真的不能在水的水。 Swift、HTML5/CSS3、Python语言的学习，目前只是语法水平，等下就去实践-。- Java、Android的学习，今年能入门吗？？不要问我～·～ 了解基本的测试用例，自动化测试知识，测试的妹子真的不容易，知识多又碎。。 Git/SVN/GitHub版本管理，还有项目管理等各种偷懒牛逼工具～ 扩展出来的，还有各种算法，数据结构之数学之美！ 生活其实，我不太喜欢说生活，尽管我很开心分享我的生活，只是我的生活都是在学习，生活没有太多东西，就是喜欢看书，跑步，烹饪，风景。当然，还有感情，哈哈，不想多说，人生里遇到父母就足够幸福了，还遇到你们，那就是福上福！当然，也不会满足，希望更多东西可以改变，更多东西可以控制，慢慢的欲望又归来了，生活是什么？没有太明白时，就体验一下别人的生活，你就明白，自己错了太离谱！ 计划 看书学习 每星期锻炼一次以上 每月出去一次看风景 煮饭煲汤 每月回家一次 请参加以上 其它当然，还有很多东西，现在不敢说或不想说的，可能日子长了，慢慢的会想开点，减少自己一些秘密空间，好让自己休息休息。来回，就是上面几个主题之间的平衡中庸～ 展望 希望家友和睦，爸妈安心. 保持自己内心的热量. inner peace yourself. 最后，用《了不起的盖茨比》里的前言，结束半年的一切，迎接下来的半年！ “我年纪还轻，阅历不深的时候，我父亲教导过我一句话，我至今还念念不忘。 “每逢你想要批评任何人的时候，”他对我说，“要记住，这个世界上并非所有的人，都有你拥有的那些优越条件。” Copyright 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"总结","slug":"总结","permalink":"http://iHTCboy.com/tags/总结/"},{"name":"生活","slug":"生活","permalink":"http://iHTCboy.com/tags/生活/"},{"name":"草从集","slug":"草从集","permalink":"http://iHTCboy.com/tags/草从集/"}]},{"title":"如何学到老","date":"2015-09-03T02:33:26.000Z","path":"2015/09/03/2015_如何学到老/","text":"1、怎样学深？ 一万小时定律 2、怎样去学？ 劳逸结合 望闻问切（听说读写看） 3、怎样坚持？ 保持好奇心 服汤：不必再配合其它鸡汤服用，日省三服，学之，老之","tags":[{"name":"Mac","slug":"Mac","permalink":"http://iHTCboy.com/tags/Mac/"},{"name":"快捷方式","slug":"快捷方式","permalink":"http://iHTCboy.com/tags/快捷方式/"},{"name":"效率","slug":"效率","permalink":"http://iHTCboy.com/tags/效率/"}]},{"title":"支付宝手表？YunOSWatch","date":"2015-09-02T12:33:26.000Z","path":"2015/09/02/2015_支付宝手表？YunOSWatch/","text":"今天下载支付宝应用查看里面的数据时，发现了一个YunOSWatch.bundle YunOSWatch目录下，两张图片很显眼： 刚开始以为是苹果手表： 这张很明显是YunOS?! 这张是展望图吧？ 我查看了iOS版支付宝、apple watch上的所有功能，都没有发现上面3张图，是不是支付宝也打算通过手机、手表，打开自己的支付闭环平台？！非常期待！ 支付宝手表？真的有了婊子了？！ ps：如果分析有错，欢迎在评论区讨论～ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"YunOSWatch","slug":"YunOSWatch","permalink":"http://iHTCboy.com/tags/YunOSWatch/"},{"name":"iWatch","slug":"iWatch","permalink":"http://iHTCboy.com/tags/iWatch/"},{"name":"支付宝手表","slug":"支付宝手表","permalink":"http://iHTCboy.com/tags/支付宝手表/"}]},{"title":"人生再歌，只爱今熙","date":"2015-09-01T14:57:17.000Z","path":"2015/09/01/2015_start-to-new/","text":"校园走回那个青春的树底淡出那道池塘的金鱼走进那些动情的书架梦里那年我们的童真","tags":[{"name":"宁夏","slug":"宁夏","permalink":"http://iHTCboy.com/tags/宁夏/"},{"name":"工作","slug":"工作","permalink":"http://iHTCboy.com/tags/工作/"},{"name":"开学","slug":"开学","permalink":"http://iHTCboy.com/tags/开学/"},{"name":"新的开始","slug":"新的开始","permalink":"http://iHTCboy.com/tags/新的开始/"},{"name":"校园","slug":"校园","permalink":"http://iHTCboy.com/tags/校园/"},{"name":"毕业","slug":"毕业","permalink":"http://iHTCboy.com/tags/毕业/"}]},{"title":"Mac提高使用效率的一些方法","date":"2015-09-01T12:33:26.000Z","path":"2015/09/01/2015_Mac提高使用效率的一些方法/","text":"一、我的经验之淡1、全局 command + W 关闭当前窗口 command + Q 完全退出应用 command + delete 删除文件 command + I 显示文件(夹)简介(再按command + W 关闭简介） command + `（反斜线键 - Tab 键的上方） 循环显示同一个应用打开的多个窗口 （Finder、Safari、Chrome、Xcode等都有效） control + 电源键 关机 2、手势 三指：如果点击了文件夹，可以拖动，如果光标在文本，可以选择文本。 触发角：鼠标移动到屏幕的四个角时，触发设置好的动作 3、文本编辑 command + ↑ 到文本头部 command + ↓ 到文本尾部 command + ↑ + shift 选中光标左边起到头部全部文本 command + ↓ + shift 选中光标右边起到尾部全部文本 command + ← + shift 选中光标左边全部文本 command + → + shift 选中光标右边全部文本 delete + command 删除光标左边全部文本 delete + option 如果是英文，则删除左边不是英文为间隔的英文文本 delete + fn 删除光标右边一个文字 3、Finder回到上一级目录 command + [ command + ↑到下一级目录 command + ] command + ↓ 4、Safari command + T 新建标签页 command + shift + H 显示首页 有时候我们打开了很多标签，如下图的： 二、网上总结大全1、31个常用的Safari快捷键标签和网页导航快捷键 8 个 切换到下一个标签页 – Control+Tab 切换到上一个标签页 – Control+Shift+Tab 向下滚动一屏 – 空格 向上滚动一屏 – Shift+空格 焦点移到地址栏 – Command+L 新增标签页 – Command+T 在新标签页打开链接 – Command+点按链接 将链接添加到阅读列表 – Shift+点按链接 阅读和查看网页的快捷键 7 个 去除格式，在阅读器中阅读 – Command+Shift+R 增大文字大小 – Command+加号 减小文字大小 – Command+减号 默认文字大小 – Command+0 进入或退出全屏 – Command+Escape 打开主页 – Command+Shift+H 邮寄当前页面的链接 – Command+Shift+I 缓存、载入页面、源代码和弹出窗口的快捷键 5 个 清空浏览器缓存 – Command+Option+E 重新载入页面 – Command+R 停止载入页面 – Command+. 查看页面源代码 – Command+Option+U 禁止弹出窗口 – Command+Shift+K 查找并在找到的项目中导航的快捷键 3 个 在页面上查找文字 – Command+F 向下浏览找到的项目 – 回车 向上浏览找到的项目 – Shift+回车 工具栏、历史记录和阅读列表的快捷键 8 个 隐藏或显示工具栏 – Command+i 隐藏或显示书签栏 – Command+Shift+B 隐藏或显示状态栏 – Command+/ 隐藏或显示标签页栏 – Command+Shift+T 显示 Top Sites – Command+Option+1 显示历史记录 – Command+Option+2 显示阅读列表 – Command+Shift+L 显示下载内容 – Command+Option+L 附加多点触摸手势 4 个 后退 – 两指向左滑动 前进 – 两指向右滑动 缩小 / 减小文字大小 – 两指捏合 放大 / 增大文字大小 – 两指外张 2、系统截图快捷键大全 首先说一下两种截图 1.保存成png到桌面 Command＋shift＋3: 全屏截图，保存截图到桌面 Command＋shift＋4: 鼠标选定区域截图，保存截图到桌面 2.保存到剪切板 Command＋shift＋Ctrl+3: 全屏截图，保存截图到剪切板 Command＋shift＋Ctrl+4: 鼠标选定区域截图，保存截图到剪切板 3.强大的小技巧 使用Command＋shift＋4后，按下空格键，鼠标会变成一个小相机，这时候你使用鼠标对一个窗口点击一下鼠标左键，你已经对一个窗口进行了截图。 按Command＋shift＋4 后 ,画一个抓取的区域，不要松开鼠标，接着: 1. 按住空格可以移动这个区域 2. 按住 Shift后，将锁定X 或者 Y轴进行拖动 3. 按住 Option后 将按照区域圆心进行放大. 最后所有截图将直接显示在桌面上。 更多内容，不定期更新 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Mac","slug":"Mac","permalink":"http://iHTCboy.com/tags/Mac/"},{"name":"快捷方式","slug":"快捷方式","permalink":"http://iHTCboy.com/tags/快捷方式/"},{"name":"效率","slug":"效率","permalink":"http://iHTCboy.com/tags/效率/"}]},{"title":"Hello World","date":"2015-09-01T10:18:18.000Z","path":"2015/09/01/2015_hello-world/","text":"Welcome to 何天从的博客，今天正式开始新的生活！","tags":[{"name":"Hello World","slug":"Hello-World","permalink":"http://iHTCboy.com/tags/Hello-World/"},{"name":"blog","slug":"blog","permalink":"http://iHTCboy.com/tags/blog/"}]},{"title":"友盟iOS微信登陆没有回调的原因","date":"2015-08-06T16:22:16.000Z","path":"2015/08/07/2015_友盟iOS微信登陆没有回调的原因/","text":"1、在友盟文档中这样说：链接 17.4 &#24494;&#20449;&#30331;&#24405;&#10;&#28155;&#21152;&#37197;&#32622;&#25991;&#20214;&#21442;&#32771;&#25991;&#26723;&#65306;&#28155;&#21152;&#24494;&#20449;&#21450;&#26379;&#21451;&#22280;&#65292;&#28155;&#21152;&#30456;&#20851;&#24211;&#25991;&#20214;&#65292;&#37197;&#32622;URL schemes&#21450;&#28155;&#21152;&#31995;&#32479;&#22238;&#35843;&#10;&#10;&#27880;&#24847;&#24494;&#20449;&#30331;&#24405;&#24517;&#39035;&#20808;&#22312;&#24494;&#20449;&#24320;&#25918;&#24179;&#21488;&#30003;&#35831;&#24494;&#20449;&#30331;&#24405;&#26435;&#38480;&#10;&#22312;&#20320;&#30340;&#31243;&#24207;APPdelegate&#20837;&#21475;&#26041;&#27861;&#28155;&#21152;&#19979;&#38754;&#30340;&#20195;&#30721;&#10;&#10; #import &#34;UMSocialWechatHandler.h&#34;&#10; //&#35774;&#32622;&#24494;&#20449;AppId&#12289;appSecret&#65292;&#20998;&#20139;url&#10; [UMSocialWechatHandler setWXAppId:@&#34;wxd930ea5d5a258f4f&#34; appSecret:@&#34;db426a9829e4b49a0dcac7b4162da6b6&#34; url:@&#34;http://www.umeng.com/social&#34;];&#10;&#10;&#22312;&#24494;&#20449;&#30331;&#24405;&#25353;&#38062;&#20013;&#23454;&#29616;&#19979;&#38754;&#30340;&#26041;&#27861;&#10;&#10; UMSocialSnsPlatform *snsPlatform = [UMSocialSnsPlatformManager getSocialPlatformWithName:UMShareToWechatSession];&#10;&#10; snsPlatform.loginClickHandler(self,[UMSocialControllerService defaultControllerService],YES,^(UMSocialResponseEntity *response)&#123;&#10;&#10; if (response.responseCode == UMSResponseCodeSuccess) &#123;&#10;&#10; UMSocialAccountEntity *snsAccount = [[UMSocialAccountManager socialAccountDictionary]valueForKey:UMShareToWechatSession];&#10;&#10; NSLog(@&#34;username is %@, uid is %@, token is %@ url is %@&#34;,snsAccount.userName,snsAccount.usid,snsAccount.accessToken,snsAccount.iconURL);&#10;&#10; &#125;&#10;&#10; &#125;);&#10;&#10;&#22312;&#25480;&#26435;&#23436;&#25104;&#21518;&#35843;&#29992;&#33719;&#21462;&#29992;&#25143;&#20449;&#24687;&#30340;&#26041;&#27861;&#10;&#10;//&#24471;&#21040;&#30340;&#25968;&#25454;&#22312;&#22238;&#35843;Block&#23545;&#35937;&#24418;&#21442;respone&#30340;data&#23646;&#24615;&#10;[[UMSocialDataService defaultDataService] requestSnsInformation:UMShareToWechatsession completion:^(UMSocialResponseEntity *response)&#123;&#10; NSLog(@&#34;SnsInformation is %@&#34;,response.data);&#10; &#125;]; 2、实践使用时：1#pragma mark - &#24494;&#20449;&#30331;&#24405;&#10;- (void)loginViewClickedWeiXiButton&#123;&#10; &#10; [UMSocialData setAppKey:@&#34;55bb141a67e58e9f80001801&#34;];&#10; [UMSocialWechatHandler setWXAppId:@&#34;wx2802d4e49f68996f&#34; appSecret:@&#34;f1bf8a16c5f87570ab07782d3e0ab223&#34; url:@&#34;http://www.umeng.com/social&#34;];&#10; UMSocialSnsPlatform *snsPlatform = [UMSocialSnsPlatformManager getSocialPlatformWithName:UMShareToWechatSession];&#10; snsPlatform.loginClickHandler(self,[UMSocialControllerService defaultControllerService],YES,^(UMSocialResponseEntity *response)&#123;&#10; // &#33719;&#21462;&#24494;&#21338;&#29992;&#25143;&#21517;&#12289;uid&#12289;token&#31561;&#10; if (response.responseCode == UMSResponseCodeSuccess) &#123;&#10; UMSocialAccountEntity *snsAccount = [[UMSocialAccountManager socialAccountDictionary]valueForKey:UMShareToWechatSession];&#10; NSLog(@&#34;username is %@, uid is %@, token is %@ iconUrl is %@&#34;,snsAccount.userName,snsAccount.usid,snsAccount.accessToken,snsAccount.iconURL);&#10; &#125;&#10; &#125;);&#10; &#10;&#125; 3、【坑在这里】没有回调时因为要在应用代理方法中增加：1//sdk&#10;#import &#34;UMSocialSnsService.h&#34;&#10;&#10;- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation&#10;&#123;&#10; return [UMSocialSnsService handleOpenURL:url wxApiDelegate:nil];&#10;&#125;&#10;&#10;- (void)applicationDidBecomeActive:(UIApplication *)application&#10;&#123;&#10; [UMSocialSnsService applicationDidBecomeActive];&#10;&#125; 最后说明 微信的openid对应友盟里叫usid 下面是授权成功的回调数据：1- UMSocial: makeRequestWithPath is /share/token/53290df956240b6b4a0084b3/, parameters is &#123;&#10; &#34;access_token&#34; = &#34;OezXcEiiBSKSxW0eoylIeJDUKD6z6dmr42JANLPjNN56WRFnd-vVJO37ma0gCpKY1v5q8EVEMwdQqzvXoFFpe1jQXUzjqukub9-228J8sjvugvVVQYvzkhyvAgItvkYmMIGD_cE2hAWUm44_qCB-oQ&#34;;&#10; ak = 53290df956240b6b4a0084b3;&#10; de = &#34;iPhone7,1&#34;;&#10; dt = 1438857527939;&#10; ek = 4b37315fd0421b0b3a682a4a5e4487e9;&#10; en = WiFi;&#10; &#34;expires_in&#34; = 7199;&#10; mac = &#34;02:00:00:00:00:00&#34;;&#10; openid = oyAaTjrJMAb3qfCbyDRp3h0NKyew;&#10; openudid = 147ad485c3b80ffd54bfc8689c2d7db1ed88994b;&#10; os = iOS;&#10; pcv = &#34;2.0&#34;;&#10; &#34;refresh_token&#34; = &#34;OezXcEiiBSKSxW0eoylIeJDUKD6z6dmr42JANLPjNN56WRFnd-vVJO37ma0gCpKYHXgyDeQ4Xqm60G-omrGp2u-KbIy7zTP5gV5dnw3RVN-GzkjY8gCWIMC3_cCHcflH6IPexy2c-k46gGG0M07p6g&#34;;&#10; sdkv = &#34;4.2.3&#34;;&#10; to = wxsession;&#10; tp = 0;&#10; uid = 462ae0edb57d53dfd2affb5e4ae36ad;&#10; usid = oyAaTjrJMAb3qfCbyDRp3h0NKyew;&#10;&#125; &#10;[18:38:48.197( 2055)] - UMSocial: actionType is 15 , received json Dic is &#123;&#10; data = &#123;&#10; &#125;;&#10; msg = &#34;no error&#34;;&#10; st = 200;&#10;&#125; - 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"友盟","slug":"友盟","permalink":"http://iHTCboy.com/tags/友盟/"},{"name":"第三方登陆","slug":"第三方登陆","permalink":"http://iHTCboy.com/tags/第三方登陆/"}]},{"title":"同时响应多个UIGestureRecognizer","date":"2015-07-29T15:52:16.000Z","path":"2015/07/29/2015_同时响应多个UIGestureRecognizer/","text":"最近在做产品试戴，效果如下： 使用了多个手势识别器： UIRotationGestureRecognizer UIPinchGestureRecognizer UIPanGestureRecognizer UITapGestureRecognizer 其中的问题是，试戴的图片可以同时旋转和缩放，而系统默认只能响应一个手势。要同时响应多个手势，可以通过UIGestureRecognizerDelegate 代理方法：1&#10;- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer&#123;&#10; return YES;&#10;&#125; 代理方法中，可以设置那些手势可以同时响应操作。 - 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"UIGestureRecognizer","slug":"UIGestureRecognizer","permalink":"http://iHTCboy.com/tags/UIGestureRecognizer/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"分析iOS手机淘宝首页的设计","date":"2015-07-26T14:39:16.000Z","path":"2015/07/26/2015_分析iOS手机淘宝首页的设计/","text":"手机淘宝的首页，信息量非常的大，展现的数据各不相同，所以要处理的逻辑非常多，所以，一直想分析它的设计，目前也找不能相关的资料，下面就是我自己要瞎说，不喜欢就走，禁喷！ 使用的控件 整个首页，不是用UICollectionView，就是UIScrollView构造的，至于实际用那种，简主也不知道。 细节图 分隔线 根据这些图，分隔线又不是单色，应该是图片，但分隔线有小白条，我也不知道是怎么搞的了 底部栏 系统自带的黑线，放大后，可以看到是半透明的黑色，苹果的细节做的也是很好的。最后结论，也就是淘宝是自定义的UITabBar。 层次 可以分析出来，淘宝的每一个栏目分区里，都是一个一个堆起来的，至于是怎么样做逻辑的处理？也就是说，每一个图片，应该跳转到那个业务，是不是写死的，还是后台可以动态设置？ 在6p和5s下，对应的图片，会等比的放大。 技术考虑其实，这里面我认为最难的是，快速滚动时的流畅度： 如果是利用重用的cell，但因为每个区内容样式不一样，每次重用时，又要删除，会导致多区时出现一卡一卡的。 如果不重用的视图，那么视图太长了，占用内存太大，不可行啊。 最后，简主也不知道淘宝如何实现的，今天就到这，等以后明白了，在回来更新～ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"手机淘宝","slug":"手机淘宝","permalink":"http://iHTCboy.com/tags/手机淘宝/"},{"name":"设计","slug":"设计","permalink":"http://iHTCboy.com/tags/设计/"}]},{"title":"一个工具类的单例模式","date":"2015-07-26T04:07:16.000Z","path":"2015/07/26/2015_一个工具类的单例模式/","text":"最近写了个工具类，用来集成短信、邮件、电话、打开Safari/AppStore、打开相机或相册，但是写 delegate 的时候，发现有警告： Incompatible pointer types assigning to ‘id‘ from ‘Class’ 最后，发现，用单例模式才可以。原因：类方法的self不能充当delegate 下面是stackoverflow里解决方法，构造单例模式：1Utility.h&#10;@interface Utility : NSObject &#60;AVAudioPlayerDelegate&#62;&#10;+ (Utility *)sharedUtility;&#10;@end&#10;Utility.m&#10;&#10;@implementation Utility&#10;+ (Utility *)sharedUtility&#10;&#123;&#10; static Utility *theUtility;&#10; @synchronized(self) &#123;&#10; if (!theUtility)&#10; theUtility = [[self alloc] init];&#10; &#125;&#10; return theUtility;&#10;&#125;&#10;&#10;- (void)playAudioFromFileName:(NSString *)name ofType:(NSString *)type withPlayerFinishCallback:(SEL)callback onObject:(id)callbackObject&#10;&#123;&#10; ... &#10; audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL: [self getResourceURLForName:name ofType:type] error: nil];&#10; audioPlayer.delegate = self;&#10; ...&#10;&#125;&#10;&#10;@end 1Usage&#10;&#10;[[Utility sharedUtility] playAudioFromFileName:@&#34;quack&#34; ofType:&#34;mp3&#34; withPlayerFinishCallback:@selector(doneQuacking:) onObject:duck]; 最后发现，生成单例的方法各不相同，下面是另外一种，至于用那一种更好，或者都一样？简主暂时也不知道。。1##static id _sharedInstance = nil;&#10;+(instancetype)sharedInstance&#10;&#123;&#10; static dispatch_once_t p;&#10; dispatch_once(&#38;p, ^&#123;&#10; _sharedInstance = [[self alloc] init];&#10; &#125;);&#10; return _sharedInstance;&#10;&#125; 最后 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"单例模式","slug":"单例模式","permalink":"http://iHTCboy.com/tags/单例模式/"}]},{"title":"用autolyout实现子视图对齐等宽排列","date":"2015-07-26T03:39:16.000Z","path":"2015/07/26/2015_用autolyout实现子视图对齐等宽排列/","text":"最终效果 IB中实现 其实，要让三个button三等分，那么一定要找一个view作为参考，所以我在底部加了一个bottomLine（距离左边0，距离右边40，距离底部0，高度为1），重要的是，我设置为隐藏。那么，分别让每个button等于bottomLine的三分之一，那么就等分了。 当然，三分之一的约束只是约束了每一个button的宽度，位置、高度，还要另外针对每一个设置，比如最左边的上架时间（约束：距离左边0，距离顶部0，距离底部0），其它同理之。 最后，三条竖线，位置分别距离左边button为0，顶部、底部留距离，宽度设置为1，设置一个灰色背影就行。 用代码实现约束有了上面的思路，用代码实现应该也是一样的，用Masonry来写约束吧，代码就不写了（Swift还在学，不敢教）。 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"autolyout","slug":"autolyout","permalink":"http://iHTCboy.com/tags/autolyout/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"你若安好，我将不再告诉你我的幸福","date":"2015-07-25T16:49:26.000Z","path":"2015/07/26/2015_你若安好，我将不再告诉你我的幸福/","text":"你若不爱我则会离开离开熟悉的灯光街道离开不在属于我们的约会 我若无缘我则会成长带走那份天真的梦游乐场对自己下狠心不在回头看你二次 心痛的事渐渐的远离和怀疑纯洁的年轮我们只因疯狂而恐惧只因孤独而寂寞 每次给你一个机会就是为了给自己一个机会一个弥补一切的机会事实面前，任何借口显得无力 不在给自己机会不在原谅自己今天对自己狠下心只希望大家各奔幸福","tags":[{"name":"爱情","slug":"爱情","permalink":"http://iHTCboy.com/tags/爱情/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"iOS8相机授权判断","date":"2015-07-23T15:04:16.000Z","path":"2015/07/23/2015_iOS-8相机授权判断/","text":"最近在做自定义相机，然后就是iOS8要授权才能使用，如果用户拒绝，那么，就不能操作。 问题是，怎么知道用户第一次选择相机，并且应用有打开相机的权限？ 1// &#22312;iOS7 &#26102;&#65292;&#21482;&#26377;&#37096;&#20998;&#22320;&#21306;&#35201;&#27714;&#25480;&#26435;&#25165;&#33021;&#25171;&#24320;&#30456;&#26426;&#10;if (floor(NSFoundationVersionNumber) &#60;= NSFoundationVersionNumber_iOS_7_1) &#123;&#10; // Pre iOS 8 -- No camera auth required.&#10; &#10; &#125;else &#123;&#10; // iOS 8 &#21518;&#65292;&#20840;&#37096;&#37117;&#35201;&#25480;&#26435;&#10; &#10; // Thanks: http://stackoverflow.com/a/24684021/2611971&#10; &#10; AVAuthorizationStatus status = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];&#10; switch (status) &#123;&#10; case AVAuthorizationStatusNotDetermined:&#123;&#10; // &#35768;&#21487;&#23545;&#35805;&#27809;&#26377;&#20986;&#29616;&#65292;&#21457;&#36215;&#25480;&#26435;&#35768;&#21487;&#10; &#10; [AVCaptureDevice requestAccessForMediaType:AVMediaTypeVideo completionHandler:^(BOOL granted) &#123;&#10; &#10; if (granted) &#123;&#10; //&#31532;&#19968;&#27425;&#29992;&#25143;&#25509;&#21463;&#10; &#125;else&#123;&#10; //&#29992;&#25143;&#25298;&#32477;&#10; &#125;&#10; &#125;];&#10; break;&#10; &#125;&#10; case AVAuthorizationStatusAuthorized:&#123;&#10; // &#24050;&#32463;&#24320;&#21551;&#25480;&#26435;&#65292;&#21487;&#32487;&#32493;&#10; &#10; break;&#10; &#125;&#10; case AVAuthorizationStatusDenied:&#10; case AVAuthorizationStatusRestricted:&#10; // &#29992;&#25143;&#26126;&#30830;&#22320;&#25298;&#32477;&#25480;&#26435;&#65292;&#25110;&#32773;&#30456;&#26426;&#35774;&#22791;&#26080;&#27861;&#35775;&#38382;&#10; &#10; break;&#10; default:&#10; break;&#10; &#125;&#10; &#10; &#125; 最后一个坑：没有解决：而问题的关键是，在第一次授权时，弹出的AlertView，其实，应用已经在后台了。当用户选择其中一个时，会从新回到前台，导致第一次时，如果要打开相机，会非常的慢，暂时还不知道这个问题怎么解决？欢迎在讨论区，谢谢大家！ 补充:2015.7.26发现其它相机应用，刚打开时，就询问打授权，可能这就是目前比较好的解决方案？ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"iOS8相机授权","slug":"iOS8相机授权","permalink":"http://iHTCboy.com/tags/iOS8相机授权/"}]},{"title":"iOS接收null的处理方法","date":"2015-07-19T15:45:16.000Z","path":"2015/07/19/2015_iOS接收null的处理方法/","text":"经常服务器返回的数据，有null，还有nil，如果在模型层不处理的话，到时候数据展现时，一定会崩啊，最近决心要解决这个问题，所以查看了一些资料后，有答案了： 1- (id) setNoNull:(id)aValue&#123;&#10; if (aValue == nil) &#123;&#10; aValue = @&#34;&#34;;//&#20026;null&#26102;&#65292;&#30452;&#25509;&#36171;&#31354;&#10; &#125; else if ((NSNull *)aValue == [NSNull null]) &#123;&#10; aValue = @&#34;&#34;;&#10; if ([aValue isEqual:nil]) &#123;&#10; aValue = @&#34;&#34;;&#10; &#125;&#10; &#125;&#10; return aValue;&#10;&#125; 这个方法，可以把null和nil赋空值，这样字符串操作时，就不会崩了，同时，如果解析成数值，也可以改写为@0 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[]},{"title":"Xcode打包上传后, AppStore提示“二进制文件无效”","date":"2015-07-06T08:20:16.000Z","path":"2015/07/06/2015_AppStore-打包上传后提示“二进制文件无效”/","text":"搜索了2个小时，上传了5个版本后，终于解决了。网上是这样说的： http://stackoverflow.com/questions/26163856/invalid-swift-support-invalid-implementation-of-swift1、重启Xcode，clean build2、重启Mac OSX3、换个新版本Xcode 最后解决答案是： 不要用私有Api，如果工程里面导入了Reveal.framework 要删除掉重新打包上传。一般情况下你用 application loader 上传，如果使用了，会检测出来，并且提示。如果app特别大，会上传到itunesconnect 才会去检测。检测私有api 可以看看下面这个http://stackoverflow.com/questions/2842357/how-does-apple-know-you-are-using-private-api 最近买的Reveal，结果用了后一直没在意，也不知道有私有方法，这次真又涨姿势了！ 一般无效苹果会发邮箱到开发者邮箱里，有详情原因。 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"二进制文件无效","slug":"二进制文件无效","permalink":"http://iHTCboy.com/tags/二进制文件无效/"}]},{"title":"App Store被拒绝后的解决方案中心(酒精、烟草、或药物的应用评级不能是4+)","date":"2015-07-02T00:30:16.000Z","path":"2015/07/02/2015_App-Store被拒绝后的解决方案中心/","text":"3.8 Details The rating you’ve selected, 4+, is inconsistent with the content of your app. Since your app includes content or features that pertain to alcohol, your ratings must reflect a “Frequent/Intense” setting for “Alcohol, Tobacco, or Drug Use or Reference” in iTunes Connect. 酒精、烟草、或药物的应用评级不能是4+ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore被拒","slug":"AppStore被拒","permalink":"http://iHTCboy.com/tags/AppStore被拒/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"无法回滚","date":"2015-06-26T11:20:26.000Z","path":"2015/06/26/2015_无法回滚/","text":"无法在回去过去的美好，将永远的暂停过去的心塞，将不再的疼痛无法回流的泪水 当初小小的信任如今已经变成怀疑和恐惧当初不变的坚持如今已经不值一文的谎言 只怪自己太美好美好的世界早已过去我只是在现实的世界只怀念你只是我还沉醉中梦里不愿离开 无法回滚无法在信任的爱掉落2次的围城只是自己太年轻想太多","tags":[{"name":"爱情","slug":"爱情","permalink":"http://iHTCboy.com/tags/爱情/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"最新Reveal.1.5.1详细配置实战","date":"2015-06-16T16:25:26.000Z","path":"2015/06/17/2015_最新Reveal-1-5-1-详细配置实战/","text":"序最近在唐巧哥的微信看到Reveal中国大优惠，一直听说这个软件很利害，但是对盗版软件的使用很力不从心，所以以前没有用过，果断买下了。 买了后，发现不会配置，看的唐哥的《iOS开发进阶》讲很也不细，像我这样的小白，连vim都不熟悉，还能懂怎么保存？！？！ Reveal公共配置（1）在当前用户目录下，打开终端中新建一个.lldbinit文件,位置是~/.lldbinit。命令是: vim ~/.lldbinit然后粘贴下面代码： 1234567command alias reveal_load_sim expr (void*)dlopen(\"/Applications/Reveal.app/Contents/SharedSupport/iOS-Libraries/libReveal.dylib\", 0x2);command alias reveal_load_dev expr (void*)dlopen([(NSString*)[(NSBundle*)[NSBundle mainBundle] pathForResource:@\"libReveal\" ofType:@\"dylib\"] cStringUsingEncoding:0x4], 0x2);command alias reveal_start expr (void)[(NSNotificationCenter*)[NSNotificationCenter defaultCenter] postNotificationName:@\"IBARevealRequestStart\" object:nil];command alias reveal_stop expr (void)[(NSNotificationCenter*)[NSNotificationCenter defaultCenter] postNotificationName:@\"IBARevealRequestStop\" object:nil]; 按一下esc键，然后输入:wq然后就保存了完成配置的关键一步啦，可以关闭终端了。 连接到模拟器调试在项目代理中的application:didFinishLaunchingWithOptions:方法中，进行以下几步，第一：添加一个断点，并右击编辑第二：单击“Action”右边的“+”，输入“reveal_load_sim”第三：勾选上“Option” 上的选项 “Automatically continue after evaluating”, 然后运行APP在模拟器，打开Reveal就可以看到左上角有个连接调试。 连接到真机调试（1）添加Reveal链接动态库到我们工程：在Reveal菜单“Help”-&gt;”Show Reveal Library in Finder” 找到动态库后拖拽到工程中； （2）注意Xcode默认是将其设置到“Link Binary With Libraries”中，需要删除它，并添加到 “Copy Bundle Resources”下面； (3)选中 Build Settings栏找到Linking下面的Other Linker Flags setting: 1-ObjC -lz -framework Reveal (4）在项目代理中的application:didFinishLaunchingWithOptions:方法中，进行以下几步，第一：添加一个断点，并右击编辑第二：单击“Action”右边的“+”，输入“reveal_load_dev”第三：勾选上“Option” 上的选项 “Automatically continue after evaluating”, 按command+R编译项目，在Reveal中可以看到: 最后说明由于没有越狱的机子，所以没有增加越狱的配置。本文也没有讨论配置和原理的细节，简主也不懂！请自行脑补！其它细节，如有错误，欢迎一起讨论！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"Reveal","slug":"Reveal","permalink":"http://iHTCboy.com/tags/Reveal/"},{"name":"UIView","slug":"UIView","permalink":"http://iHTCboy.com/tags/UIView/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"结束的不仅仅是大学四年，是一个时代","date":"2015-06-08T17:33:26.000Z","path":"2015/06/09/2015_结束的不仅仅是大学四年，是一个时代/","text":"摘下四叶草那一刻，意味着4年结束了每每你们问我四叶草，它只是简单的信念4年的大学，每年收获一个珍桂 《大一》匆匆那年，我们还年轻想起辩论赛，想起军训，想起傻逼的绿军队每每一笑，都是泪水那青涩的脸孔，我总向往着最美的阳光 那回，认真和努力我保持着高考那堆理想，那堆美梦去早起，去读书充满鸡血般在图书馆装逼 喜欢，找一个喜欢读书的妹纸发现，原来读书是最难把到妹哈哈，我也是醉了安安地在图书馆角落里，做我的男美子 读书，本无竞争一年到尾，无战争，考了个第7，拿个3等奖金，然后就继续装逼尼玛，我想说，我不是学霸！接下来，我将回忆，“学霸是如何炼成的！” 《大二》装逼的时代结束了开始去爱好，去发现好玩涨姿势的技能学视频制作，学PS，然后各种醉我能说这是装逼技能吗结果也没有把到妹，只能自己装逼自己飞吧！ 后来发现，其实，我喜欢的是艺术.文学，诗歌，摄像，艺术光学，美术，抽象，哲学，心理学，人文学…说远了，跑题了深深的喜欢艺术！ 没错！最后还是回到正途把图书馆的网络书籍，开始一本本去翻最后查了一下，我当年的借阅数前排大学四年，总排名也有前5吧 渐渐的，不相信爱了哲学告诉我，人必有一落当我在失落时，没有其它人只有我一个人坚持着，最后，我爱上了自己 《大三》表白不在行，浪漫不太懂只会在图书馆装装逼，晒晒书后来，进入疯狂模式决定当网络攻城师没错！就是去城市装逼的攻城狮！ 很用心的一年，拿了几个自以为逼逼的证呵呵，我这是书读多，脑血管堵了吧慢慢的，我又看到装逼界老大决定弃狮从猿 你说，都大三了，一点不长大装逼的最高境界又在图书馆借了百书把图书馆睡了无数片 没错！你猜错了！我真的痛倒了病倒了一个月一个月的时候 每每想起，在住院的日夜我都泪流不止，看着天空，我想过放弃可惜别忘了，我可是装逼过来的！根本没有什么能够阻挡 打着吊瓶，照顾好自己看着生命的尽头，让你重生你一定会充满感激！爱每一个人，充满对世界的爱，羡慕，善良，温柔 就这样，装逼的成功让我对生命，对生活，对自己有了新的期待每每想去爱时，我总感恩，生命的每个人 还是会做错事大学，做事的事情也不少没有好好学英语，装装逼说几句鸡肠文把几个外国语的妹纸吧还是且行且珍惜 旅途总是没有退路人生是场荒芜的旅行，长途跋涉，苦乐在心 《大四》装逼带我飞大四来的突然，大三上的心理学都不够用了整个人都不好了决定去实习，不在被学校装逼 结束了3个月的实习，大四上就玩完乐于前途感谢老师学校那么装逼，不想回去被装逼 最后，就没有最后其实是有的，就是过完年，实习了3个月回了学校 这次，不在装逼不想飞平静的回去然后感谢了那些感恩的同学 大学说了四年会请客的只能请了一些人时间和金钱如果愿意和邀请，有诚有意 感谢那些四年里，带我装逼带我飞的还有那些被我装逼被我飞的，开玩笑的愿祝大家，大学四年开心的，不开心的统统忘记，我是原谅了所有人 剩下的，校园已经远离了四叶草，装逼成功飞走了你我们，四海五湖走远了别忘了，我们永远都还在 别，只是为了下一次更辉耀的重逢离，只是为了下一次更醇香的酒席 永远永远的网络11-1班！你们是最棒的！","tags":[{"name":"四年","slug":"四年","permalink":"http://iHTCboy.com/tags/四年/"},{"name":"大学","slug":"大学","permalink":"http://iHTCboy.com/tags/大学/"},{"name":"生活","slug":"生活","permalink":"http://iHTCboy.com/tags/生活/"}]},{"title":"iOS支付宝SDK回调那坑","date":"2015-05-25T16:46:26.000Z","path":"2015/05/26/2015_iOS支付宝SDK回调那坑/","text":"支付宝钱包支付接口开发包2.0标准版(iOS 2.2.1) ，回调不出来，demo给出的方法是：1234567891011121314151617- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation &#123; if ([url.host isEqualToString:@\"safepay\"]) &#123; [[AlipaySDK defaultService] processAuth_V2Result:url standbyCallback:^(NSDictionary *resultDic) &#123; NSLog(@\"result = %@\",resultDic); NSString *resultStr = resultDic[@\"result\"]; &#125;]; &#125; return YES;&#125; 而事实上的回调是这样的：1234567if ([url.host isEqualToString:@\"safepay\"]) &#123; [[AlipaySDK defaultService] processOrderWithPaymentResult:url standbyCallback:^(NSDictionary *resultDic) &#123; NSLog(@\"result = %@\",resultDic); NSString *resultStr = resultDic[@\"memo\"]; NSLog(@\"memo = %@\",resultStr); &#125;];&#125; 这支付宝也真是的，虽然集成过程中很简单，但是这个回调却让人想屎：支付表是这样说的：12345678/*** 处理授权信息Url** @param resultUrl 钱包返回的授权结果url* @param completionBlock 跳授权结果回调，保证跳转钱包授权过程中，即使调用方app被系统```kill```时，能通过这个回调取到支付结果。*/- (void)processAuth_V2Result:(NSURL *)resultUrl standbyCallback:(CompletionBlock)completionBlock; 另附几个状态码：123459000 订单支付成功 8000 正在处理中 4000 订单支付失败 6001 用户中途取消 6002 网络连接出错 这个月把公司的项目重写了一遍，收获很多，等有点时间时，再慢慢分享给大家啊！～nice 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"alipay","slug":"alipay","permalink":"http://iHTCboy.com/tags/alipay/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"支付宝","slug":"支付宝","permalink":"http://iHTCboy.com/tags/支付宝/"}]},{"title":"仅仅只是给你点赞","date":"2015-05-14T14:39:26.000Z","path":"2015/05/14/2015_仅仅只是给你点赞/","text":"给你一个点赞你就胡思乱想她不会是对我有意思？她不会是喜欢我？她不会是爱上我？！ 移动互网络拉近了人的距离让人人在沉醉低头点赞之中也许别人的一个轻点就会让你喜怒哀乐一天也只能让你智商情商更低 轻轻一个点赞它代表的可以重于泰山也可轻于鸿毛在于理解点赞初心 点赞，也许是别人对你的一点赞同但你要容得下反对者点赞，也许是别人对你的一笑而过但你要理智虽然你可能不知道别人点赞后一笑置之但你也要笑眯眯继续产出 点赞只是点赞别太当真别太在意别太得意 生活依然如故我们在书写自己时要把别人的鲜花当成风景点缀如若美丽，便一赏如若牛粪，便赶路","tags":[{"name":"爱情","slug":"爱情","permalink":"http://iHTCboy.com/tags/爱情/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"我为什么只喜欢你","date":"2015-05-12T16:33:26.000Z","path":"2015/05/13/2015_我为什么只喜欢你/","text":"我才不要你的美貌即便你真的很美也不可能是你的身材即便也是很棒棒的 那我为什么喜欢你是我太寂寞了吗我承认我单身5年很孤独，但不是寂寞我可以把寂寞交给左右手但绝不会随便交给一个女孩 那我为什么喜欢你你这时一定问我图啥这世界，就是赤裸裸的四君子名钱权色名，你现在应该没有出名钱，我不敢轻薄你，因为我喜欢你权，你现在也应该没有色，我承认，你漂亮，至少我眼里你最美 我为什么只喜欢你如果你一定要问一个为什么那我只能答：你不懂我们不是因果关系不是因为，所以我喜欢你恰恰相反只喜欢你，所以我爱你 不是因为你是苹果我肚子饿了所以我要吃苹果没有为什么你是苹果，我喜欢苹果所以我喜欢 喜欢请不要问太多为什么喜欢不是问为什么喜欢就要去感受它感受喜欢就是喜欢别问我为什么喜欢","tags":[{"name":"爱情","slug":"爱情","permalink":"http://iHTCboy.com/tags/爱情/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"只是爱你爱得太着急","date":"2015-05-10T06:07:26.000Z","path":"2015/05/10/2015_只是爱你爱得太着急/","text":"急躁的社会让我不知所措地跟着急 急于表达我对你的爱 表达我的一见倾心 总想万种思绪倾述于你 只为想证明我有多爱你 一见钟爱 仅此而已 也只因爱你爱得太急速 想要告诉全世界，我爱的你 却根本没能证明 连一句表白也考虑很久 爱你，我想只是爱你 你爱不爱，我都很在乎 在乎你的时候 我却把内心的爱 全把它推给你 让你无法呼吸 无法承受 是我错，只是爱你爱得太着急 爱，需要时间 别爱的太着急 静静思念，不时刻告诉你 不应着急告诉你我爱你 不应爱你爱得着急 去发现我的爱 或接受我的爱 不管接受 或拒绝 我就在你身边，一个拥抱足以感化我 慢慢地追随你 了解你的性格爱好 静静的守望你 记下你的笑脸快乐 爱，不离不弃 爱，不去证明 爱的淡，爱的浓 请不要着急把你的爱全部一次性交给我 慢慢来，我等你 慢慢来，我爱你","tags":[{"name":"爱情","slug":"爱情","permalink":"http://iHTCboy.com/tags/爱情/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"iOS开发必备HUD(透明指示层)","date":"2015-05-10T03:18:26.000Z","path":"2015/05/10/2015_iOS开发必备HUD(透明指示层)/","text":"1.MBProgressHUDGitHub地址：https://github.com/jdg/MBProgressHUD基本上看到的主流iOS应用都集成了这个，Star 7k了，最近看到很多应用HUD隐藏时，有一个动画过程，我还以为是自己扩展的，后来研究才发现，有这个属性animationType: 1@property (assign) MBProgressHUDAnimation animationType; 12345678typedef NS_ENUM(NSInteger, MBProgressHUDAnimation) &#123;/** Opacity animation */MBProgressHUDAnimationFade,/** Opacity + scale animation */MBProgressHUDAnimationZoom,MBProgressHUDAnimationZoomOut = MBProgressHUDAnimationZoom,MBProgressHUDAnimationZoomIn&#125;; 2. SVProgressHUDGitHub地址：https://github.com/TransitApp/SVProgressHUDSVProgressHUD和MBProgressHUD效果差不多，特点就是不需要使用协议，同时也不需要声明实例。直接通过类方法就可以调用：1[SVProgressHUD method] 1[SVProgressHUD dismiss] 3. JGProgressHUDGitHub地址：https://github.com/JonasGessner/JGProgressHUDJGProgressHUD和MBProgressHUD效果差不多，作为后起之秀，特点就是如果有键盘时，HUD可以自动上移，效果非常棒！另外自定义定制也很灵活。 4. ToastGitHub地址：https://github.com/scalessec/Toast这个Toast非常经典。 1234567891011121314151617// basic usage[self.view makeToast:@\"This is a piece of toast.\"];// toast with duration, title, and position[self.view makeToast:@\"This is a piece of toast with a title.\" duration:3.0 position:CSToastPositionTop title:@\"Toast Title\"];// toast with an image[self.view makeToast:@\"This is a piece of toast with an image.\" duration:3.0 position:[NSValue valueWithCGPoint:CGPointMake(110, 110)] image:[UIImage imageNamed:@\"toast.png\"]];// display toast with an activity spinner[self.view makeToastActivity]; 目前来说，以前4种HUD就能满足基本需求，实际开发中，集成到一个Utility中就更方便，等我完善了在放出来分享啦 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"HUD","slug":"HUD","permalink":"http://iHTCboy.com/tags/HUD/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"透明指示层","slug":"透明指示层","permalink":"http://iHTCboy.com/tags/透明指示层/"}]},{"title":"现实之诚","date":"2015-05-03T13:04:26.000Z","path":"2015/05/03/2015_现实之诚/","text":"永远18将是一个逝去的谎言突然发现后而惊讶不定带走了一些年轻、放肆熟悉的梦总变得成熟 路过村口、街头、巷尾走过湖边、桥上、峰峦面过陌生、无缘、熟男轻盈如风，步履匆匆走过 城市的灯光，给了城市多一点浮躁点亮了一些人的美梦燃烧了一些人的青春刺穿了一些人的酒绿埋葬了一些人的浮躁 如斯而也时间短促，生命有限赶早上的公交追末班的地铁 如风而去青春熙路，人生苦短做朝九晚五之事煮酸甜苦辣之饭 如花恕放金钱无尽，温馨有盪无车无房爱生活有乐有悲乃人生 如此而已无忧天大，知足长乐安静做一个美男子坚持之路必有福相","tags":[{"name":"散文","slug":"散文","permalink":"http://iHTCboy.com/tags/散文/"},{"name":"诗歌","slug":"诗歌","permalink":"http://iHTCboy.com/tags/诗歌/"},{"name":"随记","slug":"随记","permalink":"http://iHTCboy.com/tags/随记/"}]},{"title":"1分钟解决iOS_backBarButtonItem问题","date":"2015-04-27T12:32:16.000Z","path":"2015/04/27/2015_1分钟解决iOS_backBarButtonItem问题/","text":"1、序 iOS导航栏的返回按钮，一直都是开发中比较头痛的问题。 正好在做毕业设计时，想到要设置全局的返回样式，只要图片，不要文字，形式如下： 2、思考过程 网上有很多种方法，但是我都认为太麻烦，所以看能不能简单的设置一个全局样式 （1）开始时，我设置了如下： 12345678910111213141516UINavigationBar * navigationBar = [UINavigationBar appearance];//返回按钮的箭头颜色[navigationBar setTintColor:[UIColor whiteColor]];//设置返回样式图片UIImage *image = [UIImage imageNamed:@\"navigationbar_back\"];image = [image imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];navigationBar.backIndicatorImage = image;navigationBar.backIndicatorTransitionMaskImage = image; 以上代码实现了全局的形式如下： （2）讨论：全局下，箭头都是自定义样式了，但是文字怎么去掉？网上的方法很多，有用到时在设置，或全局的利用运行时重载方法，问题都是没有达到简单的方法，后来找到这样一个方法如下： 利用全局的UIBarButtonItem，然后巧妙的设置文字的偏移值，达到“隐藏”效果 12345678UIBarButtonItem *buttonItem = [UIBarButtonItem appearanceWhenContainedIn:[UINavigationBar class], nil];UIOffset offset;offset.horizontal = -500;[buttonItem setBackButtonTitlePositionAdjustment:offset forBarMetrics:UIBarMetricsDefault]; 不知道这个方法是不是最简单，和这个方法是不有什么“bug”，能力有限，欢迎指点！ 3、最后效果如下： 4、快速使用方法123456789101112131415161718192021222324252627282930- (void)setNaviBack&#123;UINavigationBar * navigationBar = [UINavigationBar appearance];//返回按钮的箭头颜色[navigationBar setTintColor:[UIColor colorWithRed:0.984 green:0.000 blue:0.235 alpha:1.000]];//设置返回样式图片UIImage *image = [UIImage imageNamed:@\"navi_back\"];image = [image imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];navigationBar.backIndicatorImage = image;navigationBar.backIndicatorTransitionMaskImage = image;UIBarButtonItem *buttonItem = [UIBarButtonItem appearanceWhenContainedIn:[UINavigationBar class], nil];UIOffset offset;offset.horizontal = - 500;offset.vertical = - 500;[buttonItem setBackButtonTitlePositionAdjustment:offset forBarMetrics:UIBarMetricsDefault];&#125; 5、总结在AppDelegate里集成上面代码，应用只要push后，不设置left按钮，默认都是统一的返回图片，快不快！而且保留了系统自带的左滑返回手势 6、Bug感谢 @binMyth 、 @简书坤 提醒，bug: 导航条上的返回按钮 的 相应区域 还是原来那么大 没有变为图片的大小 第一个界面的 title 过长 会影响 跳转到的第二界面 的 title 因为没有去改变系统的backBarButtonItem，所以位置是没有变的。在iPhone 5s上测试： 如果上一级标题没有超过6个中文，那么其实下一级时，返回标题会显示完整，导致下一级标题右移了。 如果上一级标题超过6个中文，系统会设置”返回“,位置相对较少，标题不会右移。 当然，在iPhone 6plus上宽度更大，具有没有测试，对于一般应用，标题不会太长，是可以接受吧。谢谢大家的指正！！如果大家有更好的方法，欢迎指教！ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"backBarButtonItem","slug":"backBarButtonItem","permalink":"http://iHTCboy.com/tags/backBarButtonItem/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]},{"title":"iOS自定义版本更新检查","date":"2015-04-26T05:01:26.000Z","path":"2015/04/26/2015_iOS自定义版本更新检查/","text":"1、效果图 2、关键点请求http://itunes.apple.com/lookup?id=968615456，就会返回关于这个应用的详细内容的JSON数据，后面就简单了吧 我的应用返回的JSON数据(已经格式化)：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121&#123;\"resultCount\": 1,\"results\": [ &#123; \"advisories\": [ \"Unrestricted Web Access\" ], \"artistId\": 914453386, \"artistName\": \"he tiancong\", \"artistViewUrl\": \"https://itunes.apple.com/us/artist/he-tiancong/id914453386?uo=4\", \"artworkUrl100\": \"http://is5.mzstatic.com/image/pf/us/r30/Purple5/v4/6f/89/92/6f8992e4-5c10-be87-9242-d933ddb0780a/mzl.jxbacfmg.png\", \"artworkUrl512\": \"http://is5.mzstatic.com/image/pf/us/r30/Purple5/v4/6f/89/92/6f8992e4-5c10-be87-9242-d933ddb0780a/mzl.jxbacfmg.png\", \"artworkUrl60\": \"http://is3.mzstatic.com/image/pf/us/r30/Purple3/v4/2e/cc/a9/2ecca990-b82a-a238-793a-a16b59b56389/AppIcon60x60_U00402x.png\", \"bundleId\": \"CampusOfGLUT\", \"contentAdvisoryRating\": \"17+\", \"currency\": \"USD\", \"description\": \"桂林理工大学——校园通正式上线！应用提供：1、学校新闻、通知等动态；2、学校学院、学习等、3、学习 、生活等多栏目，分享和交流平台～ 欢迎大家提供建议和评价！邮件：ihetiancong@qq.comQQ：3027201361\", \"features\": [ \"iosUniversal\" ], \"fileSizeBytes\": \"6436734\", \"formattedPrice\": \"Free\", \"genreIds\": [ \"6017\", \"6012\" ], \"genres\": [ \"Education\", \"Lifestyle\" ], \"ipadScreenshotUrls\": [ \"http://a1.mzstatic.com/us/r30/Purple3/v4/cf/36/c1/cf36c120-3798-303d-6ae6-cb70da8c7b18/screen480x480.jpeg\", \"http://a3.mzstatic.com/us/r30/Purple3/v4/4c/34/19/4c3419c4-c777-f202-0f5a-a1e733bf37a8/screen480x480.jpeg\", \"http://a2.mzstatic.com/us/r30/Purple5/v4/9e/9b/35/9e9b3592-4e93-148b-0fd8-73d8ed389388/screen480x480.jpeg\" ], \"isGameCenterEnabled\": false, \"kind\": \"software\", \"languageCodesISO2A\": [ \"EN\", \"FR\", \"DE\", \"JA\", \"KO\", \"PL\", \"RU\", \"ZH\", \"ES\", \"ZH\", \"UK\" ], \"minimumOsVersion\": \"8.1\", \"price\": 0.0, \"primaryGenreId\": 6017, \"primaryGenreName\": \"Education\", \"releaseDate\": \"2015-03-18T09:34:28Z\", \"releaseNotes\": \"——————那些年，最后一次更新的版本——————1、优化iPhone和iPad下显示效果2、增加话题图标，内容更加醒目3、增加一些可有可无的更新——————那些年，我们一起说过的话题——————1、非常感谢那些年i被拒绝的女孩，她们让我充实成长2、非常感谢那些年i被关照的老师，他们让我无忧学习3、非常感谢那些年i被信任的同学，他们让我珍惜想念4、非常感谢那些年i被坚持的自己，你们让我相信自己——————最后说明——————1、应用为i毕业设计作品，不提供商业信息，感谢大家支持2、应用中的学校新闻只提参考，由于解析原因，可能个别新闻无法显示，真实动态请浏览（www.glut.edu.cn)3、校园话题的意义是希望能将学校的信息通过移动互联网重新整合在一起，这是一个信息未来的趋势4、其它问题请联系：ihetiancong@qq.com——————谢谢大家——————\", \"screenshotUrls\": [ \"http://a2.mzstatic.com/us/r30/Purple1/v4/1f/bf/32/1fbf321a-c22b-f938-0d84-17e65730e7a9/screen1136x1136.jpeg\", \"http://a5.mzstatic.com/us/r30/Purple3/v4/c9/92/ec/c992ec71-7576-6334-3ebb-4aa857880219/screen1136x1136.jpeg\", \"http://a1.mzstatic.com/us/r30/Purple5/v4/72/27/ae/7227aed1-62fa-6946-e63e-52090ce6a021/screen1136x1136.jpeg\", \"http://a4.mzstatic.com/us/r30/Purple2/v4/13/46/d3/1346d396-4126-ab48-ae15-b0038b92bd68/screen1136x1136.jpeg\" ], \"sellerName\": \"he tiancong\", \"sellerUrl\": \"http://weibo.com/iHTCapp\", \"supportedDevices\": [ \"iPhone5c\", \"iPhone6Plus\", \"iPodTouchFifthGen\", \"iPadThirdGen4G\", \"iPad2Wifi\", \"iPadFourthGen\", \"iPhone5s\", \"iPhone4S\", \"iPadThirdGen\", \"iPad23G\", \"iPhone6\", \"iPadFourthGen4G\", \"iPhone5\", \"iPadMini\", \"iPadMini4G\" ], \"trackCensoredName\": \"桂林理工大学---校园通\", \"trackContentRating\": \"17+\", \"trackId\": 968615456, \"trackName\": \"桂林理工大学---校园通\", \"trackViewUrl\": \"https://itunes.apple.com/us/app/gui-lin-li-gong-da-xue-xiao/id968615456?mt=8&amp;uo=4\", \"version\": \"1.3\", \"wrapperType\": \"software\" &#125;]&#125; 3、检查更新Demo 检查更新 123456789101112131415[AFNetworkingUtils getRequestWithUrl:@\"http://itunes.apple.com/lookup?id=968615456\" afterExecute:^(NSDictionary *resultDic) &#123; float version =[[[[resultDic objectForKey:@\"results\"] objectAtIndex:0] valueForKey:@\"version\"] floatValue]; NSDictionary *infoDic=[[NSBundle mainBundle] infoDictionary]; float currentVersion = [[infoDic valueForKey:@\"CFBundleShortVersionString\"] floatValue]; if(version&gt;currentVersion)&#123; NSString *alertTitle=[@\"桂林理工大学-校园通v\" stringByAppendingString:[NSString stringWithFormat:@\"%0.1f\",version]]; NSString *alertMsg=@\"是否要更新？\"; //NSString *alertMsg = [[[resultDic objectForKey:@\"results\"] objectAtIndex:0] valueForKey:@\"releaseNotes\"] UIAlertView *alertView=[[UIAlertView alloc] initWithTitle:alertTitle message:alertMsg delegate:self cancelButtonTitle:@\"稍后更新\" otherButtonTitles:@\"立即更新\", nil]; [alertView show]; &#125; &#125; onError:^&#123; &#125;]; 跳到AppStore更新 12NSString *url = @\"https://itunes.apple.com/us/app/gui-lin-li-gong-da-xue-xiao/id968615456?mt=8&amp;uo=4\";[[UIApplication sharedApplication] openURL:[NSURL URLWithString:url]]; 4、自定义成一个工具 使用时调用这个方法就行 123456789101112131415 #pragma mark - 检查版本更新 -(void) checkUpdate&#123; InformationHandleTool * tool = [InformationHandleTool sharedInfoTool]; [tool checkUpdateWithAppID:@\"968615456\" success:^(NSDictionary *resultDic, BOOL isNewVersion, NSString *newVersion) &#123; if (isNewVersion) &#123; [self showUpdateView:newVersion]; &#125; &#125; failure:^(NSError *error) &#123; ; &#125;];&#125; 网络请求方法-(void)checkUpdateWithAppID:(NSString )appID success:(void (^)(NSDictionary resultDic , BOOL isNewVersion , NSString newVersion))success failure:(void (^)(NSError error))failure 1234567891011121314151617181920212223242526272829303132 #pragma mark - 检查版本更新 - (void)checkUpdateWithAppID:(NSString *)appID success:(void (^)(NSDictionary *resultDic , BOOL isNewVersion , NSString * newVersion))success failure:(void (^)(NSError *error))failure &#123; AFHTTPRequestOperationManager *manager=[AFHTTPRequestOperationManager manager]; manager.requestSerializer=[AFHTTPRequestSerializer serializer]; manager.responseSerializer=[AFHTTPResponseSerializer serializer]; NSString *encodingUrl=[[@\"http://itunes.apple.com/lookup?id=\" stringByAppendingString:appID] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; [manager GET:encodingUrl parameters:nil success:^(AFHTTPRequestOperation *operation, id responseObject) &#123; NSDictionary *resultDic=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil]; NSString * versionStr =[[[resultDic objectForKey:@\"results\"] objectAtIndex:0] valueForKey:@\"version\"]; float version =[versionStr floatValue]; //self.iTunesLink=[[[resultDic objectForKey:@\"results\"] objectAtIndex:0] valueForKey:@\"trackViewUrl\"]; NSDictionary *infoDic=[[NSBundle mainBundle] infoDictionary]; float currentVersion = [[infoDic valueForKey:@\"CFBundleShortVersionString\"] floatValue]; if(version&gt;currentVersion)&#123; success(resultDic, YES, versionStr); &#125;else&#123; success(resultDic,NO ,versionStr); &#125; &#125; failure:^(AFHTTPRequestOperation *operation, NSError *error) &#123; failure(error); &#125;];&#125; 提醒方法- (void)showUpdateView:(NSString )newVersion* 注：这个是iOS8以后的UIAlertController 1234567891011121314151617181920- (void)showUpdateView:(NSString *)newVersion&#123; NSString *alertMsg=[[@\"桂林理工大学-校园通v\" stringByAppendingString:[NSString stringWithFormat:@\"%0.1f\",[newVersion floatValue]]] stringByAppendingString:@\"，赶快体验最新版本吧！\"]; UIAlertController *alert = [UIAlertController alertControllerWithTitle:@\"发现新版本\" message:alertMsg preferredStyle:UIAlertControllerStyleAlert]; // 添加按钮 [alert addAction:[UIAlertAction actionWithTitle:@\"取消\" style:UIAlertActionStyleCancel handler:^(UIAlertAction *action) &#123; &#125;]]; [alert addAction:[UIAlertAction actionWithTitle:@\"更新\" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action) &#123; NSString *str = @\"https://itunes.apple.com/us/app/gui-lin-li-gong-da-xue-xiao/id968615456?mt=8&amp;uo=4\"; [[UIApplication sharedApplication] openURL:[NSURL URLWithString:str]]; &#125;]]; [self presentViewController:alert animated:YES completion:nil];&#125; 5、检查增强 服务器版本跟本地版本可以随意，比如服务器1.4.1 ，本地1.4，也能检查了。 123456789101112131415161718192021NSString * serverVersion =[[[resultDic objectForKey:@\"results\"] objectAtIndex:0] valueForKey:@\"version\"];NSString * localVersion = [SystemUtils getVersionSting];//以\".\"分隔数字然后分配到不同数组NSArray * serverArray = [serverVersion componentsSeparatedByString:@\".\"];NSArray * localArray = [localVersion componentsSeparatedByString:@\".\"];for (int i = 0; i &lt; serverArray.count; i++) &#123; //以服务器版本为基准，判断本地版本位数小于服务器版本时，直接返回（并且判断为新版本，比如服务器1.5.1 本地为1.5） if(i &gt; (localArray.count -1))&#123; //有新版本，提示！ break; &#125; //有新版本，服务器版本对应数字大于本地 if ( [serverArray[i] intValue] &gt; [localArray[i] intValue]) &#123; //有新版本，提示！ break; &#125;&#125; 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"更新","slug":"更新","permalink":"http://iHTCboy.com/tags/更新/"},{"name":"版本","slug":"版本","permalink":"http://iHTCboy.com/tags/版本/"}]},{"title":"推荐GitHub很火的两个视图转换","date":"2015-04-26T04:37:26.000Z","path":"2015/04/26/2015_推荐GitHub很火的两个视图转换/","text":"KNSemiModalViewController 淘宝加入购物车的动画视图就是用这个吧，帅到没朋友～ ZFDragableModalTransition 看动画，效果流得一逼～ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"GitHub","slug":"GitHub","permalink":"http://iHTCboy.com/tags/GitHub/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"视图转换","slug":"视图转换","permalink":"http://iHTCboy.com/tags/视图转换/"}]},{"title":"iOS版本更新判断","date":"2015-04-23T12:03:26.000Z","path":"2015/04/23/2015_iOS版本更新判断/","text":"应用每开发一个新版本时，都可能会有新特性介绍页面。所以在应用里就要判断是不是新版本，并且能判断只有第一次进入应用时，才是新版本。 12345678910111213141516171819//* 在delegate里判断*/ //1、 取出沙盒中存储的上次使用软件的版本号 NSString *key = @\"CFBundleShortVersionString\"; NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults]; NSString *lastVersion = [defaults stringForKey:key]; // 2、获得当前软件的版本号 NSString *currentVersion = [NSBundle mainBundle].infoDictionary[key]; // 3、判断版本号 if ([currentVersion isEqualToString:lastVersion]) &#123;// 旧版本 &#125;else&#123; // 新版本 // 存储新版本 [defaults setObject:currentVersion forKey:key]; &#125; ##解释 1、CFBundleShortVersionString 标识应用程序的发布版本号 该标志表示就是应用的版本号，一般是由三个整数分隔组成的字符串。第一个整数代表重大修改的版本，如实现新的功能或重大变化的修订。第二个整数表示的修订，实现较突出的特点。第三个整数代表维护版本。 该键的值不同于“CFBundleVersion”标识 2、CFBundleVersion 标识应用的内部版本号 这个版本是内部自己团队使用的一个版本号，一般不对外公开。 3、区别 CFBundleShortVersionString对应Xcode里项目的Version CFBundleVersion 对应Xcode里项目的Build 4、AppStore 发布每发布一个新应用或新版本，苹果都要求你输入一个版本号，这个版本号对应的是 CFBundleShortVersionString ，不要写错哦。并且，如果你上传成功后（未审核，或未通过），然后又修复了bug，或改了功能，那么在打包发布时，CFBundleVersion 必须比上一版本更大。 打个比方，我第一次上传的Version:1.5.1、Build:3.4.2 ,那我这个应用被拒绝，修复好后，我又打包上传时，Version还是1.5.1，但Build必须大于3.4.2，可以是3.4.3 、3.4.5、3.8.5等。 如果Version 1.5.1通过审核后，又发新版本，那个下次上传时，Version要大于1.5.1，但Build可以从新开始，比如1.1.0 。如果Version1.5.1又有问题，我又要上传修改后的应用时，Build必须大于上一个上传成功的Build，即要大于1.1.0。 5、如果还有什么不明白，可能给我留言哦～nice 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"应用版本","slug":"应用版本","permalink":"http://iHTCboy.com/tags/应用版本/"},{"name":"版本更新","slug":"版本更新","permalink":"http://iHTCboy.com/tags/版本更新/"}]},{"title":"iOS判断汉字个数","date":"2015-04-17T16:31:22.000Z","path":"2015/04/18/2015_iOS判断汉字个数/","text":"最近在做注册登陆的认证，需求：用户名为6～12位“字符”也就是说，一个英文是一个字符，一个中文是两个字符，用正则表达式好像不容易实现吧？ 没什么好说的，直接上答案了： 判断字符数123456789101112131415161718 //判断字符串为6～12位“字符” - (BOOL)isValidateName:(NSString *)name&#123; NSUInteger character = 0; for(int i=0; i&lt; [name length];i++)&#123; int a = [name characterAtIndex:i]; if( a &gt; 0x4e00 &amp;&amp; a &lt; 0x9fff)&#123; //判断是否为中文 character +=2; &#125;else&#123; character +=1; &#125; &#125; if (character &gt;=6 &amp;&amp; character &lt;=12) &#123; return YES; &#125;else&#123; return NO; &#125; &#125; 判断邮箱号123456 //如果符合邮箱格式，返回YES -(BOOL)isValidateEmail:(NSString *)email &#123; NSString *emailRegex = @\"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]&#123;2,4&#125;\"; NSPredicate *emailTest = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", emailRegex]; return [emailTest evaluateWithObject:email];&#125; 判断密码为6～20位字符12345- (BOOL)isValidatePassword:(NSString *)password&#123; NSString *regex = @\"^[\\x21-\\x7E]&#123;6,20&#125;$\"; NSPredicate *pred = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", regex]; return [pred evaluateWithObject:password];&#125; 判断手机格式12345 + (BOOL)checkTel:(NSString *)str&#123; NSString *regex = @\"^[1][3-8]+\\\\d&#123;9&#125;\";//手机号码变化大，所以没有做更精确的判断 NSPredicate *pred = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", regex]; return [pred evaluateWithObject:str];;&#125; 判断邮编格式为6位数字12345 + (BOOL)checkPostCode:(NSString *)str&#123; NSString *regex = @\"^[0-9]&#123;6&#125;$\"; NSPredicate *pred = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", regex]; return [pred evaluateWithObject:str];&#125; 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"判断汉字","slug":"判断汉字","permalink":"http://iHTCboy.com/tags/判断汉字/"},{"name":"汉字个数","slug":"汉字个数","permalink":"http://iHTCboy.com/tags/汉字个数/"}]},{"title":"基于NSTimer的倒计时","date":"2015-04-17T07:12:26.000Z","path":"2015/04/17/2015_基于NSTimer的倒计时/","text":"今天做手机短信验证码的功能，不用GCD，简单的NSTimer就可以完成,不知道有没有bug,测试中。。。 1#pragma mark - &#20498;&#35745;&#26102;&#10;- (void)startCount&#10;&#123;&#10; /**&#10; * &#28155;&#21152;&#23450;&#26102;&#22120;&#10; */&#10; self.currentCountDown = 120;&#10; self.timer = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(countDown) userInfo:nil repeats:YES];&#10; [[NSRunLoop currentRunLoop] addTimer:self.timer forMode:NSRunLoopCommonModes];&#10; [self.timer fire];&#10;&#125;&#10;&#10;- (void)countDown&#123;&#10; &#10; if (self.currentCountDown &#62;0) &#123;&#10; //&#35774;&#32622;&#30028;&#38754;&#30340;&#25353;&#38062;&#26174;&#31034; &#26681;&#25454;&#33258;&#24049;&#38656;&#27714;&#35774;&#32622;&#10; [self.captchaBtn setTitle:[NSString stringWithFormat:@&#34;(%ld)&#37325;&#26032;&#33719;&#21462;&#34;,(long)self.currentCountDown] forState:UIControlStateNormal];&#10; //self.captchaBtn.enabled = NO;&#10; self.currentCountDown -= 1;&#10; &#125;else&#123;&#10; [self removeTimer];&#10; &#125; &#10;&#125;&#10;&#10;/**&#10;* &#31227;&#38500;&#23450;&#26102;&#22120;&#10;*/&#10;- (void)removeTimer&#10;&#123;&#10; self.currentCountDown = 0;&#10; [self setCaptchaEnable:YES];&#10; [self.timer invalidate];&#10; self.timer = nil;&#10;&#125;&#10;&#10;&#10;//&#22240;&#20026;iOS 7&#19979; &#25353;&#38062; enabled= NO, &#19981;&#33021;&#35774;&#32622;&#25991;&#23383;&#10;#pragma mark - &#35774;&#32622;&#25353;&#38062;&#29366;&#24577;&#10;- (void)setCaptchaEnable:(BOOL)enabled&#123;&#10; //&#21487;&#20197;&#25353;&#10; if (enabled) &#123;&#10; self.captchaBtn.userInteractionEnabled = YES;&#10; [self.captchaBtn setBackgroundImage:[UIImage imageNamed:@&#34;back_red&#34;] forState:UIControlStateNormal];&#10; [self.captchaBtn setTitle:@&#34;&#33719;&#21462;&#39564;&#35777;&#30721;&#34; forState:UIControlStateNormal];&#10; &#10; &#125;else&#123;&#10; self.captchaBtn.userInteractionEnabled = NO;&#10; [self.captchaBtn setBackgroundImage:[UIImage imageNamed:@&#34;back_gray&#34;] forState:UIControlStateNormal];&#10; &#125;&#10;&#125; 在项目中目前是自己写的一个集成倒计时的按钮，这个思路暂时可以行！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"NSTimer","slug":"NSTimer","permalink":"http://iHTCboy.com/tags/NSTimer/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"倒计时","slug":"倒计时","permalink":"http://iHTCboy.com/tags/倒计时/"}]},{"title":"Xcode真机运行报错：the application could not be verified","date":"2015-04-15T12:30:16.000Z","path":"2015/04/15/2015_iOS报错：linker command failed with exit code 1 (use -v to see invocation)/","text":"Xcode 提示的报错： the application could not be verified. 开发的应用一直真机安装不了，网上查看资料，都是说证书出错，最后在stackoverflow.com 找到原因： I deleted the app from the device, restarted Xcode, and the app subsequently installed on the device just fine without any error message. Not sure if deleting the app was the fix, or the problem was due to “the phase of the moon”.就是把手机上安装了的应用删除掉，在安装就行了！ 分析：我猜测是因为之前我在另一台电脑上安装了这个应用，调试证书导致的错误？还是，最近升级了OS X 10.10.3 、Xcode 6.3 导致的错误？不得而之了。总之，如果下次遇到这个问题，先删掉原来的应用，如果不行，那考虑其它原因就是证书等问题。 ～nice 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"编译报错","slug":"编译报错","permalink":"http://iHTCboy.com/tags/编译报错/"}]},{"title":"你可能永远不知道的iPhone功能！","date":"2015-04-14T14:33:26.000Z","path":"2015/04/14/2015_你可能永远不知道的iPhone功能！/","text":"1、 健康应用最新的iPhoen6、6plus集成气压计，所以可以测量海拔，也就可以测量【已爬楼层】，没错，我正在5楼！ 2、苹果地图这是我有一次坐汽车时，在下拉栏看到的，瞬间心动，请看下图啦。ps:我猜测iPhone平时就会记录你的位置，比较上班和家里的位置，因为这些位置相对固定不变，所以当位置变化很大时，苹果就会～～好吓人～ 3、计算器横竖屏时不同计算器外，左右滑动上输入的数字时，还能删除 4、反转颜色（设置–通用–辅助功能–反转颜色） 这个反转颜色黑底白字，White on Black，说是颜色反转，其实更是高对比度。很 多眼障人群（譬如说高龄老人）对低对比度内容（譬如说白色背景浅色文字）辨识无力。—来自百度 ps: 好像AssistiveTouch这个功能，也是为老人设计吧，但很多人用它，把它当成防止Home按钮损坏的一种办法。别外，开启反转颜色后，截图也会彩色的，不知道苹果底层是不是没有真正的变色？ 5、灰度 （设置–通用–辅助功能–灰度）这个也是针对老人的吗? 我想有至少三个功能： 老人、色弱、色盲 保护眼睛 节能（应该能减少耗电吧？） 6、语言（设置–通用–辅助功能–语言）这个功能屌了！是苹果给不方便看手机的用户提供的！可以读取屏幕上的文字，屌丝功能：在挤公交或地铁时听新闻、小说、只要是文字的都可以，在嗓音里，可以下载高音质的语音。1.使用方法： 两根手指从屏幕顶部向下轻扫 2.提供的功能： 多个低高语速 暂时、继续、下一个 正在读的文字有阴影跟随 3.不足的是： 英文和中文阅读会间隔大 只能从屏幕文字开头读起 ps:设置–通用–辅助功能，还有很多好功能，大家可以自己看看哦 7、访问限制【隐藏应用的好方法】（设置–通用–访问限制）启动访问限制时，需有设置一个独立的密码，然后选择限制的应用，那么在桌面上应用的图标就不见了！起到了隐藏功能 ，里面还有很多功能，大家有需要的可以看看啊 8、键盘（设置–通用–键盘）虽然iOS8后，苹果开放了第三方的键盘输入，但是目前第一次显示第三方键盘的时候会有点卡，强迫证的人可能受不了，我是用笔画和五笔的，对第三方键盘不感冒，其它系统键盘也很好用，笔画啊！第三方键盘存在问题 刚切换出第三方键盘时，会卡一下，或者动画不流畅。这个因为系统级原因，可能永远无法解决？ 联想功能，当输入一个词后，如果删除后，就没有联想了。这个也是系统原因，也可能无法解决。 可能永远无法语音输入。因为解析语音要联网，键盘输入的信息苹果以后应该不开放联网吧？ 系统键盘技巧 用户词典，比如我的gmail邮箱，短语：ihetiancong@gmail.com ，设置输入码：igma，那么当我要输入我的邮箱时，我只要输入igma，就会显示我的完整邮箱，还能iCloud 自动同步。 启用听写，就可以不用打字了，但目前好像只能听英文，中文识别不了。 9、Safari用Safari上www.baidu.com百度时，百度会自动跳转到手机web版,有时候就是想要上电脑版呢，苹果在iOS8中,增加了请求桌面站点功能。 10、查找 iPhone这个应用是苹果开发的，默认出厂好像是没有安装的？不太记得了，这个功能太屌了！ 11、相机相机这个应用非常强大，非常简洁，也非常高效！ 左右滑动切换拍摄模式 单击取景窗口可以对焦，然后上下滑动可以调节爆光 如果长压取景窗口，可以锁定曝光和对焦，作用：用于拍摄近景非常棒，如花朵 如果长按拍摄键，照片模式下是连拍 两指捏合，可以调节变焦倍数 网格,比如3分之1取景等可能用到。（设置–照片与相机–网格） 12、开发者这个就是给苹果开发者使用的，对开发者来说，又是一个利器，降低了开发测试的成本。ps：对于一般用户，也可能会用到哦！下文会说： ##ps：当你不想借手机给别人用时，你就设置Enable 、100% Loss ，那么手机就上不了网了！！懂了吧！！点赞吧！！ ##总结在接触了苹果一年里，发现真的离不开苹果了，我不会说安卓怎样，我只会说，苹果满足了我全部的需求，也超出我的奢求！ 1.苹果这些无微不至的功能，虽然只是为了满足小数用户，但是它做了，并做的很美！2、苹果每个应用都做得尽可能简单、简洁。诚然，很多复杂的功能一般很少用。3.如果你喜欢这篇文章，点赞一个呢！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore","slug":"AppStore","permalink":"http://iHTCboy.com/tags/AppStore/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"iTunes","slug":"iTunes","permalink":"http://iHTCboy.com/tags/iTunes/"}]},{"title":"AppStore付费应用退款流程（2015超级详细版）","date":"2015-04-11T10:38:26.000Z","path":"2015/04/11/2015_App-Store付费应用退款流程（2015超级详细版）/","text":"一、关于退款说明首先说明，苹果允许用户用一切理由来退款，并且是可以退款成功的. 首先登陆苹果“问题报告”网站 https://reportaproblem.apple.com 网站是报告最近 90 天购买的 iTunes Store、App Store、iBooks Store 或 Mac App Store 项目相关问题。 然后找到你想申请退款的应用： 注：这个应用是一个睡眠监听的应用，原理应该是通过录音，夜里发现你是不是有动静，来监测你的睡眠状况。这个应用，最大的问题就在这里，因为要录音，所以它要求夜里手机必须在充电状态，否则不会工作。这个应用是中国1元区刚开始时就下载了，但后来一直没有用，也不会在用，夜里充着电，根本不方便，所以就对不起作者（Northcube AB）了，我要做坏事了，sorry~ 二、退款流程1.点击报告问题 2.选择一个你要退款的理由 3.选择请求退款的选项 4.完成退款 5.最后该应用右边显示已退款 6.退款成功后，苹果还会发邮件告诉你（苹果真的是全心为用户！赞一个！） 三、最后声名我不是鼓励大家有理由没理由的申请退款，或者用这种方式来获得“免费”应用，这种方式，如果退款成功，苹果是不会删除你已经下载了的付费应用，你可以继续使用，但是你删除后，再下载时需要重新付费。 最后给大家看看，我买过的几个应用，我都没有退款，因为它们真的很好用！只是现在有了1元区后，很多应用根本就没有做好功能，就来收费了，这是作为开发者和用户都不应该屈服的。说明：我认为一个应用如果目标定在1元，就有借口说因为收益低，所以做不好，那么我觉得这是在“骗钱”吗！ 1、Runtastic Six Pack六块腹肌软件这个应用真心好，相对于目前那些6元的7分钟系列，这个应用只要30元，提供的版本是iPhone,iPad都可以下载的，提供高清晰的视频跟练，六块腹肌马上出来！效果明显！ 2、The Great Photo App这个应用是一个单反和拍摄介绍的软件，这个软件最大特色就是以全新的方式展示！另外里面部分内容会有内购，但都是良心价。 3、Dash API Docs这个应用不用介绍了，开发者必备，68元是我考虑了一个星期才决定买的，现在来看，是非常值得！ 4、Due ～ 快速提醒＋定时器这个应用提供的是定时提醒功能，设置的每一个提醒事件，提供丰富的功能选项（小睡、重复、多种提示音、同步功能、时间选择也很快捷。）另一功能，就是定时器，可以设置多个定时器。 5、Calendars 5 - 与 Google 日历同步的智能日历及任务这个应用是一个可与系统(iOS/Mac OS X)日历、提醒事项同步的日历和任务APP, 如果不想与系统同步，也可以与Google同步。应用界面非常的高效和条理清晰。是一个非常好的日程安排和提醒任务等功能的好用的应用！ 四、最后呼吁大家：1. 对好的应用一定要收费支持！2. 对于“骗钱”的应用要知道自己是拥有权力的！3. 感谢苹果为我们提供退款的权力！赞一个！4. 如果本文对你有帮助，来赞一个吧！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"AppStore","slug":"AppStore","permalink":"http://iHTCboy.com/tags/AppStore/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"iTunes","slug":"iTunes","permalink":"http://iHTCboy.com/tags/iTunes/"}]},{"title":"iOS错误---“A valid provisioning profile for this executable was not found”","date":"2015-03-23T02:34:16.000Z","path":"2015/03/23/2015_Xcode 真机运行报错：the application could not be verified/","text":"linker command failed with exit code 1 (use -v to see invocation) 网上答案： 1、我以前添加开源的.a文件时也遇到过类似的情况，问题大多主要是出现在Ohter Linker Flags 这个属性，找到Build settings-&gt;Linking-&gt;Other Linker Flags，将此属性修改成-all_load 2、把Other Linker Flags下的属性全删除了。 3、错误信息中出现了某个类的名字，去原文件中看看#import了哪些第三方库，把这些库挨个注释排除，找到出错的那个库，然后按照官方提供的步骤重新添加一遍。 4、看看是不是有新添加的文件跟之前文件同名 经过多次排查，最后答案是： 出现这种情况很可能是，项目中引入了多个相同的文件。 删除一个就ok！ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"编译报错","slug":"编译报错","permalink":"http://iHTCboy.com/tags/编译报错/"}]},{"title":"iOS错误---“A valid provisioning profile for this executable was not found”","date":"2015-03-11T16:56:16.000Z","path":"2015/03/12/2015_iOS错误---“A-valid-provisioning-profile-for-this-executable-was-not-foun/","text":"昨天苹果更新Xcode 6.2 ,升级后项目编译后报错，网上的搜索到的方法试了，结果都不成功，最后在Xcode 设置里重新设置帐号就可以了。1、用“—”删除你的帐号 2、然后重新添加帐号，并刷新帐号，所以按提示就可以编译通过。（ps：1.电脑要有真机调试证书，2.手机已经加入调试设备） 由于急解决，所以过程忘记截图了，也无法在重现了。。。 nice～ 如果有什么疑问，可以在评论区一起讨论； 如果有什么不正确的地方，欢迎指导！ 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"},{"name":"编译报错","slug":"编译报错","permalink":"http://iHTCboy.com/tags/编译报错/"}]},{"title":"iOS单独集成QQ分享功能的苦逼经验","date":"2015-02-27T15:17:26.000Z","path":"2015/02/27/2015_iOS单独集成QQ分享功能的苦逼经验/","text":"这个过程其实很简单，就是腾讯的文档真的不敢恭维！ 如果只是想把一段文字，或一张图片分享到QQ（包括好友、群、讨论组、空间），那么你看文档会感觉到很无助，不知道从那里开始，并且地魔（demo）跑不起来！（ps，腾讯的员工是不是经常跳槽到微信？） （1）首先，把TencentOpenAPI.framework、TencentOpenApi_IOS_Bundle.bundle导入工程中。ps: 我在搜索资料时，看到有人说TencentOpenAPI.framework要放在工程根目录，我在Xcode6下试了一下，结果是不放根目录也行，同时Xcode6下，导入framework就好，其它操作都自动了，官方sdk文档好像好久没更新了，我又想吐槽？不要阻止我！what’s up？ （2）添加SDK依赖的系统库文件。 Security.framework libiconv.dylib SystemConfiguration.framework CoreGraphics.Framework libsqlite3.dylib CoreTelephony.framework libstdc++.dylib libz.dylib （3）在AppDelegate.h中 导入 头文件1#import &lt;TencentOpenAPI/TencentOAuth.h&gt; （4）在AppDelegate.m中向腾讯注册。（ps：只是集成分享功能，所以不用授权）12345 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123; [[TencentOAuth alloc] initWithAppId:QQKey andDelegate:nil]; //注册｝ 要特别注意以下3点：1、上面代码中QQkey为APP ID，而不是APP KEY，并且与URL schemes不相同。 2、URL type 里的 URL schemes = tencent + appid。（因为微信、微博的两个值是相同的，所以要注意一下。） 3、这里delegate为空，因为没有授权，所以不用代理。 （5）重写AppDelegate 的handleOpenURL和openURL方法1234567891011- (BOOL)application:(UIApplication*)application openURL:(NSURL *)url sourceApplication:(NSString*)sourceApplication annotation:(id)annotation&#123;return[TencentOAuth HandleOpenURL:url];｝-(BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url&#123;return[TencentOAuth HandleOpenURL:url];&#125; （ps：不用实现TencentSessionDelegate代理方法，手机QQ里分享时，会等到分享成功后，才会跳回原应用，所以不用监听发送情况） （6）设置Bundle display name属性值。如果是Xcode 6.0创建工程时，默认可能没有单独设置Bundle display name属性值。但是因为SDK需要用到Bundle display name的值，所以务必请检查确保这个属性存在，如果没有请添加上。如下图所示： （ps：注意的是，这个名字会用在2个地方：1、应用显示的名字，2、分享到QQ界面时显示的“来自”小尾巴（到空间时，小尾巴是你注册腾讯appid时写的应用名字） （7）在实现分享的ViewCotroller里加入头文件123#import &lt;TencentOpenAPI/QQApi.h&gt;#import &lt;TencentOpenAPI/QQApiInterface.h&gt; （8）实现分享内容的代码（以分享图片为例）12345678910111213141516//用于分享图片内容的对象QQApiImageObject *imgObj = [QQApiImageObject objectWithData:imgDatapreviewImageData:previewImagetitle:self.newsModel.titledescription:@\"由 桂林理工大学-校园通 转码\"];SendMessageToQQReq *req = [SendMessageToQQReq reqWithContent:imgObj];//将内容分享到qqQQApiSendResultCode sent = [QQApiInterface sendReq:req];其它内容，大家还是磨磨官方文档，或者用集成化的sdk吧，同时希望腾讯的iOS开发者不要在打酱油了~.~ 相关连接：QQ SDK 介绍页 QQ SDK IOS_API调用说明 《QQ SDK iOS SDK环境搭建》.doc 下载 《QQ SDK iOS SDK API使用说明.doc》下载 注：本文首发于 iHTCboy’s blog，如若转载，请注来源","tags":[{"name":"QQsdk","slug":"QQsdk","permalink":"http://iHTCboy.com/tags/QQsdk/"},{"name":"QQ分享","slug":"QQ分享","permalink":"http://iHTCboy.com/tags/QQ分享/"},{"name":"iOS","slug":"iOS","permalink":"http://iHTCboy.com/tags/iOS/"}]}]