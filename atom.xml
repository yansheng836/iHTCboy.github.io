<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iHTCboy's blog]]></title>
  <subtitle><![CDATA[Learn something of everything, Learn everything of something.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://iHTCboy.com/"/>
  <updated>2018-08-04T15:40:19.949Z</updated>
  <id>https://iHTCboy.com/</id>
  
  <author>
    <name><![CDATA[iHTCboy]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[PyCharm for Mac快捷键小记]]></title>
    <link href="https://iHTCboy.com/2018/08/04/2018-08-04_PyCharm_for_Mac%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%B0%8F%E8%AE%B0/"/>
    <id>https://iHTCboy.com/2018/08/04/2018-08-04_PyCharm_for_Mac快捷键小记/</id>
    <published>2018-08-04T15:09:16.000Z</published>
    <updated>2018-08-04T15:40:19.949Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的PyCharm for Mac快捷键，因为网上经常找到的都是Windows版本，所以当是备忘也好，后续会不定期更新。</p>
<a id="more"></a>
<h3 id="2、PyCharm_for_Mac_快捷键">2、PyCharm for Mac 快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>cmd + b</td>
<td>跳转到声明处（cmd加鼠标）</td>
</tr>
<tr>
<td>cmd + d</td>
<td>在下一行复制本行的内容</td>
</tr>
<tr>
<td>cmd []</td>
<td>光标之前/后的位置</td>
</tr>
<tr>
<td>cmd + opt + []</td>
<td>函数和方法前后的位置</td>
</tr>
<tr>
<td>cmd + backspace</td>
<td>删除当前行</td>
</tr>
<tr>
<td>cmd + c</td>
<td>复制光标当前行,剪切同理</td>
</tr>
<tr>
<td>cmd + f</td>
<td>当前文件搜索（回车下一个 shift回车上一个）</td>
</tr>
<tr>
<td>cmd + r</td>
<td>当前文件替换</td>
</tr>
<tr>
<td>cmd + shift + f</td>
<td>全局搜索</td>
</tr>
<tr>
<td>cmd + shift + r</td>
<td>全局替换</td>
</tr>
<tr>
<td>cmd + shift + a</td>
<td>搜索动作</td>
</tr>
<tr>
<td>cmd + o</td>
<td>搜索class</td>
</tr>
<tr>
<td>cmd + opt + o</td>
<td>搜索符号（函数等)</td>
</tr>
<tr>
<td>cmd + shift + o</td>
<td>搜索文件</td>
</tr>
<tr>
<td>shift + shift</td>
<td>任意搜索功能</td>
</tr>
<tr>
<td>cmd + l</td>
<td>指定行数跳转</td>
</tr>
<tr>
<td>shift + enter</td>
<td>在行中的时候直接到下一行(新建)</td>
</tr>
<tr>
<td>cmd +</td>
<td>展开当前</td>
</tr>
<tr>
<td>cmd -</td>
<td>折叠当前</td>
</tr>
<tr>
<td>cmd shift +</td>
<td>展开所有</td>
</tr>
<tr>
<td>cmd shift -</td>
<td>折叠所有</td>
</tr>
<tr>
<td>cmd /</td>
<td>注释/取消注释一行</td>
</tr>
<tr>
<td>cmd + opt + /</td>
<td>批量注释(pycharm不生效)</td>
</tr>
<tr>
<td>ctr + tab</td>
<td>史上最NB的导航窗口（工程文件列表、文件结构列表、命令行模式、代码检查、VCS等，下面两个是可以被替换的）</td>
</tr>
<tr>
<td>alt + F12</td>
<td>打开命令行栏</td>
</tr>
<tr>
<td>cmd + F12</td>
<td>显示文件结构</td>
</tr>
<tr>
<td>cmd + j</td>
<td>代码智能补全</td>
</tr>
<tr>
<td>alt + F1</td>
<td>定位编辑文件所在位置:</td>
</tr>
<tr>
<td>cmd + F6</td>
<td>更改变量</td>
</tr>
<tr>
<td>cmd + opt + t</td>
<td>指定代码被注释语句或者逻辑结构、函数包围</td>
</tr>
<tr>
<td>Tab / Shift + Tab</td>
<td>缩进、不缩进当前行</td>
</tr>
<tr>
<td>cmd + opt + l</td>
<td>代码块对齐</td>
</tr>
<tr>
<td>opt + F7</td>
<td>find usage</td>
</tr>
</tbody>
</table>
<h3 id="参考">参考</h3><p>下面是PyCharm教程、Flask、Django框架学习的一些链接！大家有空可以看看~</p>
<ul>
<li>PyCharm</li>
</ul>
<p>PyCharm 收藏多年快捷键分享~ - Henry Z’s blog~ <a href="https://changchen.me/blog/20170607/pycharm-shortcut/" target="_blank" rel="external">https://changchen.me/blog/20170607/pycharm-shortcut/</a><br>pycharm 使用教程 <a href="https://www.jianshu.com/p/2bfc19e1381c" target="_blank" rel="external">https://www.jianshu.com/p/2bfc19e1381c</a><br>PyCharm IDE 链接sqlite、建表、添加、查询数据 - CSDN博客 <a href="https://blog.csdn.net/qq_36482772/article/details/53458400" target="_blank" rel="external">https://blog.csdn.net/qq_36482772/article/details/53458400</a><br>Pycharm快捷键整理（Mac） - 简书 <a href="https://www.jianshu.com/p/be0bdc02f7da" target="_blank" rel="external">https://www.jianshu.com/p/be0bdc02f7da</a><br>你有哪些想要分享的 PyCharm 使用技巧？ - 知乎<a href="https://www.zhihu.com/question/37787004/answer/186042335" target="_blank" rel="external">https://www.zhihu.com/question/37787004/answer/186042335</a><br>PyCharm速览 <a href="http://www.liujiangblog.com/blog/28/" target="_blank" rel="external">http://www.liujiangblog.com/blog/28/</a><br>迈出Pycharm第一步-刘江的博客 <a href="http://www.liujiangblog.com/blog/29/" target="_blank" rel="external">http://www.liujiangblog.com/blog/29/</a></p>
<ul>
<li>Flask框架</li>
</ul>
<p>快速入门 — Flask 0.10.1 文档 <a href="http://docs.jinkan.org/docs/flask/quickstart.html#quickstart" target="_blank" rel="external">http://docs.jinkan.org/docs/flask/quickstart.html#quickstart</a><br>    Flask 入门指南 <a href="https://blog.igevin.info/posts/flask-startup-guideline/" target="_blank" rel="external">https://blog.igevin.info/posts/flask-startup-guideline/</a><br>    利用pycharm学习flask教程 <a href="https://www.jianshu.com/p/a7d988fb807f" target="_blank" rel="external">https://www.jianshu.com/p/a7d988fb807f</a><br>    python flask搭建web应用 - CSDN博客  <a href="https://blog.csdn.net/u012734441/article/details/62036503" target="_blank" rel="external">https://blog.csdn.net/u012734441/article/details/62036503</a><br>《Flask Web开发——基于Python的Web应用开发实践》一字一句上机实践（上） - 舞动的心 - 博客园  <a href="http://www.cnblogs.com/liuzhen1995/p/8001040.html" target="_blank" rel="external">http://www.cnblogs.com/liuzhen1995/p/8001040.html</a><br>Flask Web开发学习笔记（一）~（6） <a href="https://www.jianshu.com/p/303057e51417" target="_blank" rel="external">https://www.jianshu.com/p/303057e51417</a><br>Flask 的部署 <a href="https://windard.com/project/2016/12/01/Deploy-Flask-APP" target="_blank" rel="external">https://windard.com/project/2016/12/01/Deploy-Flask-APP</a><br>如果你也想写Flask| 编程派 | Coding Python <a href="http://codingpy.com/article/if-you-also-want-to-write-flask/" target="_blank" rel="external">http://codingpy.com/article/if-you-also-want-to-write-flask/</a><br>Introduction | Flask之旅 <a href="https://spacewander.github.io/explore-flask-zh/index.html" target="_blank" rel="external">https://spacewander.github.io/explore-flask-zh/index.html</a></p>
<ul>
<li>Django框架</li>
</ul>
<p>介紹 | Django Book 2.0 中文版 <a href="https://wizardforcel.gitbooks.io/django-book-20-zh-cn/content/index.html" target="_blank" rel="external">https://wizardforcel.gitbooks.io/django-book-20-zh-cn/content/index.html</a><br>从Python到Django入门教程 <a href="https://borisliu.gitbooks.io/from-python-to-django/content/introduction/preface.html" target="_blank" rel="external">https://borisliu.gitbooks.io/from-python-to-django/content/introduction/preface.html</a><br>Django新手图文入门教程 <a href="http://www.liujiangblog.com/blog/3/" target="_blank" rel="external">http://www.liujiangblog.com/blog/3/</a></p>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的PyCharm for Mac快捷键，因为网上经常找到的都是Windows版本，所以当是备忘也好，后续会不定期更新。</p>]]>
    
    </summary>
    
      <category term="PyCharm" scheme="https://iHTCboy.com/tags/PyCharm/"/>
    
      <category term="shortcut" scheme="https://iHTCboy.com/tags/shortcut/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iTerm2快捷键小记]]></title>
    <link href="https://iHTCboy.com/2018/08/03/2018-08-03_iTerm%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%B0%8F%E8%AE%B0/"/>
    <id>https://iHTCboy.com/2018/08/03/2018-08-03_iTerm快捷键小记/</id>
    <published>2018-08-03T13:19:16.000Z</published>
    <updated>2018-08-04T15:26:16.882Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的iTerm快捷键，当是备忘也好，后续会不定期更新。</p>
<a id="more"></a>
<h3 id="2、iTerm2_快捷键">2、iTerm2 快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>作用说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>command + f</td>
<td><strong>搜索&amp;查找</strong>，如果输入搜索内容后，按下 tab 键，就会 iTerm 自动帮选中搜索关键词，并且自动的帮我们复制到了剪贴板中。如果输入的是 shift+tab，则自动将查找内容的左边选中并复制。按 esc 退出搜索。</td>
</tr>
<tr>
<td>command + r <br>或 ctrl + l</td>
<td>清空屏幕，而且只是换到新一屏，不会像 clear 一样创建一个空屏</td>
</tr>
<tr>
<td>command + k</td>
<td>clear，清空屏幕</td>
</tr>
<tr>
<td>command + d</td>
<td>垂直分屏</td>
</tr>
<tr>
<td>command + shift + d</td>
<td>水平分屏</td>
</tr>
<tr>
<td>command + ;</td>
<td>查看历史命令</td>
</tr>
<tr>
<td>command + shift + h</td>
<td>查看剪贴板历史，会自动列出输入过的命令</td>
</tr>
<tr>
<td>command + number</td>
<td>tab 标签窗口来回切换</td>
</tr>
<tr>
<td>command + option + ←/→ <br>或 command + [ / ]</td>
<td>切换屏幕</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>ctrl +  x</td>
<td>第一次按时，移动光标至行首；再次按时，回到原有位置</td>
</tr>
<tr>
<td>ctrl + a</td>
<td>到行首（Ahead of line）</td>
</tr>
<tr>
<td>ctrl + e</td>
<td>到行尾（End of line）</td>
</tr>
<tr>
<td>ctrl + f/b</td>
<td>前进后退(相当于左右方向键)</td>
</tr>
<tr>
<td>ctrl + u</td>
<td>清除当前行（无论光标在什么位置）</td>
</tr>
<tr>
<td>ctrl + d</td>
<td>删除光标当前位置的<strong>字符</strong></td>
</tr>
<tr>
<td>ctrl + h</td>
<td>删除光标之前的<strong>字符</strong></td>
</tr>
<tr>
<td>ctrl + w</td>
<td>删除光标之前的<strong>单词</strong></td>
</tr>
<tr>
<td>ctrl + k</td>
<td>删除光标当前位置到文本末尾的<strong>所有字符</strong></td>
</tr>
<tr>
<td>ctrl + t</td>
<td>交换光标当前位置的字符与前一个字符的位置</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>ctrl + c <br>或 ctrl + j <br>或 ctrl + o</td>
<td>取消当前行输入的命令（中断操作）。重新起一行。</td>
</tr>
<tr>
<td>ctrl + y</td>
<td>粘贴之前（ctrl +u/k/w）删除的内容</td>
</tr>
<tr>
<td>ctrl + p <br>或 !!</td>
<td>上一条命令。调出命令历史中的前一条（Previous）命令，相当于通常的上箭头</td>
</tr>
<tr>
<td>ctrl + n</td>
<td>下一条命令。调出命令历史中的下一条（Next）命令，相当于通常的上箭头</td>
</tr>
<tr>
<td>ctrl + s</td>
<td>冻结终端操作（暂停脚本）</td>
</tr>
<tr>
<td>ctrl  + q</td>
<td>恢复冻结（继续执行脚本）</td>
</tr>
<tr>
<td>ctrl + r</td>
<td>搜索命令历史。根据用户输入查找相关历史命令（reverse-i-search）</td>
</tr>
<tr>
<td>ctrl + l  <br>或 command + r</td>
<td>换到新一屏，创建一个空屏</td>
</tr>
<tr>
<td>ctrl + i <br>或 tab</td>
<td>横行制表符，在命令行中补齐指令</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>!word</td>
<td>重复运行最近一条以“word”开头的指令，如!ls 或 !l</td>
</tr>
<tr>
<td>!$</td>
<td>调用上一条指令的最后一个参数作为当前指令对象,如，假设上一条指令为： ls abc.txt bbc.txt 那么， vi !$ 相当于： vi bbc.txt</td>
</tr>
<tr>
<td>!number</td>
<td>调用执行指定编号的历史记录指令,如!2, !11</td>
</tr>
</tbody>
</table>
<h3 id="参考">参考</h3><ul>
<li><a href="https://cnbin.github.io/blog/2015/06/20/iterm2-kuai-jie-jian-da-quan/" target="_blank" rel="external">iTerm2 快捷键大全 - 陈斌彬的技术博客</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的iTerm快捷键，当是备忘也好，后续会不定期更新。</p>]]>
    
    </summary>
    
      <category term="iTerm" scheme="https://iHTCboy.com/tags/iTerm/"/>
    
      <category term="shortcut" scheme="https://iHTCboy.com/tags/shortcut/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim快捷键小记]]></title>
    <link href="https://iHTCboy.com/2018/07/28/2018-07-28_Vim%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%B0%8F%E8%AE%B0/"/>
    <id>https://iHTCboy.com/2018/07/28/2018-07-28_Vim快捷键小记/</id>
    <published>2018-07-28T07:49:16.000Z</published>
    <updated>2018-08-04T15:40:22.839Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的vim快捷键，当是忘记也好，后续会不定期更新。</p>
<a id="more"></a>
<h3 id="2、vim_快捷键">2、vim 快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>默认模式</td>
<td></td>
</tr>
<tr>
<td>h,j,k,l</td>
<td>左，下，上，右</td>
</tr>
<tr>
<td>w</td>
<td>下一个词的词首</td>
</tr>
<tr>
<td>e</td>
<td>下一个词的词尾</td>
</tr>
<tr>
<td>b</td>
<td>上一个词的词首</td>
</tr>
<tr>
<td>:w</td>
<td>保存正在编辑的文件</td>
</tr>
<tr>
<td>:q</td>
<td>退出不保存</td>
</tr>
<tr>
<td>:wq</td>
<td>保存后退出正在编辑的文件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>插入模式</td>
</tr>
</tbody>
</table>
<h3 id="参考">参考</h3><ul>
<li><a href="https://www.cnblogs.com/jikey/archive/2011/12/28/2304341.html" target="_blank" rel="external">Vim快捷键分类 - 豪情 - 博客园</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>总结一下自己平时常用的vim快捷键，当是忘记也好，后续会不定期更新。</p>]]>
    
    </summary>
    
      <category term="Vim" scheme="https://iHTCboy.com/tags/Vim/"/>
    
      <category term="shortcut" scheme="https://iHTCboy.com/tags/shortcut/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django 2.0 model on_delete错误小记]]></title>
    <link href="https://iHTCboy.com/2018/07/22/2018-07-22_Django%E9%94%99%E8%AF%AF%E5%B0%8F%E8%AE%B0/"/>
    <id>https://iHTCboy.com/2018/07/22/2018-07-22_Django错误小记/</id>
    <published>2018-07-22T08:49:16.000Z</published>
    <updated>2018-08-04T15:37:15.173Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>今天用 Django 2.0 时模型的外键报了一个错误：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: __init__() missing <span class="number">1</span> required positional argument: <span class="string">'on_delete'</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2、原因">2、原因</h3><p>经过筛查，在创建多对一的关系的，需要在<code>Foreign</code>的第二参数中加入 <code>on_delete=models.CASCADE</code>  主外关系键中，级联删除，也就是当删除主表的数据时候从表中的数据也随着一起删除。</p>
<p>on_delete参数的各个值（可选的值都内置在django.db.models中）的含义:</p>
<ul>
<li>CASCADE：级联删除，模拟SQL语言中的ON DELETE CASCADE约束，将定义有外键的模型对象同时删除！</li>
<li>PROTECT: 保护模式，阻止上面的删除操作，但是弹出ProtectedError异常</li>
<li>SET_NULL：置空模式，将外键字段设为null，只有当字段设置了null=True时，方可使用该值。</li>
<li>SET_DEFAULT: 置默认值，将外键字段设为默认值。只有当字段设置了default参数时，方可使用。</li>
<li>DO_NOTHING：什么也不做。</li>
<li>SET()：设置为一个传递给SET()的值或者一个回调函数的返回值，注意大小写。自定义一个值，该值当然只能是对应的实体。</li>
</ul>
<p>示例：</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">author = models.ForeignKey(AuthModel, <span class="literal">null</span>=<span class="literal">True</span>, blank=<span class="literal">True</span>, on_delete=models.SET_NULL)</span><br></pre></td></tr></table></figure>
<p>关于SET()的使用：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**&#23448;&#26041;&#26696;&#20363;**&#10;def get_sentinel_user():&#10;    return get_user_model().objects.get_or_create(username=&#39;deleted&#39;)[0]&#10;&#10;class MyModel(models.Model):&#10;    user = models.ForeignKey(&#10;        settings.AUTH_USER_MODEL,&#10;        on_delete=models.SET(get_sentinel_user),&#10;    )</span><br></pre></td></tr></table></figure>
<h3 id="参考">参考</h3><ul>
<li><a href="https://blog.csdn.net/hpu_yly_bj/article/details/78927121" target="_blank" rel="external">on_delete=models.CASCADE级联删除 - CSDN博客</a></li>
<li><a href="https://blog.csdn.net/kuangshp128/article/details/78946316" target="_blank" rel="external">django数据模型中关于on_delete的使用 - CSDN博客</a></li>
<li><a href="https://blog.csdn.net/buxianghejiu/article/details/79086011" target="_blank" rel="external">django2.0 关联表的必填on_delete参数的含义 - CSDN博客</a></li>
<li><a href="http://www.liujiangblog.com/course/django/96" target="_blank" rel="external">django 关系类型字段 - 刘江的django教程</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>今天用 Django 2.0 时模型的外键报了一个错误：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: __init__() missing <span class="number">1</span> required positional argument: <span class="string">'on_delete'</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Django" scheme="https://iHTCboy.com/tags/Django/"/>
    
      <category term="on_delete" scheme="https://iHTCboy.com/tags/on-delete/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员的macOS系列：精选Mac App]]></title>
    <link href="https://iHTCboy.com/2018/07/15/2018-07-15_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E7%B2%BE%E9%80%89MacApp/"/>
    <id>https://iHTCboy.com/2018/07/15/2018-07-15_程序员的macOS系列：精选MacApp/</id>
    <published>2018-07-15T14:29:16.000Z</published>
    <updated>2018-08-05T03:24:12.591Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最近打算写《程序员的macOS系列》文章，总结一下自己程序员几年的macOS系统使用，本文是《程序员的macOS系列》的第一篇精选Mac App，介绍一下程序员macOS的应用，所以这系列文章是指向于程序员，可能会偏向iOS开发，尽量写大全吧。也有很多在总结了相关的文档，这里是一个程序员系列的，注意定位就好。</p>
<ul>
<li><a href="https://ihtcboy.com/2018/07/15/2018-07-15_程序员的macOS系列：精选MacApp/">程序员的macOS系列：精选Mac App</a></li>
<li>程序员的macOS系列：Mac开发环境配置</li>
<li>程序员的macOS系列：高效Alfred进阶</li>
</ul>
<p>目前计划写《程序员的macOS系列》这三篇，后续有想法在增加吧~</p>
<a id="more"></a>
<h3 id="2、精选Mac_App">2、精选Mac App</h3><p>Mac电脑上有很多应用，这里不提供任何安装包，默认是链接到对应的App官网，另外，如果App有上架到AppStore，建议在AppStore购买下载，说不定下次换电脑时会非常方便！</p>
<h4 id="IDE">IDE</h4><p>集成开发环境，程序员利器！</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Xcode.png" width="200" height:auto="" alt="20180715-macOS-Xcode.png"></td>
<td>Xcode</td>
<td>Xcode是 Mac, iPhone, iPad, Apple TV, and Apple Watch 等应用的开发集成工具。</td>
<td>免费</td>
<td><a href="https://developer.apple.com/xcode/" target="_blank" rel="external">Xcode - Apple Developer</a></td>
<td><a href="https://itunes.apple.com/us/app/xcode/id497799835?mt=12" target="_blank" rel="external">‎Xcode on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-AndroidStudio.png" width="200" height:auto="" alt="20180715-macOS-AndroidStudio.png"></td>
<td>Android Studio</td>
<td>Android Studio是一个为Android平台开发程序的集成开发环境。</td>
<td>免费</td>
<td><a href="https://developer.android.com/studio/intro/" target="_blank" rel="external">Android Studio -  Android Developers</a></td>
<td><a href="https://developer.android.com/studio/" target="_blank" rel="external">‎Download Android Studio and SDK tools - Android Developers</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-PyCharm.png" width="200" height:auto="" alt="20180715-macOS-PyCharm.png"></td>
<td>PyCharm</td>
<td>PyCharm是一个用于计算机编程的集成开发环境，主要用于Python语言开发，由捷克公司JetBrains开发，提供代码分析、图形化调试器，集成测试器、集成版本控制系统，并支持使用Django进行网页开发。 PyCharm一个跨平台开发环境，拥有Windows, macOS 和Linux版本。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/pycharm/download" target="_blank" rel="external">Download PyCharm</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-WebStorm.png" width="200" height:auto="" alt="20180715-macOS-WebStorm.png"></td>
<td>WebStorm</td>
<td>WebStorm 是jetbrains公司旗下一款JavaScript 开发工具。目前已经被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/webstorm/download" target="_blank" rel="external">Download WebStorm</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-AppCode.png" width="200" height:auto="" alt="20180715-macOS-AppCode.png"></td>
<td>AppCode</td>
<td>jetbrains公司旗下的 Objective-C/Swift 集成开发环境，用于帮助开发 Mac、iPhone 和 iPad 的应用程序。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/objc/download/" target="_blank" rel="external">Download AppCode: Smart Swift &amp; Obj-C IDE</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-IntelliJ_IDEA.png" width="200" height:auto="" alt="20180715-macOS-IntelliJ_IDEA.png"></td>
<td>IntelliJ IDEA</td>
<td>java编程语言开发的集成环境。IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、 创新的GUI设计等方面的功能可以说是超常的。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/idea/download" target="_blank" rel="external">Download IntelliJ IDEA</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-PhpStorm.png" width="200" height:auto="" alt="20180715-macOS-PhpStorm.png"></td>
<td>PhpStorm</td>
<td>PhpStorm 是 JetBrains 公司开发的一款商业的 PHP 集成开发工具，旨在提高用户效率，可深刻理解用户的编码，提供智能代码补全，快速导航以及即时错误检查。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/phpstorm/download" target="_blank" rel="external">Download PhpStorm</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-CLion.png" width="200" height:auto="" alt="20180715-macOS-CLion.png"></td>
<td>CLion</td>
<td>CLion是一款专为开发C及C++所设计的跨平台IDE。它是以IntelliJ为基础设计的，包含了许多智能功能来提高开发人员的生产力，提高开发人员的工作效率。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/clion/download" target="_blank" rel="external">Download CLion</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-GoLand.png" width="200" height:auto="" alt="20180715-macOS-GoLand.png"></td>
<td>GoLand</td>
<td>GoLand是一款专为开发Go语言所设计的跨平台IDE。</td>
<td>收费</td>
<td><a href="https://www.jetbrains.com" target="_blank" rel="external">JetBrains</a></td>
<td><a href="https://www.jetbrains.com/go/download" target="_blank" rel="external">Download GoLand</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-CodeRunner.png" width="200" height:auto="" alt="20180715-macOS-CodeRunner.png"></td>
<td>CodeRunner</td>
<td>CodeRunner 是 Mac 上一款功能强大但使用简单代码工具，官方介绍支持几乎所有语言（20种语言），同时支持语法高亮、代码提示和多种界面主题，在学习新的语言或编写简单测试代码时非常实用。</td>
<td>收费</td>
<td><a href="https://coderunnerapp.com" target="_blank" rel="external">CodeRunner – Programming Editor for Mac</a></td>
<td><a href="https://itunes.apple.com/us/app/coderunner-2/id955297617?mt=12" target="_blank" rel="external">‎CodeRunner 2 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Wechat-webdevtools.png" width="200" height:auto="" alt="20180715-macOS-Wechat-webdevtools.png"></td>
<td>wechatwebdevtools<br>（微信开发者工具）</td>
<td>为了帮助开发者简单和高效地开发和调试微信小程序，微信在原有的公众号网页调试工具的基础上，推出了全新的 微信开发者工具，集成了公众号网页调试和小程序调试两种开发模式。</td>
<td>免费</td>
<td><a href="https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/getting-started.html" target="_blank" rel="external">微信 · 小程序</a></td>
<td><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="external">开发者工具 下载</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-CocosCreator.png" width="200" height:auto="" alt="20180715-macOS-CocosCreator.png"></td>
<td>CocosCreator</td>
<td>Cocos Creator是以内容创作为核心的游戏开发工具，在Cocos2d-x基础上实现了彻底脚本化、组件化和数据驱动等特点。 Cocos Creator基于开源框架Cocos2d-x，实现了一体化、可扩展、可自定义工作流的编辑器，并在Cocos系列产品中第一次引入了组件化编程思想和数据驱动的架构设计，这极大地简化了Cocos2d-x开发工作流中的场景编辑、UI设计、资源管理、游戏调试和预览、多平台发布等工作，是使用Cocos2d-x进行团队协作开发的最佳选择。</td>
<td>免费</td>
<td><a href="http://www.cocos.com" target="_blank" rel="external">Cocos引擎_游戏开发引擎</a></td>
<td><a href="http://www.cocos.com/creator" target="_blank" rel="external">Cocos Creator 下载</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-unity-3d.jpg" width="200" height:auto="" alt="20180715-macOS-unity-3d.jpg"></td>
<td>Unity</td>
<td>Unity 是一套跨平台的游戏引擎，可用于开发Windows、MacOS、Linux 平台的单机游戏，或是iOS、Android 移动设备的游戏。Unity 也可开发支持WebGL 技术的网页游戏，或 PlayStation、XBox、Wii 主机上的游戏。</td>
<td>收费</td>
<td><a href="https://unity3d.com/cn" target="_blank" rel="external">Unity</a></td>
<td><a href="https://unity3d.com/cn/get-unity/download" target="_blank" rel="external">Download - Unity</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Unreal_Engine_4.png" width="200" height:auto="" alt="20180715-macOS-Unreal_Engine_4.png"></td>
<td>Unreal Engine 4</td>
<td>虚幻引擎是一款由Epic Games开发的游戏引擎，多用于开发第一人称射击游戏。</td>
<td>收费</td>
<td><a href="https://www.unrealengine.com/zh-CN" target="_blank" rel="external">虚幻引擎</a></td>
<td><a href="https://www.unrealengine.com/zh-CN/register?state=https%3A%2F%2Fwww.unrealengine.com%2Fzh-CN%2Fblog&amp;studio=false" target="_blank" rel="external">下载</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="Developer_Tools">Developer Tools</h4><p>程序开发中使用的工具应用。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Visual_Studio_Code.png" width="200" height:auto="" alt="20180715-macOS-Visual_Studio_Code.png"></td>
<td>Visual Studio Code</td>
<td>Visual Studio Code是一个由微软开发的，同时支持Windows、Linux和macOS操作系统且开放源代码的文本编辑器。它支持调试，并内置了Git 版本控制功能，同时也具有开发环境功能，例如代码补全、代码片段、代码重构等。</td>
<td>免费</td>
<td><a href="https://code.visualstudio.com" target="_blank" rel="external">Visual Studio Code - Code Editing. Redefined</a></td>
<td><a href="https://code.visualstudio.com/download" target="_blank" rel="external">Download Visual Studio Code - Mac, Linux, Windows</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-atom.png" width="200" height:auto="" alt="20180715-macOS-atom.png"></td>
<td>Atom</td>
<td>Atom是由GitHub开发的自由及开放源代码的文字与代码编辑器，支持macOS、Windows和Linux操作系统，支持Node.js所写的插件，并内置由Github提供的Git版本控制系统。多数的延伸包皆为开放源代码授权，并由社区建置与维护。</td>
<td>免费</td>
<td><a href="https://ide.atom.io" target="_blank" rel="external">Atom IDE</a></td>
<td><a href="https://atom.io" target="_blank" rel="external">Atom</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Sublime_Text.png" width="200" height:auto="" alt="20180715-macOS-Sublime_Text.png"></td>
<td>Sublime Text</td>
<td>Sublime Text是一套跨平台的文本编辑器，支持基于Python的插件。Sublime Text是专有软件，可通过包扩展。大多数的包使用自由软件授权发布，并由社区建置维护。</td>
<td>免费/收费</td>
<td><a href="https://www.sublimetext.com" target="_blank" rel="external">Sublime Text - A sophisticated text editor for code, markup and prose</a></td>
<td><a href="https://www.sublimetext.com/3" target="_blank" rel="external">Download - Sublime Text</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iTerm.png" width="200" height:auto="" alt="20180715-macOS-iTerm.png"></td>
<td>iTerm</td>
<td>iTerm 是一款完全免费的，专为 masOS 用户打造的命令行应用。有很多能够提升效率的实用功能，比如说窗口分割、热键窗口、智能搜索、自动完成、快速复制等</td>
<td>免费</td>
<td><a href="https://www.iterm2.com" target="_blank" rel="external">iTerm2 - macOS Terminal Replacement</a></td>
<td><a href="https://www.iterm2.com/downloads.html" target="_blank" rel="external">Downloads - iTerm2</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Navicat_Premium.png" width="200" height:auto="" alt="20180715-macOS-Navicat_Premium.png"></td>
<td>Navicat Premium</td>
<td>Navicat Premium 是一套数据库开发工具，让你从单一应用程序中同时连接 MySQL、MariaDB、SQL Server、Oracle、PostgreSQL 和 SQLite 数据库。它与 Amazon RDS、Amazon Aurora、Amazon Redshift、Microsoft Azure、Oracle Cloud、阿里云和腾讯云等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</td>
<td>收费</td>
<td><a href="https://www.navicat.com.cn/products/navicat-premium" target="_blank" rel="external">Navicat Premium - 以单一的 GUI 同时连接不同类型的数据库</a></td>
<td><a href="https://www.navicat.com.cn/download/navicat-premium" target="_blank" rel="external">下载 Navicat Premium 14 天免费</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-sourcetree.png" width="200" height:auto="" alt="20180715-macOS-sourcetree.png"></td>
<td>SourceTree</td>
<td>SourceTree 是Windows 和Mac OS X 下免费的Git 和Hg 客户端，拥有可视化界面，容易上手操作。</td>
<td>免费</td>
<td><a href="https://www.sourcetreeapp.com" target="_blank" rel="external">Sourcetree - Free Git GUI for Mac and Windows</a></td>
<td><a href="https://www.sourcetreeapp.com" target="_blank" rel="external">Sourcetree</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-GitHub_Desktop.png" width="200" height:auto="" alt="20180715-macOS-GitHub_Desktop.png"></td>
<td>GitHub Desktop</td>
<td>GitHub Desktop is an open source Electron-based GitHub app. It is written in TypeScript and uses React.</td>
<td>免费</td>
<td><a href="https://desktop.github.com" target="_blank" rel="external">GitHub Desktop - Simple collaboration from your desktop</a></td>
<td><a href="https://desktop.github.com" target="_blank" rel="external">GitHub Desktop</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Dash.png" width="200" height:auto="" alt="20180715-macOS-Dash.png"></td>
<td>Dash</td>
<td>Dash is an API Documentation Browser and Code Snippet Manager. Dash stores snippets of code and instantly searches offline documentation sets for 200+ APIs, 100+ cheat sheets and more. You can even generate your own docsets or request docsets to be included.</td>
<td>收费</td>
<td><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash for macOS</a></td>
<td><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash for macOS</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-charles.png" width="200" height:auto="" alt="20180715-macOS-charles.png"></td>
<td>Charles</td>
<td>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</td>
<td>免费/收费</td>
<td><a href="https://www.charlesproxy.com" target="_blank" rel="external">Charles Web Debugging Proxy • HTTP Monitor / HTTP Proxy / HTTPS &amp; SSL Proxy / Reverse Proxy</a></td>
<td><a href="https://www.charlesproxy.com/download/latest-release/" target="_blank" rel="external">Download Charles</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Easy_APNs_Provider.png" width="200" height:auto="" alt="20180715-macOS-Easy_APNs_Provider.png"></td>
<td>Easy APNs Provider</td>
<td>一个推送服务提供商（Apns Provider）方能发送推送来测试iOS程序。</td>
<td>免费</td>
<td><a href="http://www.cocoachina.com/bbs/read.php?tid-290938.html" target="_blank" rel="external">苹果推送服务测试小工具 Easy APNs Provider （Mac平台）</a></td>
<td><a href="https://itunes.apple.com/us/app/easy-apns-provider-push-notification-service-testing-tool/id989622350?mt=12" target="_blank" rel="external">‎Easy APNs Provider on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Genymotion.png" width="200" height:auto="" alt="20180715-macOS-Genymotion.png"></td>
<td>Genymotion</td>
<td>Create any Android device - Emulate all Android versions and screen size.</td>
<td>免费/收费</td>
<td><a href="https://www.genymotion.com" target="_blank" rel="external">Genymotion Android Emulator</a></td>
<td><a href="https://www.genymotion.com/desktop/" target="_blank" rel="external">Genymotion</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-VirtualBox.png" width="200" height:auto="" alt="20180715-macOS-VirtualBox.png"></td>
<td>VirtualBox</td>
<td>Oracle VirtualBox是由德国InnoTek软件公司出品的虚拟机软件，现在则由甲骨文公司进行开发，是甲骨文公司xVM虚拟化平台技术的一部分。它提供用户在32位或64位的Windows、Solaris及Linux 操作系统上虚拟其它x86的操作系统。</td>
<td>免费</td>
<td><a href="https://www.virtualbox.org/wiki/VirtualBox" target="_blank" rel="external">VirtualBox – Oracle VM VirtualBox</a></td>
<td><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">Downloads – Oracle VM VirtualBox</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Parallels_Desktop.png" width="200" height:auto="" alt="20180715-macOS-Parallels_Desktop.png"></td>
<td>Parallels Desktop</td>
<td>Parallels Desktop是一款运行在Mac 电脑上的极为优秀的虚拟机软件。 用户可以在Mac OS X 下非常方便运行Windows、Linux 等操作系统及应用。 用户不必繁琐重复地重启电脑即可在Win 与Mac 之间切换甚至同时使用它们。</td>
<td>收费</td>
<td><a href="https://www.parallels.com/cn/products/desktop" target="_blank" rel="external">Parallels Desktop 13</a></td>
<td><a href="https://www.parallels.com/cn/products/desktop" target="_blank" rel="external">Parallels Desktop 13</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Reveal.png" width="200" height:auto="" alt="20180715-macOS-Reveal.png"></td>
<td>Reveal</td>
<td>Reveal是iOS开发工具中的神器之一，它能够在应用程序运行过程中调试应用程序界面。</td>
<td>免费/收费</td>
<td><a href="https://revealapp.com" target="_blank" rel="external">Reveal - Runtime view debugging for iOS &amp; tvOS apps &amp; extensions</a></td>
<td><a href="https://revealapp.com/download/" target="_blank" rel="external">Download - Reveal</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Kaleidoscope.png" width="200" height:auto="" alt="20180715-macOS-Kaleidoscope.png"></td>
<td>Kaleidoscope</td>
<td>Kaleidoscope is the world’s most powerful file comparison app. Compare different text files, images, and folders on your Mac and iPad. Review and merge changes in a matter of seconds (merging available only on the Mac).</td>
<td>收费</td>
<td><a href="https://www.kaleidoscopeapp.com" target="_blank" rel="external">Kaleidoscope</a></td>
<td><a href="https://itunes.apple.com/us/app/kaleidoscope/id587512244?mt=12" target="_blank" rel="external">‎Kaleidoscope on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Prepo.png" width="200" height:auto="" alt="20180715-macOS-Prepo.png"></td>
<td>Prepo</td>
<td>Prepo可以帮助设计师快速生成各种尺寸的图标，只需你将最大分辨率的图标拖拽进来，其他的尺寸交给Prepo做就好了。</td>
<td>免费</td>
<td><a href="https://wearemothership.com/work/prepo/" target="_blank" rel="external">Prepo 2 - Mac and iOS - Preview, resize and export icon and @2x artwork for app development</a></td>
<td><a href="https://itunes.apple.com/us/app/prepo/id476533227?mt=12" target="_blank" rel="external">‎Prepo on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-PaintCode.png" width="200" height:auto="" alt="20180715-macOS-PaintCode.png"></td>
<td>PaintCode</td>
<td>随心所欲的将界面设计转换成代码。</td>
<td>收费</td>
<td><a href="https://www.paintcodeapp.com" target="_blank" rel="external">PaintCode - Turn your drawings into Objective-C or Swift drawing code</a></td>
<td><a href="https://www.paintcodeapp.com" target="_blank" rel="external">PaintCode</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-QuartzCode.png" width="200" height:auto="" alt="20180715-macOS-QuartzCode.png"></td>
<td>QuartzCode</td>
<td>QuartzCode是一款专门用来创作iOS/macOS动画的软件，基本上把整个Core Animation框架的内容都搬到了软件里面，比如各种Layer、Mask、可以用来动画的属性，基本上跟代码是一致的，完全可以当成“可视化动画编程”工具，而且制作以后可以导出代码+资源文件，直接就可以在代码里面调用，方便自定义修改。</td>
<td>收费</td>
<td><a href="http://www.quartzcodeapp.com" target="_blank" rel="external">QuartzCode - Turn your animations to objective-c or swift OS X / iOS animations code</a></td>
<td><a href="https://itunes.apple.com/app/quartzcode-vector-animation/id913523893" target="_blank" rel="external">‎QCode on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Core_Animator.png" width="200" height:auto="" alt="20180715-macOS-Core_Animator.png"></td>
<td>Core Animator</td>
<td>Core Animator 是一款动画制作软件，可以自动生成 Objective-C 和 Swift 代码，让开发者快速在 App 中制作动画效果甚至是游戏。</td>
<td>收费</td>
<td><a href="http://www.coreanimator.com" target="_blank" rel="external">CoreAnimator</a></td>
<td><a href="https://itunes.apple.com/us/app/core-animator/id934434650?mt=12" target="_blank" rel="external">‎Core Animator on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-VisualJSON.png" width="200" height:auto="" alt="20180715-macOS-VisualJSON.png"></td>
<td>VisualJSON</td>
<td>Visual JSON is a simple and very easy to use JSON visulization tool for JSON API server/client developers.</td>
<td>免费</td>
<td><a href="http://youknowone.github.io/VisualJSON/" target="_blank" rel="external">VisualJSON by youknowone</a></td>
<td><a href="https://itunes.apple.com/us/app/visual-json/id488709442?mt=12" target="_blank" rel="external">‎Visual JSON on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-FauxPas.png" width="200" height:auto="" alt="20180715-macOS-FauxPas.png"></td>
<td>FauxPas</td>
<td>Faux Pas inspects your iOS or Mac app’s Xcode project and warns about possible bugs, as well as about maintainability and style issues.</td>
<td>收费</td>
<td><a href="http://fauxpasapp.com" target="_blank" rel="external">Faux Pas for Xcode</a></td>
<td><a href="http://fauxpasapp.com" target="_blank" rel="external">Faux Pas for Xcode</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iReSign.png" width="200" height:auto="" alt="20180715-macOS-iReSign.png"></td>
<td>iReSign</td>
<td>iReSign allows iDevice app bundles (.ipa) files to be signed or resigned with a digital certificate from Apple for distribution. This tool is aimed at enterprises users, for enterprise deployment, when the person signing the app is different than the person(s) developing it.</td>
<td>免费</td>
<td><a href="https://github.com/maciekish/iReSign" target="_blank" rel="external">maciekish/iReSign</a></td>
<td><a href="https://github.com/maciekish/iReSign" target="_blank" rel="external">maciekish/iReSign</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iOS_App_Signer.png" width="200" height:auto="" alt="20180715-macOS-iOS_App_Signer.png"></td>
<td>iOS App Signer</td>
<td>This is an app for OS X that can (re)sign apps and bundle them into ipa files that are ready to be installed on an iOS device.</td>
<td>免费</td>
<td><a href="https://github.com/DanTheMan827/ios-app-signer" target="_blank" rel="external">DanTheMan827/ios-app-signer</a></td>
<td><a href="https://github.com/DanTheMan827/ios-app-signer/releases" target="_blank" rel="external">Releases · DanTheMan827/ios-app-signer</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Impactor.png" width="200" height:auto="" alt="20180715-macOS-Impactor.png"></td>
<td>Impactor</td>
<td>Cydia Impactor is a GUI tool for working with mobile devices. It has features already, but is still very much a work-in-progress.</td>
<td>免费</td>
<td><a href="http://www.cydiaimpactor.com" target="_blank" rel="external">Cydia Impactor</a></td>
<td><a href="http://www.cydiaimpactor.com" target="_blank" rel="external">Cydia Impactor</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MachOView.png" width="200" height:auto="" alt="20180715-macOS-MachOView.png"></td>
<td>MachOView</td>
<td>MachOView is a visual Mach-O file browser. It provides a complete solution for exploring and in-place editing Intel and ARM binaries.</td>
<td>免费</td>
<td><a href="https://sourceforge.net/p/machoview/code/ci/master/tree/" target="_blank" rel="external">MachOView - Code</a></td>
<td><a href="https://sourceforge.net/projects/machoview/" target="_blank" rel="external">MachOView download - SourceForge.net</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Hopper_Disassembler-v4.png" width="200" height:auto="" alt="20180715-macOS-Hopper_Disassembler-v4.png"></td>
<td>Hopper Disassembler</td>
<td>Hopper Disassembler是一款是32位和64位的二进制反汇编器，反编译和调试。你可以使用此工具拆开你想要的任何二进制。</td>
<td>收费</td>
<td><a href="https://www.hopperapp.com" target="_blank" rel="external">Hopper</a></td>
<td><a href="https://www.hopperapp.com" target="_blank" rel="external">Hopper</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-IDA_Pro_7.png" width="200" height:auto="" alt="20180715-macOS-IDA_Pro_7.png"></td>
<td>IDA Pro</td>
<td>IDA Pro，为Interactive Disassembler公司的反组译与除错工具的产品。常用于逆向工程。</td>
<td>收费</td>
<td><a href="https://www.hex-rays.com/products/ida/" target="_blank" rel="external">IDA</a></td>
<td><a href="https://www.hex-rays.com/products/ida/order.shtml" target="_blank" rel="external">IDA: Ordering</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="System">System</h4><p>增强或改变macOS系统功能，常驻状态栏或成为系统服务的一部分。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Alfred.png" width="200" height:auto="" alt="20180715-macOS-Alfred.png"></td>
<td>Alfred</td>
<td>Alfred is an award-winning app for Mac OS X which boosts your efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac.</td>
<td>收费</td>
<td><a href="https://www.alfredapp.com" target="_blank" rel="external">Alfred - Productivity App for Mac OS X</a></td>
<td><a href="https://www.alfredapp.com" target="_blank" rel="external">Alfred - Productivity App for Mac OS X</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Moom.png" width="200" height:auto="" alt="20180715-macOS-Moom.png"></td>
<td>Moom</td>
<td>Moom 是一款专为Mac准备的窗口管理工具，它能够让您移动和缩放窗口。</td>
<td>收费</td>
<td><a href="https://manytricks.com/moom/" target="_blank" rel="external">Moom · Many Tricks</a></td>
<td><a href="https://itunes.apple.com/us/app/moom/id419330170?mt=12" target="_blank" rel="external">‎Moom on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Keka.png" width="200" height:auto="" alt="20180715-macOS-Keka.png"></td>
<td>Keka</td>
<td>Keka is a full featured file archiver, as easy as it can be.</td>
<td>收费</td>
<td><a href="https://www.keka.io/en/" target="_blank" rel="external">Keka - the macOS file archiver</a></td>
<td><a href="https://itunes.apple.com/us/app/keka/id470158793?mt=12" target="_blank" rel="external">‎Keka on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-The_Unarchiver.png" width="200" height:auto="" alt="20180715-macOS-The_Unarchiver.png"></td>
<td>The Unarchiver</td>
<td>The Unarchiver是一款免费实用的解压缩应用程序，用户可以使用它解压多达30种不同的压缩格式文件。</td>
<td>免费</td>
<td><a href="https://theunarchiver.com" target="_blank" rel="external">The Unarchiver - Top Free Unarchiving Software for macOS</a></td>
<td><a href="https://itunes.apple.com/us/app/the-unarchiver/id425424353?mt=12" target="_blank" rel="external">‎‎The Unarchiver on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-JietuMac.png" width="200" height:auto="" alt="20180715-macOS-JietuMac.png"></td>
<td>Jietu<br>截图</td>
<td>截图（Jietu）是一款免费应用，精美界面设计，操作简单，功能强大。截图功能包括区域截图／窗口截图／全屏截图／倒计时截图／录制屏幕，保存可自定义选择图片和视频质量。</td>
<td>免费</td>
<td><a href="https://jietu.qq.com" target="_blank" rel="external">轻松便捷爱截图</a></td>
<td><a href="https://itunes.apple.com/us/app/截图-jietu-快速标注-便捷分享的截屏工具/id1059334054?mt=12" target="_blank" rel="external">‎截图(Jietu)-快速标注、便捷分享的截屏工具 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iText.png" width="200" height:auto="" alt="20180715-macOS-iText.png"></td>
<td>iText</td>
<td>iText是一个OCR图像转成文字的工具，在macOS上非常方便和准确的识别。</td>
<td>免费/订阅</td>
<td><a href="https://en.toolinbox.net/iText/" target="_blank" rel="external">iText - OCR Tool - Toolinbox</a></td>
<td><a href="https://itunes.apple.com/us/app/itext-ocr-translator/id1314980676?mt=12" target="_blank" rel="external">‎iText - OCR &amp; Translator on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-ShadowsocksX.png" width="200" height:auto="" alt="20180715-macOS-ShadowsocksX.png"></td>
<td>ShadowsocksX</td>
<td>A secure socks5 proxy, designed to protect your Internet traffic.</td>
<td>免费</td>
<td><a href="https://github.com/yangfeicheung/Shadowsocks-X" target="_blank" rel="external">yangfeicheung/Shadowsocks-X: Latest ShadowsocksX for Mac OS X 10.9+</a></td>
<td><a href="https://www.sednax.com" target="_blank" rel="external">Shadowsocks X - A secure socks5 proxy</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-TinyCal.png" width="200" height:auto="" alt="20180715-macOS-TinyCal.png"></td>
<td>TinyCal</td>
<td>小历是 macOS &amp; iOS 平台上面小而美的日历，macOS 上面通过菜单栏和通知中心让用户查看日历十分便捷。</td>
<td>收费</td>
<td><a href="http://ioszen.com/tinycal" target="_blank" rel="external">小历 - 小而美的日历 (OS X) - iOS Zen</a></td>
<td><a href="https://itunes.apple.com/us/app/小历-小而美的日历/id1114272557?mt=12" target="_blank" rel="external">‎小历 - 小而美的日历 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-TripMode.png" width="200" height:auto="" alt="20180715-macOS-TripMode.png"></td>
<td>TripMode</td>
<td>TripMode，每当你的笔记本接入手机热点后，都会自动开启流量管控状态。</td>
<td>收费</td>
<td><a href="https://www.tripmode.ch" target="_blank" rel="external">TripMode - Your mobile data savior.</a></td>
<td><a href="https://www.tripmode.ch" target="_blank" rel="external">TripMode - Your mobile data savior.</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h3 id="Utility">Utility</h3><p>通用工具，便捷和高效的专精应用。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Mate_Translate.png" width="200" height:auto="" alt="20180715-macOS-Mate_Translate.png"></td>
<td>Mate Translate</td>
<td>非常棒的应用，翻译很精确！</td>
<td>收费</td>
<td><a href="https://www.matetranslate.com" target="_blank" rel="external">Mate Translate – your ultimate translation app</a></td>
<td><a href="https://itunes.apple.com/us/app/mate-translate-translator/id1005088137?mt=12" target="_blank" rel="external">‎Mate Translate – translator on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-CleanMyMac3.png" width="200" height:auto="" alt="20180715-macOS-CleanMyMac3.png"></td>
<td>CleanMyMac</td>
<td>如果电脑空间小，清空电脑还有很有作用。比对苹果x删除，用CleanMyMac卸载更干净。</td>
<td>收费</td>
<td><a href="https://macpaw.com" target="_blank" rel="external">CleanMyMac 3: The Best Mac Cleanup App for OS X. Get a Cleaner Mac in Minutes.</a></td>
<td><a href="https://macpaw.com/download/cleanmymac" target="_blank" rel="external">Download CleanMyMac 3</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Google_Chrome.png" width="200" height:auto="" alt="20180715-macOS-Google_Chrome.png"></td>
<td>Google Chrome</td>
<td>一款快速、简单且安全的浏览器，适合在所有设备上使用。</td>
<td>免费</td>
<td><a href="https://www.google.com/chrome/" target="_blank" rel="external">Chrome 网络浏览器</a></td>
<td><a href="https://www.google.com/chrome/" target="_blank" rel="external">Chrome 网络浏览器</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iSmartPhoto.png" width="200" height:auto="" alt="20180715-macOS-iSmartPhoto.png"></td>
<td>iSmartPhoto</td>
<td>iSmartPhoto是一个快速的图像浏览器和强大的图像管理器。不像 iPhoto，iSmartPhoto for mac不需要你手动导入照片–它自动拉取你的照片从任何文件夹或驱动器。通过只是双单击查找器的单个图像或拖动文件夹，iSmartPhoto会自动显示每个图像从所选的文件夹及其子文件夹。</td>
<td>收费</td>
<td><a href="https://ismartphoto.wordpress.com" target="_blank" rel="external">ismartphoto</a></td>
<td><a href="https://itunes.apple.com/us/app/ismartphoto/id940107333?mt=12" target="_blank" rel="external">‎iSmartPhoto on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-miniqpicview.png" width="200" height:auto="" alt="20180715-macOS-miniqpicview.png"></td>
<td>Kantu<br>（看图）</td>
<td>Kantu (看图)是腾讯在 macOS 平台出品的优质看图工具，轻轻松松从万张照片中找到你想要的。</td>
<td>免费</td>
<td><a href="https://kantu.qq.com" target="_blank" rel="external">看图 - 轻松找照片</a></td>
<td><a href="https://itunes.apple.com/cn/app/id1314842898" target="_blank" rel="external">‎看图-轻松找照片 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-GIF_Brewery_3.png" width="200" height:auto="" alt="20180715-macOS-GIF_Brewery_3.png"></td>
<td>GIF Brewery</td>
<td>GIF Brewery 制作GIF 动图。</td>
<td>免费</td>
<td><a href="https://gfycat.com/gifbrewery" target="_blank" rel="external">GIF Brewery by Gfycat</a></td>
<td><a href="https://itunes.apple.com/us/app/gif-brewery-3-by-gfycat/id1081413713?mt=12" target="_blank" rel="external">‎GIF Brewery 3 by Gfycat on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-163Dict.png" width="200" height:auto="" alt="20180715-macOS-163Dict.png"></td>
<td>YoudaoDict<br>（网易有道词典）</td>
<td>一款英语、日语、韩语、法语免费全能查词翻译软件。</td>
<td>免费</td>
<td><a href="http://cidian.youdao.com/index-mac.html" target="_blank" rel="external"></a></td>
<td><a href="https://itunes.apple.com/us/app/youdaodict/id491854842?mt=12" target="_blank" rel="external">‎YoudaoDict on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Downie3.png" width="200" height:auto="" alt="20180715-macOS-Downie3.png"></td>
<td>Downie</td>
<td>易用的在线视频下载工具。</td>
<td>收费</td>
<td><a href="https://software.charliemonroe.net/downie.php" target="_blank" rel="external">Downie - YouTube Video Downloader for macOS - Charlie Monroe Software</a></td>
<td><a href="https://software.charliemonroe.net/downie.php" target="_blank" rel="external">Downie - YouTube Video Downloader for macOS - Charlie Monroe Software</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Waltr_2.png" width="200" height:auto="" alt="20180715-macOS-Waltr_2.png"></td>
<td>Waltr 2</td>
<td>非常方便的同步iOS设备，拖拽就可以输送音乐、视频、电子书。</td>
<td>收费</td>
<td><a href="https://softorino.com/w2/" target="_blank" rel="external">WALTR 2. The all-new product.</a></td>
<td><a href="https://softorino.com/w2/" target="_blank" rel="external">WALTR 2. The all-new product.</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iExplorer.png" width="200" height:auto="" alt="20180715-macOS-iExplorer.png"></td>
<td>iExplorer</td>
<td>iExplorer 是一个非常优秀的一个免 iTunes 同步文件的资源管理器。</td>
<td>收费</td>
<td><a href="https://macroplant.com/iexplorer" target="_blank" rel="external">iPhone Music, Messages &amp; File Transfer for Mac &amp; PC · iExplorer</a></td>
<td><a href="https://macroplant.com/iexplorer" target="_blank" rel="external">iExplorer</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iMazing.png" width="200" height:auto="" alt="20180715-macOS-iMazing.png"></td>
<td>iMazing</td>
<td>让备受信赖的软件为您传输和保存音乐、消息、文件和数据。安全备份任何 iPhone、iPad 或 iPod touch。iMazing 功能强大、易于使用，称得上是 Mac 和 PC 上最好的 iOS 设备管理器。</td>
<td>收费</td>
<td><a href="https://imazing.com/zh" target="_blank" rel="external">iMazing - 兼容 Mac 及 PC 的 iPhone、iPad 和 iPod 管理软件。传输、拷贝、备份音乐、信息、文件等数据。</a></td>
<td><a href="https://imazing.com/zh/download" target="_blank" rel="external">下载 iMazing 2</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-HandShaker.png" width="200" height:auto="" alt="20180715-macOS-HandShaker.png"></td>
<td>HandShaker</td>
<td>HandShaker Mac 版（原名 SmartFinder)，使你在 Mac 电脑上也可以方便自如地管理你在 Android 手机中的内容。</td>
<td>免费</td>
<td><a href="https://www.smartisan.com/apps/#/handshaker" target="_blank" rel="external">Smartisian 应用下载-锤子科技官网</a></td>
<td><a href="https://itunes.apple.com/cn/app/handshaker/id1012930195" target="_blank" rel="external">‎HandShaker - 安卓手机管理工具 - on the Mac App Store </a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-QuickTimePlayerX.png" width="200" height:auto="" alt="20180715-macOS-QuickTimePlayerX.png"></td>
<td>QuickTime Player</td>
<td>QuickTime Player作为macOS默认的播放器，完美的iOS屏幕投影，完美的屏幕录像。</td>
<td>免费</td>
<td><a href="https://support.apple.com/downloads/quicktime" target="_blank" rel="external">Apple - QuickTime - Downloads</a></td>
<td><a href="https://support.apple.com/downloads/quicktime" target="_blank" rel="external">Apple - QuickTime - Downloads</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="Write">Write</h4><p>图文创作，包括文字、图像、脑图等。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Microsoft_Word.png" width="100" height:auto="" alt="20180715-macOS-Microsoft_Word.png"><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Microsoft_Excel.png" width="100" height:auto="" alt="20180715-macOS-Microsoft_Excel.png"><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Microsoft_PowerPoint.png" width="100" height:auto="" alt="20180715-macOS-Microsoft_PowerPoint.png"></td>
<td>Microsoft <br>Word<br>Excel<br>PowerPoint</td>
<td>微软Office三件套，良心！</td>
<td>收费</td>
<td><a href="https://products.office.com/en-us/mac/microsoft-office-for-mac" target="_blank" rel="external">Office 365 for Mac, Office 2016 for Mac</a></td>
<td><a href="https://support.office.com/en-us/article/download-and-install-or-reinstall-office-365-or-office-2016-on-a-pc-or-mac-4414eaaf-0478-48be-9c42-23adc4716658" target="_blank" rel="external">Download and install</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Keynote.png" width="100" height:auto="" alt="20180715-macOS-Keynote.png"> <img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Numbers.png" width="100" height:auto="" alt="20180715-macOS-Numbers.png"><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Pages.png" width="100" height:auto="" alt="20180715-macOS-Pages.png"></td>
<td>Keynote<br>Numbers<br>Pages</td>
<td>Keynote是一个演示幻灯片应用软件，由苹果电脑公司出品，运行于OS X 操作系统。最早发布于2003年1月。Keynote现在与Pages、Numbers组成工具软件套装iWork。</td>
<td>免费</td>
<td><a href="https://www.apple.com/cn/keynote/" target="_blank" rel="external">Keynote 讲演 - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/cn/app/keynote/id409183694?mt=12&amp;ls=1&amp;v0=www-cn-mac-keynote-app-keynote" target="_blank" rel="external">Keynote on the ‎Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MindNode.png" width="200" height:auto="" alt="20180715-macOS-MindNode.png"></td>
<td>MindNode 4</td>
<td>很漂亮和简洁的思维导图制作软件。</td>
<td>收费</td>
<td><a href="https://mindnode.com" target="_blank" rel="external">MindNode</a></td>
<td><a href="https://itunes.apple.com/us/app/mindnode-4/id312220102?mt=8" target="_blank" rel="external">‎MindNode 4 on the App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-StarUML.png" width="200" height:auto="" alt="20180715-macOS-StarUML.png"></td>
<td>StarUML</td>
<td>StarUML是一种生成类图和其他类型的统一建模语言(UML)图表的工具。</td>
<td>收费</td>
<td><a href="http://staruml.io" target="_blank" rel="external">StarUML</a></td>
<td><a href="http://staruml.io/download" target="_blank" rel="external">Download - StarUML</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MWeb.png" width="200" height:auto="" alt="20180715-macOS-MWeb.png"></td>
<td>MWeb 3</td>
<td>MWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件。</td>
<td>收费</td>
<td><a href="https://zh.mweb.im" target="_blank" rel="external">MWeb - 专业的Markdown写作、记笔记、静态博客生成软件 - MWeb</a></td>
<td><a href="https://itunes.apple.com/cn/app/mweb/id1403919533?l=zh&amp;ls=1&amp;mt=12" target="_blank" rel="external">MWeb on the ‎Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MacDown.png" width="200" height:auto="" alt="20180715-macOS-MacDown.png"></td>
<td>MacDown</td>
<td>开源免费的Mardown编辑器。</td>
<td>免费</td>
<td><a href="https://macdown.uranusjr.com" target="_blank" rel="external">MacDown: The open source Markdown editor for macOS</a></td>
<td><a href="https://github.com/MacDownApp/macdown/releases" target="_blank" rel="external">Releases · MacDownApp/macdown</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Evernote.png" width="200" height:auto="" alt="20180715-macOS-Evernote.png"></td>
<td>Evernote<br>（印象笔记）</td>
<td>随时随地获取、整理、分享笔记。</td>
<td>免费/订阅</td>
<td><a href="https://evernote.com" target="_blank" rel="external">智能工作，有序生活，记录一切。- Evernote</a></td>
<td><a href="https://itunes.apple.com/us/app/evernote-stay-organized/id406056744?mt=12" target="_blank" rel="external">‎Evernote – stay organized on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-YoudaoNote.png" width="200" height:auto="" alt="20180715-macOS-YoudaoNote.png"></td>
<td>YoudaoNote<br>（有道云笔记）</td>
<td>有道云笔记是网易有道按照国人使用习惯进行开发的多平台记录工具，受到超过5000万用户的喜爱。</td>
<td>免费</td>
<td><a href="https://note.youdao.com" target="_blank" rel="external">有道云笔记</a></td>
<td><a href="https://itunes.apple.com/us/app/有道云笔记/id1121484812?mt=12" target="_blank" rel="external">‎有道云笔记 on the Mac App Store</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="Design">Design</h4><p>设计，影、音、视、图。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Adobe_Photoshop_CC_2018_AppIcon.png" width="200" height:auto="" alt="20180715-macOS-Adobe_Photoshop_CC_2018_AppIcon.png"></td>
<td>Adobe Photoshop CC</td>
<td>Adobe Photoshop，简称“Ps”，是一个由Adobe开发和发行的图像处理软件。</td>
<td>收费</td>
<td><a href="https://www.adobe.com" target="_blank" rel="external">Adobe: Creative, marketing and document management solutions</a></td>
<td><a href="https://www.adobe.com/products/photoshop.html?promoid=PC1PQQ5T&amp;mv=other" target="_blank" rel="external">Adobe Photoshop CC - Best photo, image, and design editing software</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Adobe_Illustrator_CC_appicon.png" width="200" height:auto="" alt="20180715-macOS-Adobe_Illustrator_CC_appicon.png"></td>
<td>Adobe Illustrator CC</td>
<td>Adobe Illustrator，简称“AI”，是Adobe系统公司推出的基于向量的图形制作软体。最初是1986年为苹果公司麦金塔电脑设计开发的，1987年1月发布，在此之前它只是Adobe内部的字体开发和PostScript编辑软件。</td>
<td>收费</td>
<td><a href="https://www.adobe.com" target="_blank" rel="external">Adobe: Creative, marketing and document management solutions</a></td>
<td><a href="https://www.adobe.com/products/illustrator.html?promoid=PGRQQLFS&amp;mv=other" target="_blank" rel="external">Adobe Illustrator CC - Vector graphic design software</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Sketch.png" width="200" height:auto="" alt="20180715-macOS-Sketch.png"></td>
<td>Sketch</td>
<td>Sketch 是一款矢量绘图工具。</td>
<td>收费</td>
<td><a href="https://www.sketchapp.com" target="_blank" rel="external">Sketch - The digital design toolkit</a></td>
<td><a href="https://www.sketchapp.com/get/" target="_blank" rel="external">Sketch - Download Sketch</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-AXURE.png" width="200" height:auto="" alt="20180715-macOS-AXURE.png"></td>
<td>Axure RP</td>
<td>Axure RP是一款专业的快速原型设计工具。Axure（发音：Ack-sure），代表美国Axure公司；RP则是Rapid Prototyping（快速原型）的缩写。</td>
<td>收费</td>
<td><a href="https://www.axure.com" target="_blank" rel="external">Prototypes, Specifications, and Diagrams in One Tool - Axure Software</a></td>
<td><a href="https://www.axure.com/download" target="_blank" rel="external">Download Axure RP 8 - Axure Software</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-ColorSnapper2.png" width="200" height:auto="" alt="20180715-macOS-ColorSnapper2.png"></td>
<td>ColorSnapper2</td>
<td>这个取色软件很棒，取色能转成代码最突出，CSS/Swift/OC/Java/Android/.Net/OpenG/..等代码。</td>
<td>收费</td>
<td><a href="https://colorsnapper.com/?utm_source=MAS&amp;utm_medium=product&amp;utm_campaign=ColorSnapper2" target="_blank" rel="external">ColorSnapper — The Color Picker App for macOS</a></td>
<td><a href="https://itunes.apple.com/us/app/colorsnapper-2/id969418666?mt=12" target="_blank" rel="external">‎ColorSnapper 2 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Color_Picker_icon.png" width="200" height:auto="" alt="20180715-macOS-Color_Picker_icon.png"></td>
<td>Color Picker</td>
<td>比较简洁的取色工具，以前是免费的，现在不太建议买。</td>
<td>收费</td>
<td><a href="http://nscoding.co.uk" target="_blank" rel="external">nscoding - Patrick Chamelo - Vasileia Chatziioannou</a></td>
<td><a href="https://itunes.apple.com/us/app/color-picker/id641027709?mt=12" target="_blank" rel="external">‎Color Picker on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-xScope.png" width="200" height:auto="" alt="20180715-macOS-xScope.png"></td>
<td>xScope 4</td>
<td>xScope 是一款Mac上的设计开发辅助工具，尤其是移动应用的设计，帮助每个设计者快速，精确的完成工作，度量距离，角度的标尺，放大镜，精确垂直，水平标记辅助线，精确阔度，找画面上符合位置测交叉点。</td>
<td>收费</td>
<td><a href="https://xscopeapp.com" target="_blank" rel="external">xScope • Measure. Inspect. Test.</a></td>
<td><a href="https://itunes.apple.com/us/app/xscope-4/id889428659?mt=12" target="_blank" rel="external">‎xScope 4 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Logoist_2.png" width="200" height:auto="" alt="20180715-macOS-Logoist_2.png"></td>
<td>Logoist 3</td>
<td>Logoist 是 Mac OS X 平台上一款非常不错的 Mac 平面设计软件，能设计 logo、标题艺术、图像、横幅、网站元素、贺卡、按钮、iBooks 作者标题、图片拼贴、桌面背景等等，只要任何叫的出名字的图形，Logoist 都可以帮你办到。</td>
<td>收费</td>
<td><a href="https://www.syniumsoftware.com/logoist" target="_blank" rel="external">Logoist 3 - Powerful Vector Design App for Mac</a></td>
<td><a href="https://itunes.apple.com/us/app/logoist-3/id1247301872?mt=12" target="_blank" rel="external">‎Logoist 3 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Pixelmator.png" width="200" height:auto="" alt="20180715-macOS-Pixelmator.png"></td>
<td>Pixelmator</td>
<td>Mac OS X 专有的图像处理软件。Pixelmator 界面清爽，布局灵活，熟悉 Photoshop 的人可迅速上手。软件建立在一些开源和 Mac OS X 图形技术之上，可调用 Mac 图形加速。使用起来在界面交互和流畅感上均优于 Photoshop，且与 Mac 自带程序整合不错。</td>
<td>收费</td>
<td><a href="https://www.pixelmator.com/mac/" target="_blank" rel="external">Pixelmator</a></td>
<td><a href="https://itunes.apple.com/us/app/pixelmator/id407963104?mt=12" target="_blank" rel="external">‎Pixelmator on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Final_Cut_Pro.png" width="200" height:auto="" alt="20180715-macOS-Final_Cut_Pro.png"></td>
<td>Final Cut Pro</td>
<td>后期制作，前景更广阔。</td>
<td>收费</td>
<td><a href="https://www.apple.com/cn/final-cut-pro/" target="_blank" rel="external">Final Cut Pro X - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/us/app/final-cut-pro/id424389933?mt=12" target="_blank" rel="external">‎Final Cut Pro on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Motion.png" width="200" height:auto="" alt="20180715-macOS-Motion.png"></td>
<td>Motion</td>
<td>特效，特别容易。Motion 是一款强大的运动图形工具，可帮你便捷地制作影院级 2D、3D 和 360° 字幕，流畅的转场，以及逼真的实时特效。</td>
<td>收费</td>
<td><a href="https://www.apple.com/cn/final-cut-pro/motion/" target="_blank" rel="external">Motion 5 - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/cn/app/motion/id434290957?mt=12" target="_blank" rel="external">‎Motion on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-compressor.png" width="200" height:auto="" alt="20180715-macOS-compressor.png"></td>
<td>Compressor</td>
<td>强大的编码，传输，完成。Compressor 与 Final Cut Pro 紧密整合，带来了自定义输出设置、分布式编码和丰富的传输功能。它支持 360° 全景视频、HDR、HEVC 和 MXF 输出，让你能以强大、灵活的方式导出 Final Cut Pro 项目。</td>
<td>收费</td>
<td><a href="https://www.apple.com/cn/final-cut-pro/compressor/" target="_blank" rel="external">Final Cut Pro X - Compressor 4 - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/cn/app/compressor/id424390742?l=en&amp;mt=12" target="_blank" rel="external">‎Compressor on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-LogicProX.png" width="200" height:auto="" alt="20180715-macOS-LogicProX.png"></td>
<td>Logic Pro X</td>
<td>Logic Pro X 制作的动力十足， 创作的十足强音。</td>
<td>收费</td>
<td><a href="https://www.apple.com/cn/logic-pro/" target="_blank" rel="external">Logic Pro X - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/cn/app/logic-pro-x/id634148309?l=en&amp;mt=12" target="_blank" rel="external">‎Logic Pro X on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MainStage_3.png" width="200" height:auto="" alt="20180715-macOS-MainStage_3.png"></td>
<td>MainStage</td>
<td>MainStage 3 舞台音效，媲美录音室效果。现在，将你的 Mac 变身现场演出装备。凭借不计其数的各种插件和音效选择，你可以让键盘、吉他或演唱表现令观众耳目一新，难以忘怀。</td>
<td>收费</td>
<td><a href="https://www.apple.com/cn/mainstage/" target="_blank" rel="external">Logic Pro X - MainStage 3 - 将你的 Mac 变身现场演出装备 - Apple (中国)</a></td>
<td><a href="https://itunes.apple.com/cn/app/mainstage-3/id634159523?l=en&amp;mt=12" target="_blank" rel="external">‎MainStage 3 on the Mac App Store</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h3 id="通讯">通讯</h3><p>交互，万物相联。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Telegram.png" width="200" height:auto="" alt="20180715-macOS-Telegram.png"></td>
<td>Telegram</td>
<td>Telegram是一个跨平台的即时通信软件，它的客户端是自由及开放源代码软件，但是它的服务器是专有软件。用户可以相互交换加密与自析构的消息，以及照片、视频、文件，支持所有的文件类型。</td>
<td>免费</td>
<td><a href="https://telegram.org" target="_blank" rel="external">Telegram Messenger</a></td>
<td><a href="https://itunes.apple.com/us/app/telegram/id747648890" target="_blank" rel="external">‎Telegram on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Weixin.png" width="200" height:auto="" alt="20180715-macOS-Weixin.png"></td>
<td>WeChat<br>（微信）</td>
<td>一款免费发短讯和打电话的一体化应用程式。</td>
<td>免费</td>
<td><a href="http://www.wechat.com" target="_blank" rel="external">WeChat - Free messaging and calling app</a></td>
<td><a href="https://itunes.apple.com/us/app/wechat/id836500024?mt=12" target="_blank" rel="external">‎WeChat on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-QQ.png" width="200" height:auto="" alt="20180715-macOS-QQ.png"></td>
<td>QQ</td>
<td>QQ</td>
<td>免费</td>
<td><a href="http://im.qq.com/qq/apple/mac/" target="_blank" rel="external">QQ Mac版-匠心之韵·清新聊人</a></td>
<td><a href="https://itunes.apple.com/us/app/qq/id451108668?mt=12" target="_blank" rel="external">‎QQ on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-TeamViewer.png" width="200" height:auto="" alt="20180715-macOS-TeamViewer.png"></td>
<td>TeamViewer</td>
<td>TeamViewer 基于最广泛的平台和技术，连接全世界的人、地区和事物。</td>
<td>免费/订阅</td>
<td><a href="https://www.teamviewer.com/zhcn/" target="_blank" rel="external">TeamViewer – 远程支持、远程访问、在线协作和会议</a></td>
<td><a href="https://www.teamviewer.com/zhcn/download/mac/" target="_blank" rel="external">macOS版TeamViewer下载</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-RemoteDesktopApp.png" width="200" height:auto="" alt="20180715-macOS-RemoteDesktopApp.png"></td>
<td>Apple Remote Desktop</td>
<td>Apple Remote Desktop 是管理你网络上的 Mac 电脑的最佳方式。分发软件，为终端用户提供实时在线帮助，创建详细的软硬件报告，自动执行常规的管理任务。</td>
<td>收费</td>
<td><a href="https://www.apple.com/remotedesktop/" target="_blank" rel="external">Remote Desktop - Apple</a></td>
<td><a href="https://itunes.apple.com/us/app/apple-remote-desktop/id409907375?mt=12" target="_blank" rel="external">‎Apple Remote Desktop on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Maipo.png" width="200" height:auto="" alt="20180715-macOS-Maipo.png"></td>
<td>Maipo</td>
<td>全功能新浪微博 macOS 客户端</td>
<td>免费</td>
<td><a href="http://weiboformac.sinaapp.com" target="_blank" rel="external">Maipo - 全功能新浪微博 macOS 客户端</a></td>
<td><a href="https://itunes.apple.com/us/app/maipo-for-weibo/id789066512?mt=12" target="_blank" rel="external">‎Maipo for Weibo on the Mac App Store</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h3 id="GTD">GTD</h3><p>时间，就是生命。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Things3.png" width="200" height:auto="" alt="20180715-macOS-Things3.png"></td>
<td>Things3</td>
<td>一款优秀的GTD任务管理工具。</td>
<td>收费</td>
<td><a href="https://culturedcode.com/things/" target="_blank" rel="external">The all-new Things. Your to-do list for Mac &amp; iOS</a></td>
<td><a href="https://itunes.apple.com/us/app/things-3/id904280696?mt=12" target="_blank" rel="external">‎Things 3 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Gestimer.png" width="200" height:auto="" alt="20180715-macOS-Gestimer.png"></td>
<td>Gestimer</td>
<td>简单方便的提醒创建小工具。</td>
<td>收费</td>
<td><a href="http://maddin.io/gestimer/" target="_blank" rel="external">Gestimer - For those little reminders during the day</a></td>
<td><a href="https://itunes.apple.com/us/app/gestimer/id990588172?mt=12" target="_blank" rel="external">‎Gestimer on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Pomodoro_Timer.png" width="200" height:auto="" alt="20180715-macOS-Pomodoro_Timer.png"></td>
<td>Pomodoro Timer</td>
<td>漂亮的番茄时钟。</td>
<td>免费</td>
<td><a href="http://www.cannonballhq.com" target="_blank" rel="external">Cannonball HQ</a></td>
<td><a href="http://macdownload.informer.com/pomodoro-timer/" target="_blank" rel="external">Pomodoro Timer for Mac, It helps you implement the Pomodoro technique in your daily activities.</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Tomato_One.png" width="200" height:auto="" alt="20180715-macOS-Tomato_One.png"></td>
<td>Tomato One</td>
<td>简洁的番茄时钟。</td>
<td>免费</td>
<td><a href="http://rinik.net/support" target="_blank" rel="external">Rinik Support</a></td>
<td><a href="https://itunes.apple.com/us/app/tomato-one-free-focus-timer/id907364780?mt=12" target="_blank" rel="external">‎Tomato One - Free Focus Timer on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-JustFocus.png" width="200" height:auto="" alt="20180715-macOS-JustFocus.png"></td>
<td>JustFocus</td>
<td>番茄时间，休息时间时显示漂亮的锁屏图片。</td>
<td>免费</td>
<td><a href="http://justinyan.me" target="_blank" rel="external">枫言枫语</a></td>
<td><a href="https://itunes.apple.com/us/app/just-focus/id1142151959?mt=12" target="_blank" rel="external">‎Just Focus on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Noizio.png" width="200" height:auto="" alt="20180715-macOS-Noizio.png"></td>
<td>Noizio</td>
<td>Noizio 是一款Mac OS X 下的白噪音应用，可以让自己觉着是坐在一个壁炉前、咖啡馆里、森林里，海边。可以让你忽略其他噪音，专注工作。</td>
<td>收费</td>
<td><a href="http://noiz.io" target="_blank" rel="external">Noizio – ambient sound equalizer for relax or productivity.</a></td>
<td><a href="https://itunes.apple.com/us/app/noizio/id928871589?mt=12" target="_blank" rel="external">‎Noizio on the Mac App Store</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="Learning">Learning</h4><p>学习，知识无涯。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-WWDC.png" width="200" height:auto="" alt="20180715-macOS-WWDC.png"></td>
<td>WWDC</td>
<td>开源免费的看WWDC视频的应用！</td>
<td>免费</td>
<td><a href="https://wwdc.io" target="_blank" rel="external">The unofficial WWDC app for macOS</a></td>
<td><a href="https://github.com/insidegui/WWDC/releases" target="_blank" rel="external">Releases · insidegui/WWDC</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Reeder.png" width="200" height:auto="" alt="20180715-macOS-Reeder.png"></td>
<td>Reeder</td>
<td>一款很好的RSS订阅应用。</td>
<td>收费</td>
<td><a href="http://reederapp.com" target="_blank" rel="external">★reeder</a></td>
<td><a href="https://itunes.apple.com/us/app/reeder-3/id880001334?mt=12" target="_blank" rel="external">‎Reeder 3 on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-English_Class.png" width="200" height:auto="" alt="20180715-macOS-English_Class.png"></td>
<td>English Class</td>
<td>This is a multifunctional instrument for improving and controlling English knowledge and skills.</td>
<td>收费</td>
<td><a href="http://academmedialabs.com" target="_blank" rel="external">Academ Media</a></td>
<td><a href="https://itunes.apple.com/sg/app/english-class-pro/id1038312994?mt=12" target="_blank" rel="external">‎English Class Pro on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-iBooksAppIcon.png" width="200" height:auto="" alt="20180715-macOS-iBooksAppIcon.png"></td>
<td>iBooks</td>
<td>macOS和iOS同步看书的原生体验很棒！</td>
<td>免费</td>
<td><a href="https://support.apple.com/zh-cn/ibooks" target="_blank" rel="external">iBooks - 官方 Apple 支持</a></td>
<td><a href="https://support.apple.com/zh-cn/ibooks" target="_blank" rel="external">iBooks - 官方 Apple 支持</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h4 id="Recreation（娱乐）">Recreation（娱乐）</h4><p>娱乐，消遣和放松。</p>
<table>
<thead>
<tr>
<th>App</th>
<th>名称</th>
<th>简介</th>
<th>价格</th>
<th>官网</th>
<th>下载</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-163Music.png" width="200" height:auto="" alt="20180715-macOS-163Music.png"></td>
<td>NeteaseMusic<br>（网易云音乐）</td>
<td>免费的音乐云盘赞！</td>
<td>免费</td>
<td><a href="https://music.163.com" target="_blank" rel="external">网易云音乐</a></td>
<td><a href="https://itunes.apple.com/cn/app/网易云音乐/id944848654?mt=12" target="_blank" rel="external">网易云音乐 on the ‎Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-Movist.png" width="200" height:auto="" alt="20180715-macOS-Movist.png"></td>
<td>Movist</td>
<td>Movist是Mac平台下一个全格式播放器,基于QuickTime &amp; FFmpeg,您可以选择由QuickTime 还是 FFmpeg来解码播放,支持.avi、.mkv、.wmv、flv、rmvb等格式。</td>
<td>收费</td>
<td><a href="http://cocoable.com" target="_blank" rel="external">cocoable.com</a></td>
<td><a href="https://itunes.apple.com/us/app/movist/id461788075?mt=12" target="_blank" rel="external">‎Movist on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-MPlayerX.png" width="200" height:auto="" alt="20180715-macOS-MPlayerX.png"></td>
<td>MPlayerX</td>
<td>MPlayerX是MAC上的一款使用简单方便的视频播放器，基于FFmpeg 和 Mplayer 开发。界面简洁明了，支持多种格式，包括RMVB、AVI、WMV、MKV等常用视频格式，也支持SRT、ASS等字幕格式。</td>
<td>收费</td>
<td><a href="http://mplayerx.org" target="_blank" rel="external">MPlayerX</a></td>
<td><a href="https://itunes.apple.com/us/app/mplayerx/id421131143?mt=12" target="_blank" rel="external">‎MPlayerX on the Mac App Store</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-VLC.png" width="200" height:auto="" alt="20180715-macOS-VLC.png"></td>
<td>VLC</td>
<td>VLC 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。</td>
<td>免费</td>
<td><a href="http://www.videolan.org/vlc/" target="_blank" rel="external">VLC media player, the best Open Source player - VideoLAN</a></td>
<td><a href="http://www.videolan.org/vlc/" target="_blank" rel="external">Official download of VLC</a></td>
</tr>
<tr>
<td><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180715-macOS-IINA.png" width="200" height:auto="" alt="20180715-macOS-IINA.png"></td>
<td>IINA</td>
<td>macOS 上好的现代视频播放器。</td>
<td>免费</td>
<td><a href="https://github.com/lhc70000/iina" target="_blank" rel="external">lhc70000/iina: The modern video player for macOS.</a></td>
<td><a href="https://github.com/lhc70000/iina/releases" target="_blank" rel="external">Releases · lhc70000/iina</a></td>
</tr>
</tbody>
</table>
<p><br><br><br></p>
<h3 id="总结">总结</h3><p>没想到想总结好全部App，最后发现太多软件了，已经上百个应用啦，想写的详细点发现没有时间，所以将就先这样吧，有时候在回来。</p>
<ul>
<li><p>精选<br>为什么说这些软件是精选，因为在macOS上，好的应用很多，所以精选也很多。列举的每个应用，其实都可以单独写一篇长文，还是计划以后有时间在写写。大家也可以自行搜索教程学习，建议喜欢的应用就要早点熟悉！你一定会发现“惊-喜”！如果你有好的应用，不要独享，也欢迎留言推荐，谢谢！</p>
</li>
<li><p>收费<br>为什么这软件收费？其实，我想说，换一个角度，【这软件收费有什么突出的优点？】收费并专业的软件，都有它强大或突出的优势！正因为喜欢软件的这优点，自己也入手了 Final Cut Pro，希望自己有时间可以做一些优美的视频~ 我想表达的不是土豪，或炫富，只是希望大家有能力，或者表达到软件的喜欢。算了，不说这些。好的软件，真的做的很好，非常敬佩！</p>
</li>
<li><p>下载<br>本文优先显示Mac App Store下载的链接，因为在AppStore不限制下载次数，也就是不限制安装的设备数量，并且，在新电脑直接安装就可以，非常的方便！！！</p>
</li>
</ul>
<h3 id="参考">参考</h3><ul>
<li><a href="https://zh.wikipedia.org/wiki/Wikipedia:首页" target="_blank" rel="external">维基百科</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最近打算写《程序员的macOS系列》文章，总结一下自己程序员几年的macOS系统使用，本文是《程序员的macOS系列》的第一篇精选Mac App，介绍一下程序员macOS的应用，所以这系列文章是指向于程序员，可能会偏向iOS开发，尽量写大全吧。也有很多在总结了相关的文档，这里是一个程序员系列的，注意定位就好。</p>
<ul>
<li><a href="https://ihtcboy.com/2018/07/15/2018-07-15_程序员的macOS系列：精选MacApp/">程序员的macOS系列：精选Mac App</a></li>
<li>程序员的macOS系列：Mac开发环境配置</li>
<li>程序员的macOS系列：高效Alfred进阶</li>
</ul>
<p>目前计划写《程序员的macOS系列》这三篇，后续有想法在增加吧~</p>]]>
    
    </summary>
    
      <category term="Mac" scheme="https://iHTCboy.com/tags/Mac/"/>
    
      <category term="MacApp" scheme="https://iHTCboy.com/tags/MacApp/"/>
    
      <category term="macOS" scheme="https://iHTCboy.com/tags/macOS/"/>
    
      <category term="程序员的macOS" scheme="https://iHTCboy.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[(译)一个完整的Django入门指南---第7部分]]></title>
    <link href="https://iHTCboy.com/2018/07/14/2018-07-14_%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84Django%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97---%E7%AC%AC7%E9%83%A8%E5%88%86/"/>
    <id>https://iHTCboy.com/2018/07/14/2018-07-14_一个完整的Django入门指南---第7部分/</id>
    <published>2018-07-14T10:49:16.000Z</published>
    <updated>2018-07-18T14:56:14.237Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>本篇文章是翻译 <a href="https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/" target="_blank" rel="external">A Complete Beginner’s Guide to Django</a> 系列的最后一篇文章 <a href="https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html" target="_blank" rel="external">A Complete Beginner’s Guide to Django - Part 7</a>，因为搜索找了很久都没有找到对应的中文翻译篇（如果有，就是我没有找到…），又因为这个系列真的非常的好，简单，容易，非常适配入门，所以就打算自已试试翻译，也当是自己学习入门的一步吧！</p>
<a id="more"></a>
<h3 id="简介（Introduction）">简介（Introduction）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-A-Complete-Beginner&#39;s-Guide-to-Django-Part7.jpg" alt="20180714-A-Complete-Beginner&#39;s-Guide-to-Django-Part7.jpg"></p>
<p>欢迎来到我们教程系列的最后一部分！这篇文章，我们将把Django应用程序部署到生产服务器。我们还将为我们的服务器配置Email服务和HTTPS证书。</p>
<p>首先，我想到了给一个使用虚拟专用服务器（VPS）的例子，它更通用，然后使用一个平台比如 Heroku 服务。但它我写得太详细了，所以本教程我最终偏向关于VPS的内容。</p>
<p>我们的项目已经上线啦！您可以在阅读本文之前点击在线查看，这是我们本文要部署的应用程序：<a href="https://www.djangoboards.com" target="_blank" rel="external">www.djangoboards.com</a>。</p>
<h3 id="版本控制（Version_Control）">版本控制（Version Control）</h3><p>版本控制是软件开发中非常重要的话题。特别是在团队开发中同时开发多个功能，并一起维护项目代码时。无论是一个开发人员项目还是多个开发人员项目，每个项目都应该使用版本控制。</p>
<p>版本控制系统有几种选择。也许是因为GitHub的流行，Git 成为版本控制的实际标准。所以如果你不熟悉版本控制，Git是一个很好的入门起点。一般有很多相关的教程，课程和资源，因此遇到问题很容易找到帮助。</p>
<p>GitHub和Code School有一个<a href="https://try.github.io/" target="_blank" rel="external">关于Git的很棒的互动教程</a>，这是一个非常好的介绍Git的网站。几年前我就开始从SVN转到Git。</p>
<p>这是一个非常重要的话题，我其实应该从第一个教程开始讲Git。但事实是我希望本教程系列的重点放在Django上。如果Git这东西对您来说都是新的，请不要担心。一步一步入门是很重要的。也许你的第一个项目并不完美。重要的是要坚持学习和慢慢提高你的技能，但要有恒心！</p>
<p>关于Git的一个非常好的事情是它不仅仅是一个版本控制系统。围绕它建立了丰富的工具和服务生态系统。一些很好的例子比如持续集成、部署、代码审查、代码质量和项目管理。</p>
<p>使用Git来支持Django项目的部署过程非常有用。这是从源代码存储库中拉取最新版本或在出现问题时回滚到特定版本的便捷方式。有许多服务使用Git来集成，以便执行自动化测试和部署。</p>
<p>如果您没有在本地计算机上安装Git，请从 <a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a> 下载和安装。</p>
<h4 id="Git_基本配置（Basic_Setup）">Git 基本配置（Basic Setup）</h4><p>首先，设置你电脑的Git身份：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#34;Vitor Freitas&#34;&#10;git config --global user.email vitor@simpleisbetterthancomplex.com</span><br></pre></td></tr></table></figure>
<p>译者注：</p>
<ul>
<li>git config –global user.name “xxx”: 设置git操作者名称</li>
<li>git config –global user.email “email” 设置git操作者邮箱<br>这2个配置的名字和邮箱，会记录在git操作记录中。</li>
</ul>
<p>在项目根目录（与<strong>manage.py</strong>相同的目录）中，初始化一个git存储库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Initialized empty Git repository in <span class="regexp">/Users/</span>vitorfs<span class="regexp">/Development/my</span><span class="keyword">project</span><span class="regexp">/.git/</span></span><br></pre></td></tr></table></figure>
<p>检查存储库的状态：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">On branch master&#10;&#10;Initial commit&#10;&#10;Untracked files:&#10;  (use &#34;git add &#60;file&#62;...&#34; to include in what will be committed)&#10;&#10;  accounts/&#10;  boards/&#10;  manage.py&#10;  myproject/&#10;  requirements.txt&#10;  static/&#10;  templates/&#10;&#10;nothing added to commit but untracked files present (use &#34;git add&#34; to track)</span><br></pre></td></tr></table></figure>
<p>在继续添加源文件之前，请在项目根目录中创建名为<strong>.gitignore</strong>的新文件。这个特殊的文件将帮助我们保持Git仓库的干净，保证缓存文件或日志这样的不必要的文件不会添加到Git仓库中。</p>
<p>您可以从 GitHub 获取 <a href="https://github.com/github/gitignore/blob/master/Python.gitignore" target="_blank" rel="external">Python项目的通用.gitignore文件</a>。</p>
<p>确保将它从 <strong>Python.gitignore</strong> 重命名为 <strong>.gitignore</strong>（点很重要！）。</p>
<p>您可以补充 <strong>.gitignore</strong> 文件内容，告诉它(Git)忽略SQLite数据库文件，例如：</p>
<p><strong>.gitignore</strong>  文件内容：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__pycache__/&#10;*.py[cod]&#10;.env&#10;venv/&#10;&#10;SQLite database files&#10;*.sqlite3</span><br></pre></td></tr></table></figure>
<p>现在将文件添加到存储库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>请注意上面<code>add</code>后面有一个点。上面的命令告诉Git 在当前目录中添加所有未跟踪的文件。（译者注，点表示所有，整句就表示添加所以文件到Git，除了.gitignore文件列出的要忽略。）</p>
<p>现在进行第一次提交：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#34;Initial commit&#34;</span><br></pre></td></tr></table></figure>
<p>一定要写一个注释说明这个提交是什么，简要描述你改变了什么。</p>
<h4 id="Git_远程仓库（Remote_Repository）">Git 远程仓库（Remote Repository）</h4><p>现在让我们将 <a href="https://github.com/" target="_blank" rel="external">GitHub</a> 设置为远程仓库。首先，在GitHub上创建一个免费帐户，然后在电子邮件中点击GitHub发来的验证链接确认您的电子邮件地址。然后您就能在GitHub上创建公开仓库（译者注：GitHub公开仓库是免费的，私有仓库收费。）。</p>
<p>现在，只需为仓库创建一个名称，不要勾选使用自述文件初始化它（initialize this repository with a README），也不要添加 <code>Add .gitignore</code> 或添加 <code>Add a license</code> 许可证。确保仓库开始为空：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-GitHub-Create-Repository.png" alt="20180714-GitHub-Create-Repository.png"></p>
<p>创建仓库后，您应该看到如下内容：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-GitHub-Repository.png" alt="20180714-GitHub-Repository.png"></p>
<p>现在让我们将其配置为我们的远程仓库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:sibtc/django-boards.git</span><br></pre></td></tr></table></figure>
<p>现在将代码推送到远程服务器，即GitHub仓库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master&#10;&#10;Counting objects: 84, done.&#10;Delta compression using up to 4 threads.&#10;Compressing objects: 100% (81/81), done.&#10;Writing objects: 100% (84/84), 319.70 KiB | 0 bytes/s, done.&#10;Total 84 (delta 10), reused 0 (delta 0)&#10;remote: Resolving deltas: 100% (10/10), done.&#10;To git@github.com:sibtc/django-boards.git&#10; * [new branch]      master -&#62; master</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-GitHub-Initial-Commit.png" alt="20180714-GitHub-Initial-Commit.png"></p>
<p>我创建此仓库只是为了演示使用现有代码库创建远程仓库的过程。该项目的源代码正式托管在此仓库中：<a href="https://github.com/sibtc/django-beginners-guide" target="_blank" rel="external">https://github.com/sibtc/django-beginners-guide</a>。</p>
<h3 id="项目配置（Project_Settings）">项目配置（Project Settings）</h3><p>无论代码是存储在公共或私有远程仓库中，都不应提交敏感信息并将其推送到远程仓库。这包括密钥，密码，API密钥等。</p>
<p>此时，我们必须在 <strong>settings.py</strong> 模块中处理两种特定类型的配置：</p>
<ul>
<li>密钥和密码等敏感信息;</li>
<li>针对特定的环境配置。</li>
</ul>
<p>密码和密钥可以存储在环境变量中或使用本地文件（未提交到远程仓库）：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># environment variables</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">SECRET_KEY = os.environ[<span class="string">'SECRET_KEY'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># or local files</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'/etc/secret_key.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    SECRET_KEY = f.read().strip()</span><br></pre></td></tr></table></figure>
<p>为此， 我在我开发的每个Django项目中都使用了一个名为 <a href="https://simpleisbetterthancomplex.com/2015/11/26/package-of-the-week-python-decouple.html" target="_blank" rel="external">Python Decouple</a> 的优秀实用功能库。它将搜索名为 <strong>.env</strong> 的本地文件以设置这配置变量，并将内容配置到环境变量。它还提供了一个定义默认值的接口，在适当时将数据转换为<strong>int</strong>，<strong>bool</strong>和<strong>list</strong>。</p>
<p>这不是强制性的，但我真的觉得它是一个非常有用的工具。它像Heroku这样的服务一样有魅力。</p>
<p>首先，让我们安装它：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-decouple</span><br></pre></td></tr></table></figure>
<p><strong>myproject/settings.py</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> decouple <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">SECRET_KEY = config(<span class="string">'SECRET_KEY'</span>)</span><br></pre></td></tr></table></figure>
<p>现在，我们可以将敏感信息放在一个名为<strong>.env</strong>的特殊文件中（注意前面的点），该文件位于<strong>manage.py</strong>文件所在的目录中：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">myproject/</span><br><span class="line"> |<span class="string">-- myproject/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- accounts/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- boards/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- myproject/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- static/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- templates/</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- .env        &lt;-- here!</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- .gitignore</span><br><span class="line"> </span>|<span class="string">    </span>|<span class="string">-- db.sqlite3</span><br><span class="line"> </span>|<span class="string">    +-- manage.py</span><br><span class="line"> +-- venv/</span></span><br></pre></td></tr></table></figure>
<p><strong>.env</strong> 文件内容：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=rqr_cjv4igscyu8&amp;&amp;(<span class="number">0</span>ce(=sy=f2)p=f_wn&amp;@<span class="number">0</span>xsp7m$@!kp=d</span><br></pre></td></tr></table></figure>
<p>该<strong>.ENV</strong>文件中忽略的<strong>.gitignore</strong>文件，所以每次我们要部署应用程序或在不同的机器上运行时，我们将创建一个<strong>.ENV</strong>文件，并添加必要的配置。</p>
<p>现在让我们安装另一个库来帮助我们用简单一行代码来编写数据库连接。这样，在不同的环境中编写不同的数据库连接字符串会更容易：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install dj-database-url</span><br></pre></td></tr></table></figure>
<p>目前，我们需要解耦的全部配置：</p>
<p><strong>myproject/settings.py</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> decouple <span class="keyword">import</span> config, Csv</span><br><span class="line"><span class="keyword">import</span> dj_database_url</span><br><span class="line"></span><br><span class="line">SECRET_KEY = config(<span class="string">'SECRET_KEY'</span>)</span><br><span class="line">DEBUG = config(<span class="string">'DEBUG'</span>, default=<span class="keyword">False</span>, cast=bool)</span><br><span class="line">ALLOWED_HOSTS = config(<span class="string">'ALLOWED_HOSTS'</span>, cast=Csv())</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: dj_database_url.config(</span><br><span class="line">        default=config(<span class="string">'DATABASE_URL'</span>)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>本地计算机的<strong>.env</strong>文件示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=rqr_cjv4igscyu8&amp;&amp;(<span class="number">0</span>ce(=sy=f2)p=f_wn&amp;@<span class="number">0</span>xsp7m$@!kp=d</span><br><span class="line">DEBUG=<span class="keyword">True</span></span><br><span class="line">ALLOWED_HOSTS=.localhost,<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
<p>请注意，在<strong>DEBUG</strong>配置中我们给了一个默认值(True)，因此在生产环境中我们可以忽略（注释）此配置，因此它将被自动设置为<strong>False</strong>，因为它生产环境应该是False的。</p>
<p>现在<strong>ALLOWED_HOSTS</strong>将被转换成一个列表<strong>[‘.localhost’, ‘127.0.0.1’. ]</strong>。现在，这是在我们的本地机器上，为了生产，我们将其设置为类似于<strong>[‘.djangoboards.com’, ]</strong>您拥有的任何域名。</p>
<p>这特定配置可确保您的应用程序仅提供给这个域名。</p>
<h3 id="记录依赖库版本（Tracking_Requirements）">记录依赖库版本（Tracking Requirements）</h3><p>跟踪项目的依赖关系是一个很好的做法，因此另一台机器上更容易安装它(依赖的环境)。</p>
<p>我们可以通过运行下面的命令来检查当前安装的Python依赖库：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip freeze</span><br><span class="line"></span><br><span class="line">dj-database-url==<span class="number">0.4</span><span class="number">.2</span></span><br><span class="line">Django==<span class="number">1.11</span><span class="number">.6</span></span><br><span class="line">django-widget-tweaks==<span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">Markdown==<span class="number">2.6</span><span class="number">.9</span></span><br><span class="line">python-decouple==<span class="number">3.1</span></span><br><span class="line">pytz==<span class="number">2017.2</span></span><br></pre></td></tr></table></figure>
<p>在项目根目录中创建名为<strong>requirements.txt</strong>的文件，并在其中添加依赖项(就是上面 <code>pip freeze</code>得到的项目所有的依赖库)：</p>
<p><strong>requirements.txt</strong>  文件内容：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dj-database-url==<span class="number">0.4</span><span class="number">.2</span></span><br><span class="line">Django==<span class="number">1.11</span><span class="number">.6</span></span><br><span class="line">django-widget-tweaks==<span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">Markdown==<span class="number">2.6</span><span class="number">.9</span></span><br><span class="line">python-decouple==<span class="number">3.1</span></span><br></pre></td></tr></table></figure>
<p>我保留了<strong>pytz == 2017.2</strong>，因为它是由Django自动安装的。</p>
<p>您可以更新源代码仓库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .&#10;git commit -m &#34;Add requirements.txt file&#34;&#10;git push origin master</span><br></pre></td></tr></table></figure>
<h3 id="域名（Domain_Name）">域名（Domain Name）</h3><p>如果我们要正确部署Django应用程序，我们将需要一个域名（译者注：如果部署外网，给别人使用需要域名，但如果是内网使用，只有IP地址也可以访问。此处，作者意思要处理上线外网。）。拥有域名来为应用程序提供服务，配置电子邮件服务和配置https证书非常重要。</p>
<p>最近，我一直在使用 <a href="https://namecheap.pxf.io/c/477033/386170/5618" target="_blank" rel="external">Namecheap</a> 。您可以以8.88美元/年的价格获得.com域名，或者如果您只是尝试一下，您可以用 0.99美元/年 的价格注册.xyz域名。（译者注：在中国，可以注册阿里云、腾讯云等著名的注册商都有域名卖买，大家可自行搜索官网。）</p>
<p>无论如何，您可以自由使用任何注册商。为了演示部署过程，我注册了 <a href="https://www.djangoboards.com/" target="_blank" rel="external">www.DjangoBoards.com</a> 域名。</p>
<h3 id="部署策略（Deployment_Strategy）">部署策略（Deployment Strategy）</h3><p>以下是我们将在本教程中使用的部署策略的概述：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Django-Deployment-Strategy.jpg" alt="20180714-Django-Deployment-Strategy.jpg"></p>
<p>云服务是使用 <a href="https://m.do.co/c/074832454ff1" target="_blank" rel="external">Digital Ocean</a> 提供的虚拟专用服务器。您可以使用我的会员链接注册Digital Ocean以获得 <a href="https://m.do.co/c/074832454ff1" target="_blank" rel="external">免费的10美元信用额度</a>（仅适用于新帐户）。（译者注：云服务商在中国可选择阿里云、腾讯云）</p>
<p>首先我们将使用 <strong><a href="https://www.nginx.com/" target="_blank" rel="external">NGINX</a></strong>（译者注：Nginx是一个异步框架的 Web服务器，通常作为负载均衡器。），其商标是食人魔。NGINX将收到访问者对服务器的所有请求。但如果请求数据，它不会尝试做任何不聪明的事情（译者注：Nginx主要负责处理请求，并分发给文件系统或HTTP服务器等。）。它所要做的就是确定所请求的信息是否是一个可以自行提供的静态资源，或者它是否更复杂。如果是，它会将请求传递给 <strong><a href="http://gunicorn.org/" target="_blank" rel="external">Gunicorn</a></strong>（译者注：Gunicorn“绿色独角兽”是一个被广泛使用的高性能的Python WSGI UNIX HTTP服务器，移植自Ruby的独角兽（Unicorn ）项目,使用pre-fork worker模式，具有使用非常简单，轻量级的资源消耗，以及高性能等特点。）。</p>
<p>NGINX 还将配置 HTTPS证书。这意味着它只接受通过HTTPS的请求。如果客户端尝试通过HTTP请求，NGINX将首先将用户重定向到HTTPS，然后它才会决定如何处理请求链接。</p>
<p>我们还将安装此 <strong><a href="https://certbot.eff.org/" target="_blank" rel="external">certbot</a></strong> 以自动续订 <strong><a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a></strong> 的证书。（译者注：想了解更多内容，可阅读<a href="https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/" target="_blank" rel="external">HTTPS 简介及使用官方工具 Certbot 配置 Let’s Encrypt SSL 安全证书详细教程 | Linux Story</a>。）</p>
<p>Gunicorn是一个应用服务器。根据服务器拥有的CPU处理器数量，它可以通过生成多个同时工作的程序以并行处理多个请求。它管理工作负载并执行Python和Django代码。</p>
<p>Django是一个努力工作的代表。它可以访问数据库（PostgreSQL）或文件系统。但在大多数情况下，工作是在视图内部完成，渲染模板，以及过去几周我们编写过的所有内容。在Django处理请求之后，它会向Gunicorn返回一个响应，他将结果返回给NGINX，最终将响应传递给客户端。</p>
<p>我们还将安装<strong><a href="https://www.postgresql.org/" target="_blank" rel="external">PostgreSQL</a></strong>，一个优秀的数据库系统。由于Django的ORM系统，很容易切换数据库。（译者注：PostgreSQL被业界誉为“最先进的开源数据库”，面向企业复杂SQL处理的OLTP在线事务处理场景，支持NoSQL数据类型（JSON/XML/hstore）、支持GIS地理信息处理。）</p>
<p>最后一步是安装<strong><a href="http://supervisord.org/" target="_blank" rel="external">Supervisor</a></strong>。它是一个过程控制系统，它将密切关注Gunicorn和Django，以确保一切顺利进行。如果服务器重新启动，或者Gunicorn崩溃，它将自动重启。（译者注：Supervisor是一个Python开发的client/server系统，可以管理和监控*nix上面的进程的工具。）</p>
<h3 id="部署到VPS（Digital_Ocean）（Deploying_to_a_VPS_(Digital_Ocean)）">部署到VPS（Digital Ocean）（Deploying to a VPS (Digital Ocean)）</h3><p>您可以使用您喜欢的任何其他VPS（虚拟专用服务器）。配置应该非常相似，毕竟我们将使用Ubuntu 16.04 作为我们的服务器。</p>
<p>首先，让我们创建一个新的服务器（在Digital Ocean上，他们称之为“Droplet”）。选择Ubuntu 16.04：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Digital-Ocean-Create-Droplets.png" alt="20180714-Digital-Ocean-Create-Droplets.png"></p>
<p>选择尺寸。最小的空间就足够了：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Digital-Ocean-Create-Droplets-Choose-Size.png" alt="20180714-Digital-Ocean-Create-Droplets-Choose-Size.png"></p>
<p>然后为您的Droplet选择一个主机名（在我的例子为“django-boards”）：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Digital-Ocean-Create-Droplets-Choose-Hostname.png" alt="20180714-Digital-Ocean-Create-Droplets-Choose-Hostname.png"></p>
<p>如果您有SSH密钥，则可以将其添加到您的帐户。然后，您将能够使用它登录服务器。否则，他们会通过电子邮件向您发送root密码。(译者注：SSH密钥可以不用输入密码就链接到服务器，具体可自行搜索了解更多。)</p>
<p>现在选择服务器的IP地址：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Digital-Ocean-Choose-IPaddress.png" alt="20180714-Digital-Ocean-Choose-IPaddress.png"></p>
<p>在我们登录服务器之前，让我们将域名指向此IP地址。这将节省一些时间，因为DNS设置通常需要几分钟才能传播。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Digital-Ocean-Add-DNS-Record.png" alt="20180714-Digital-Ocean-Add-DNS-Record.png"></p>
<p>所以这里我们添加了两条A记录，一条指向主域名“djangoboards.com”，另一条指向“www.djangoboards.com”。我们将使用NGINX配置规范URL。</p>
<p>现在让我们使用终端登录服务器：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="number">45.55</span>.<span class="number">144.54</span></span><br><span class="line">root@<span class="number">45.55</span>.<span class="number">144.54</span><span class="string">'s password:</span></span><br></pre></td></tr></table></figure>
<p>然后你应该看到以下消息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">You are required to change your password immediately (root enforced)</span><br><span class="line">Welcome to Ubuntu <span class="number">16.04</span>.<span class="number">3</span> LTS (GNU/Linux <span class="number">4.4</span>.<span class="number">0</span>-<span class="number">93</span>-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  Get cloud support with Ubuntu Advantage Cloud Guest:</span><br><span class="line">    http://www.ubuntu.com/business/services/cloud</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> packages can be updated.</span><br><span class="line"><span class="number">0</span> updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Sun Oct <span class="number">15</span> <span class="number">18</span>:<span class="number">39</span>:<span class="number">21</span> <span class="number">2017</span> from <span class="number">82.128</span>.<span class="number">188.51</span></span><br><span class="line">Changing password <span class="keyword">for</span> root.</span><br><span class="line">(current) UNIX password:</span><br></pre></td></tr></table></figure>
<p>设置新密码，然后开始配置服务器。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure>
<p>如果在升级过程中收到任何提示，请选择”keep the local version currently installed”(保持当前安装的本地版本)选项。</p>
<p><strong>Python 3.6</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python3.<span class="number">6</span></span><br></pre></td></tr></table></figure>
<p><strong>PostgreSQL</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install postgresql postgresql-contrib</span><br></pre></td></tr></table></figure>
<p><strong>NGINX</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install nginx</span><br></pre></td></tr></table></figure>
<p><strong>Supervisor</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install supervisor</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> supervisor</span><br><span class="line">sudo systemctl start supervisor</span><br></pre></td></tr></table></figure>
<p><strong>Virtualenv</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo python3.<span class="number">6</span> get-pip.py</span><br><span class="line">sudo pip3.<span class="number">6</span> install virtualenv</span><br></pre></td></tr></table></figure>
<h4 id="应用用户（Application_User）">应用用户（Application User）</h4><p>使用以下命令创建新用户：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser boards</span><br></pre></td></tr></table></figure>
<p>通常，我只选择应用程序的名称。输入密码，并可选择在提示中添加一些额外信息。</p>
<p>现在将用户添加到sudoers列表：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpasswd <span class="operator">-a</span> boards sudo</span><br></pre></td></tr></table></figure>
<h4 id="PostgreSQL数据库配置（PostgreSQL_Database_Setup）"><strong>PostgreSQL</strong>数据库配置（<strong>PostgreSQL</strong> Database Setup）</h4><p>首先切换到postgres用户：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - postgres</span><br></pre></td></tr></table></figure>
<p>创建数据库用户：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createuser u_boards</span><br></pre></td></tr></table></figure>
<p>创建一个新数据库并将用户设置为所有者：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createdb django_boards <span class="comment">--owner u_boards</span></span><br></pre></td></tr></table></figure>
<p>为用户定义一个强密码：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -c "<span class="operator"><span class="keyword">ALTER</span> <span class="keyword">USER</span> u_boards <span class="keyword">WITH</span> <span class="keyword">PASSWORD</span> <span class="string">'BcAZoYWsJbvE7RMgBPzxOCexPRVAq'</span><span class="string">"</span></span></span><br></pre></td></tr></table></figure>
<p>我们现在可以退出postgres用户了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h4 id="Django项目配置（Django_Project_Setup）">Django项目配置（Django Project Setup）</h4><p>切换到应用程序用户：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - boards</span><br></pre></td></tr></table></figure>
<p>开始前，我们先检查终端的位置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">/home/boards</span><br></pre></td></tr></table></figure>
<p>首先，让我们用我们的代码克隆存储库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/sibtc/django-beginners-guide.git</span><br></pre></td></tr></table></figure>
<p>启动虚拟环境(virtualenv)：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv -p python3<span class="number">.6</span></span><br></pre></td></tr></table></figure>
<p>初始化virtualenv：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source venv/bin/activate</span><br></pre></td></tr></table></figure>
<p>安装依赖的库（译者注：从文件中读取依赖进行安装。）：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r django-beginners-guide/requirements.txt</span><br></pre></td></tr></table></figure>
<p>我们再添加两个额外的库，Gunicorn和PostgreSQL驱动程序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install gunicorn</span><br><span class="line">pip install psycopg2</span><br></pre></td></tr></table></figure>
<p>现在在<strong>/home/boards/django-beginners-guide</strong>文件夹中，让我们创建一个<strong>.env</strong>文件来存储数据库凭据，密钥和其他所有内容：</p>
<p><strong>/home/boards/django-beginners-guide/.env</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=rqr_cjv4igscyu8&amp;&amp;(<span class="number">0</span>ce(=sy=f2)p=f_wn&amp;@<span class="number">0</span>xsp7m<span class="variable">$@</span>!kp=d</span><br><span class="line">ALLOWED_HOSTS=.djangoboards.com</span><br><span class="line">DATABASE_URL=postgres://u_boards:BcAZoYWsJbvE7RMgBPzxOCexPRVAq@localhost:<span class="number">5432</span>/django_boards</span><br></pre></td></tr></table></figure>
<p>以下是数据库URL的语法：postgres://<code>db_user</code>:<code>db_password</code>@<code>db_host</code>:<code>db_port</code>/<code>db_name</code>。</p>
<p>现在让我们迁移数据库，收集静态文件并创建一个超级用户：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> django-beginners-guide</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, boards, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying auth<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0002</span>_logentry_remove_auto_add... OK</span><br><span class="line">  Applying contenttypes<span class="number">.0002</span>_remove_content_type_name... OK</span><br><span class="line">  Applying auth<span class="number">.0002</span>_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0003</span>_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0004</span>_alter_user_username_opts... OK</span><br><span class="line">  Applying auth<span class="number">.0005</span>_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth<span class="number">.0006</span>_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth<span class="number">.0007</span>_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth<span class="number">.0008</span>_alter_user_username_max_length... OK</span><br><span class="line">  Applying boards<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying boards<span class="number">.0002</span>_auto_20170917_1618... OK</span><br><span class="line">  Applying boards<span class="number">.0003</span>_topic_views... OK</span><br><span class="line">  Applying sessions<span class="number">.0001</span>_initial... OK</span><br></pre></td></tr></table></figure>
<p>现在静态文件：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br><span class="line"></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/js/jquery-3.2.1.min.js'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/js/popper.min.js'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/js/bootstrap.min.js'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/js/simplemde.min.js'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/css/app.css'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/css/bootstrap.min.css'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/css/accounts.css'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/css/simplemde.min.css'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/img/avatar.svg'</span></span><br><span class="line">Copying <span class="string">'/home/boards/django-beginners-guide/static/img/shattered.png'</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>此命令将所有静态资产复制到外部目录，NGINX可以在该目录中为我们提供文件。稍后会详细介绍。</p>
<p>现在为应用程序创建一个超级用户：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure>
<h4 id="配置Gunicorn（Configuring_Gunicorn）">配置Gunicorn（Configuring Gunicorn）</h4><p>Gunicorn是负责在代理服务器后面执行Django代码的工具。</p>
<p>在<strong>/home/boards</strong>中创建一个名为<strong>gunicorn_start</strong>的新文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span><br><span class="line"></span></span><br><span class="line">NAME=<span class="string">"django_boards"</span></span><br><span class="line">DIR=/home/boards/django-beginners-guide</span><br><span class="line">USER=boards</span><br><span class="line">GROUP=boards</span><br><span class="line">WORKERS=<span class="number">3</span></span><br><span class="line">BIND=unix:/home/boards/run/gunicorn.sock</span><br><span class="line">DJANGO_SETTINGS_MODULE=myproject.settings</span><br><span class="line">DJANGO_WSGI_MODULE=myproject.wsgi</span><br><span class="line">LOG_LEVEL=error</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">source</span> ../venv/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> DJANGO_SETTINGS_MODULE=<span class="variable">$DJANGO_SETTINGS_MODULE</span></span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$DIR</span>:<span class="variable">$PYTHONPATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> ../venv/bin/gunicorn <span class="variable">$&#123;DJANGO_WSGI_MODULE&#125;</span>:application \</span><br><span class="line">  --name <span class="variable">$NAME</span> \</span><br><span class="line">  --workers <span class="variable">$WORKERS</span> \</span><br><span class="line">  --user=<span class="variable">$USER</span> \</span><br><span class="line">  --group=<span class="variable">$GROUP</span> \</span><br><span class="line">  --bind=<span class="variable">$BIND</span> \</span><br><span class="line">  --log-level=<span class="variable">$LOG_LEVEL</span> \</span><br><span class="line">  --log-file=-</span><br></pre></td></tr></table></figure>
<p>此脚本将启动应用程序服务器。我们提供了一些信息，例如Django项目的位置，用于运行服务器的应用程序用户等等。</p>
<p>现在让这个文件可执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x gunicorn_start</span><br></pre></td></tr></table></figure>
<p>创建两个空文件夹，一个用于套接字文件，另一个用于存储日志：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir run logs</span><br></pre></td></tr></table></figure>
<p>现在<strong>/home/boards</strong>里面的目录结构应该是这样的：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">django-beginners-guide/</span><br><span class="line">gunicorn_start</span><br><span class="line">logs/</span><br><span class="line">run/</span><br><span class="line">staticfiles/</span><br><span class="line">venv/</span><br></pre></td></tr></table></figure>
<p>其中<strong>staticfiles</strong>文件夹由创建<strong>collectstatic</strong>命令。</p>
<h4 id="配置Supervisor（Configuring_Supervisor）">配置Supervisor（Configuring Supervisor）</h4><p>首先，在 <strong>/home/boards/logs/</strong> 文件夹中创建一个空的日志文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch logs/gunicorn.log</span><br></pre></td></tr></table></figure>
<p>现在创建一个新的supervisor文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/supervisor/conf.d/boards.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[program:boards]</span><br><span class="line"><span class="built_in">command</span>=/home/boards/gunicorn_start</span><br><span class="line">user=boards</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">redirect_stderr=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/home/boards/logs/gunicorn.log</span><br></pre></td></tr></table></figure>
<p>保存文件并运行以下命令：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">sudo</span> supervisorctl reread</span><br><span class="line">sudo supervisorctl update</span><br></pre></td></tr></table></figure></p>
<p>现在检查状态：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl status boards</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boards        RUNNING   pid <span class="number">308</span>, uptime <span class="number">0</span>:<span class="number">00</span>:<span class="number">07</span></span><br></pre></td></tr></table></figure>
<h4 id="配置NGINX（Configuring_NGINX）">配置NGINX（Configuring NGINX）</h4><p>下一步是设置NGINX服务器以提供静态文件并将请求传递给Gunicorn：</p>
<p>在 <strong>/etc/nginx/sites-available/</strong> 中添加一个名为<strong>boards</strong>的新配置文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">upstream app_server &#123;</span><br><span class="line">    server unix:/home/boards/run/gunicorn.sock fail_timeout=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name www.djangoboards.com;  <span class="comment"># here can also be the IP address of the server</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout <span class="number">5</span>;</span><br><span class="line">    client_max_body_size <span class="number">4</span>G;</span><br><span class="line"></span><br><span class="line">    access_<span class="built_in">log</span> /home/boards/logs/nginx-access.log;</span><br><span class="line">    error_<span class="built_in">log</span> /home/boards/logs/nginx-error.log;</span><br><span class="line"></span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        <span class="built_in">alias</span> /home/boards/staticfiles/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># checks for static file, if not found proxy to app</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> @proxy_to_app;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location @proxy_to_app &#123;</span><br><span class="line">      proxy_<span class="built_in">set</span>_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">      proxy_<span class="built_in">set</span>_header Host <span class="variable">$http_host</span>;</span><br><span class="line">      proxy_redirect off;</span><br><span class="line">      proxy_pass http://app_server;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建指向已启用站点的文件夹的引用链接：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln <span class="operator">-s</span> /etc/nginx/sites-available/boards /etc/nginx/sites-enabled/boards</span><br></pre></td></tr></table></figure>
<p>删除默认的NGINX网站：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure>
<p>重启NGINX服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure>
<p>此时，如果DNS已经生效，则可能通过URL www.djangoboards.com 访问该网站。</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-django-boards.png" alt="20180714-django-boards.png"></p>
<h3 id="配置电子邮件服务（Configuring_an_Email_Service）">配置电子邮件服务（Configuring an Email Service）</h3><p>入门使用的最佳选择之一是 <a href="https://www.mailgun.com/" target="_blank" rel="external">Mailgun</a>。它提供了一个非常可靠的免费计划，每月包含12,000封电子邮件。</p>
<p>注册一个免费帐户。然后按照步骤操作，这非常简单。您必须与您注册域名的服务一起使用。在我的例子中，它是 <a href="https://namecheap.pxf.io/c/477033/386170/5618" target="_blank" rel="external">Namecheap</a>。</p>
<p>点击添加域以向您的帐户添加新域。按照说明操作，确保使用 “mg.” 子域名：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-mailgun-add-domain.png" alt="20180714-mailgun-add-domain.png"></p>
<p>现在抓取第一组DNS记录，它是两个TXT记录：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-mailgun-add-NDS-Records.png" alt="20180714-mailgun-add-NDS-Records.png"></p>
<p>使用您的注册商提供的网络界面将其添加到您的域中：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-DNS-List-Add-mail-record.png" alt="20180714-DNS-List-Add-mail-record.png"></p>
<p>重复上述步骤，对MX记录做同样的事情：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-DNS-list-MX-record.png" alt="20180714-DNS-list-MX-record.png"></p>
<p>将它们添加到域中：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-DNS-list-add-MX-Record.png" alt="20180714-DNS-list-add-MX-Record.png"></p>
<p>现在这一步不是强制性的，但由于我们已经在这里，所以也配置一下：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Add-DNS-Records-For-Tracking.png" alt="20180714-Add-DNS-Records-For-Tracking.png"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-DNS-add-CNAME-Record.png" alt="20180714-DNS-add-CNAME-Record.png"></p>
<p>添加所有DNS记录后，单击“立即检查DNS记录”按钮：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Domain-Verfication-Check-DNS-Recodrds.png" alt="20180714-Domain-Verfication-Check-DNS-Recodrds.png"></p>
<p>现在我们需要有一些耐心。有时需要一段时间来验证DNS。</p>
<p>同时，我们可以配置应用程序以接收连接参数。</p>
<p><strong>myproject/settings.py</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_BACKEND = config(<span class="string">'EMAIL_BACKEND'</span>, default=<span class="string">'django.core.mail.backends.smtp.EmailBackend'</span>)</span><br><span class="line">EMAIL_HOST = config(<span class="string">'EMAIL_HOST'</span>, default=<span class="string">''</span>)</span><br><span class="line">EMAIL_PORT = config(<span class="string">'EMAIL_PORT'</span>, default=<span class="number">587</span>, cast=int)</span><br><span class="line">EMAIL_HOST_USER = config(<span class="string">'EMAIL_HOST_USER'</span>, default=<span class="string">''</span>)</span><br><span class="line">EMAIL_HOST_PASSWORD = config(<span class="string">'EMAIL_HOST_PASSWORD'</span>, default=<span class="string">''</span>)</span><br><span class="line">EMAIL_USE_TLS = config(<span class="string">'EMAIL_USE_TLS'</span>, default=<span class="keyword">True</span>, cast=bool)</span><br><span class="line"></span><br><span class="line">DEFAULT_FROM_EMAIL = <span class="string">'Django Boards &lt;noreply@djangoboards.com&gt;'</span></span><br><span class="line">EMAIL_SUBJECT_PREFIX = <span class="string">'[Django Boards] '</span></span><br></pre></td></tr></table></figure>
<p>然后，我的本地计算机<strong>.env</strong>文件将如下所示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=rqr_cjv4igscyu8&amp;&amp;(<span class="number">0</span>ce(=sy=f2)p=f_wn&amp;@<span class="number">0</span>xsp7m<span class="variable">$@</span>!kp=d</span><br><span class="line">DEBUG=True</span><br><span class="line">ALLOWED_HOSTS=.localhost,<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">DATABASE_URL=sqlite:///db.sqlite3</span><br><span class="line">EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend</span><br></pre></td></tr></table></figure>
<p>我的线上（云服务器）<strong>.env</strong>文件看起来像这样：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY=rqr_cjv4igscyu8&amp;&amp;(<span class="number">0</span>ce(=sy=f2)p=f_wn&amp;@<span class="number">0</span>xsp7m<span class="variable">$@</span>!kp=d</span><br><span class="line">ALLOWED_HOSTS=.djangoboards.com</span><br><span class="line">DATABASE_URL=postgres://u_boards:BcAZoYWsJbvE7RMgBPzxOCexPRVAq@localhost:<span class="number">5432</span>/django_boards</span><br><span class="line">EMAIL_HOST=smtp.mailgun.org</span><br><span class="line">EMAIL_HOST_USER=postmaster@mg.djangoboards.com</span><br><span class="line">EMAIL_HOST_PASSWORD=ED2vmrnGTM1Rdwlhazyhxxcd0F</span><br></pre></td></tr></table></figure>
<p>您可以在Mailgun 的<strong>the Domain Information</strong>（域信息）部分中找到您的凭据。</p>
<ul>
<li>EMAIL_HOST: SMTP Hostname（SMTP主机名）</li>
<li>EMAIL_HOST_USER: Default SMTP Login（默认SMTP登录）</li>
<li>EMAIL_HOST_PASSWORD: Default Password（默认密码）</li>
</ul>
<p>我们可以在线上服务器中测试新设置。在本地计算机上的<strong>settings.py</strong>文件中进行更改，将更改提交到远程仓库。然后，在服务器中拉出新代码并重新启动Gunicorn进程：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>使用电子邮件凭据编辑<strong>.env</strong>文件。</p>
<p>然后重启Gunicorn进程：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl restart boards</span><br></pre></td></tr></table></figure>
<p>现在我们可以尝试测试重置密码的邮件流程：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Email-Please-reset-your-password.png" alt="20180714-Email-Please-reset-your-password.png"></p>
<p>在Mailgun仪表板上，您可以获得有关电子邮件传递的一些统计信息：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Email-Mailgun-Message-Delivery.png" alt="20180714-Email-Mailgun-Message-Delivery.png"></p>
<h3 id="配置HTTPS证书（Configuring_HTTPS_Certificate）">配置HTTPS证书（Configuring HTTPS Certificate）</h3><p>现在让我们使用 <a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a> 提供的一个很好的HTTPS证书来提高我们的应用程序的安全性。</p>
<p>设置HTTPS从未如此简单。更好的是，我们现在可以免费获得它。他们提供了一个名为<strong>certbot</strong>的解决方案 ，负责为我们安装和更新证书。这非常简单：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python-certbot-nginx</span><br></pre></td></tr></table></figure>
<p>现在安装证书：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure>
<p>只需按照提示操作即可。当被问及：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br></pre></td></tr></table></figure>
<p>选择<code>2</code>将所有HTTP流量重定向到HTTPS。</p>
<p>有了这个，该网站已经通过HTTPS提供服务：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180714-Let&#39;s-Encrypt-certbot-Https.png" alt="20180714-Let&#39;s-Encrypt-certbot-Https.png"></p>
<p>设置证书的自动续订。运行以下命令编辑crontab文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab <span class="operator">-e</span></span><br></pre></td></tr></table></figure></p>
<p>将以下行添加到文件末尾：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">4</span> * * * /usr/bin/certbot renew --quiet</span><br></pre></td></tr></table></figure></p>
<p>该命令将每天凌晨4点运行。所有在30天内到期的证书将自动续订。</p>
<h3 id="总结（Conclusions）">总结（Conclusions）</h3><p>非常感谢所有关注本系列教程的人，给予评论和反馈！我真的很感激！这是该系列的最后一篇教程。我希望你喜欢它！</p>
<p>尽管这是教程系列的最后一部分，但我还是计划编写一些后续教程来探索其他有趣的主题，例如数据库优化以及在我们目前拥有的内容之上添加更多功能。</p>
<p>顺便说一句，如果您有兴趣为项目做出贡献，很少有人愿意免费提交<code>pull</code>请求！该项目的源代码可在GitHub上获得：<a href="https://github.com/sibtc/django-beginners-guide/" target="_blank" rel="external">https://github.com/sibtc/django-beginners-guide/</a></p>
<p>另外，请告诉我您还想看到的其他内容！:-)</p>
<h3 id="译者总结">译者总结</h3><p>翻译本文之前，从来没有翻译过技术文章。现在用一天时间翻译完，真的觉得翻译的工作很辛苦，以前看了很多翻译的文章，在这里感谢那些无私奉献的译者们！</p>
<p>在翻译过程中，有很多技术点，需要自已查一下资料，带出一些扩展；有一些技术知识，原作者一笔带过，又害怕读者看不懂，然后又想展开述；遇到一些自己不懂的技术，也是要硬头表去翻译；也有一些翻译的句子，反复多次斟酌文字，希望能够通俗易懂的描述出来。</p>
<p>最后，翻译只是第一步，理解了原作者的文章，并更好的学习到知识，简单明了的译文，是翻译的初心。当然，在这过程，也发现英文的重要性，希望大家也重视英文，为自己的技术视野更广，不断努力！正如文中作者说的，也许是你第一次遇到的知识，只有坚持，反复多看几次，慢慢的，你一定会懂的！恒心！</p>
<h3 id="参考扩展">参考扩展</h3><p>教程材料一共会被分为七个部分。<br>此教程将从安装、开发环境的准备，模型，视图，模板，URL到更高级的主题（如迁移，测试和部署）中详细探讨所有基本概念。</p>
<p><strong>Vitor Freitas</strong> 原文系列：</p>
<ul>
<li><a href="https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/" target="_blank" rel="external">A Complete Beginner’s Guide to Django</a></li>
</ul>
<p>公众号<strong>Python之禅</strong> 翻译：</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MzgyODQxMQ==&amp;mid=2650367994&amp;idx=1&amp;sn=a9553edbcbac690e29d1018d0a3de9f1&amp;chksm=be9cdcae89eb55b8511ef53ac8ae5b5bf6630228e3183882b89b710efca15aee0ba06eee35c5&amp;scene=0#rd" target="_blank" rel="external">一个完整的Django入门指南 - 第1部分</a></li>
<li><a href="https://mp.weixin.qq.com/s/eKVfex4Ir1ek6k6SRbRX2A" target="_blank" rel="external">Django入门指南-第2部分（系统设计）</a></li>
<li><a href="https://blog.csdn.net/js_xh/article/details/79490623" target="_blank" rel="external">一个完整的Django入门指南 - 第3部分：高级概念</a></li>
<li><a href="https://mp.weixin.qq.com/s/-FHN6-8yOzFR4-kFqQQZSQ" target="_blank" rel="external">Django入门实践指南-第4章：模型设计</a></li>
<li><a href="https://mp.weixin.qq.com/s/kFW9cBSiVGhF9CC7KwOgQQ" target="_blank" rel="external">Django入门实践指南-第5章：编写第一个视图函数</a></li>
</ul>
<p><strong>苍云横渡</strong> 翻译的Windows版本：</p>
<ul>
<li><a href="https://www.jianshu.com/p/8b1d6a415398" target="_blank" rel="external">【第一部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/43c6674adbd3" target="_blank" rel="external">【第二部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/0750fbd80d88" target="_blank" rel="external">【第三部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/139b0fc23fca" target="_blank" rel="external">【第四部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/f172fc6f2720" target="_blank" rel="external">【第五部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/cd4d6b796ff7" target="_blank" rel="external">【第六部分-django论坛从搭建到部署】一个完整的Django入门指南 - 简书</a></li>
</ul>
<p>扩展阅读：</p>
<ul>
<li><a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a> </li>
<li><a href="https://try.github.io/" target="_blank" rel="external">关于Git的很棒的互动教程</a></li>
<li><a href="https://www.nginx.com/" target="_blank" rel="external">NGINX</a></li>
<li><a href="http://gunicorn.org/" target="_blank" rel="external">Gunicorn</a></li>
<li><a href="https://certbot.eff.org/" target="_blank" rel="external">certbot</a></li>
<li><a href="https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/" target="_blank" rel="external">HTTPS 简介及使用官方工具 Certbot 配置 Let’s Encrypt SSL 安全证书详细教程 | Linux Story</a></li>
<li><a href="https://www.postgresql.org/" target="_blank" rel="external">PostgreSQL</a></li>
<li><a href="http://supervisord.org/" target="_blank" rel="external">Supervisor</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>本篇文章是翻译 <a href="https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/">A Complete Beginner’s Guide to Django</a> 系列的最后一篇文章 <a href="https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html">A Complete Beginner’s Guide to Django - Part 7</a>，因为搜索找了很久都没有找到对应的中文翻译篇（如果有，就是我没有找到…），又因为这个系列真的非常的好，简单，容易，非常适配入门，所以就打算自已试试翻译，也当是自己学习入门的一步吧！</p>]]>
    
    </summary>
    
      <category term="Django" scheme="https://iHTCboy.com/tags/Django/"/>
    
      <category term="Python" scheme="https://iHTCboy.com/tags/Python/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macOS的控制台Console.app]]></title>
    <link href="https://iHTCboy.com/2018/07/13/2018-07-13_macOS%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0Console/"/>
    <id>https://iHTCboy.com/2018/07/13/2018-07-13_macOS的控制台Console/</id>
    <published>2018-07-13T14:29:16.000Z</published>
    <updated>2018-07-14T09:05:44.209Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>从Xcode9.4开始，Devices 界面已经移除了真机设备的日志输出log，而移到macOS系统独立的控制台app(Console.app):</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console.app.png" alt="20180713-macOS-Console.app.png-w200"></p>
<a id="more"></a>
<h3 id="2、控制台_Console-app">2、控制台 Console.app</h3><blockquote>
<p>查看日志信息和报告以获取有关 Mac 和设备的诊断信息。</p>
</blockquote>
<p>控制台应用很早的macOS版本就有了，但是不常用，其实Xcode中移除，也是因为与控制器功能相似，对于Xcode来说，也许真的是一个负担，并且Xcode现在bug已经够多了，移除也是一个好事吧。</p>
<p>可以直接看苹果文档：<a href="https://support.apple.com/zh-cn/guide/console/welcome/1.0" target="_blank" rel="external">欢迎使用控制台 - Apple 支持</a></p>
<h3 id="3、一些技巧">3、一些技巧</h3><p>相对于以前想看设备的日志，其实，控制台可谓更轻量，更快捷，更专业吧。下面就说说一些技巧：</p>
<ul>
<li>筛选所需<br>我们打开控制台的目的，一般都是调试我们自己开发的iOS应用吧！这时候，链接设备后，其实我们只关心我们自己的应用的日志，但默认情况下，会显示所有应用当前输出的日志，这时候，筛选所需显得很有必要！<br>找到你应用输出的一条日志，然后鼠标右键（或按住 Control 键点按日志信息），然后选择 <code>显示“进程&#39;XXX&#39;”</code>：</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Filter-Process-Items.png" alt="20180713-macOS-Console-Filter-Process-Items.png"></p>
<p>这里示例<code>WeRead</code>(微信读书)的进程筛选，然后就会只显示这个应用的全部日志，相对于Xcode的日志界面，其实非常方便啦~</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Filter-Process-Items-activity.png" alt="20180713-macOS-Console-Filter-Process-Items-activity.png"></p>
<ul>
<li>显示所需<br>另一方面，第一条日志默认只显示一行，如果想显示全部，可以点击后，在下方显示具体的内容：</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Show-Items.png" alt="20180713-macOS-Console-Show-Items.png"></p>
<p>如果用快捷键（→ 和 ←）左右箭头键可以快速在当前选择的行显示全部的内容：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Show-Specific-Items.png" alt="20180713-macOS-Console-Show-Specific-Items.png"></p>
<h3 id="4、快捷键">4、快捷键</h3><p>使用键盘快捷键快速完成“控制台”中的许多任务。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command-Option-F</td>
<td>搜索日志信息和活动</td>
</tr>
<tr>
<td>Command-F</td>
<td>在日志信息中查找文本</td>
</tr>
<tr>
<td>Command-G</td>
<td>跳到下一条搜索结果</td>
</tr>
<tr>
<td>Command-Shift-G</td>
<td>跳到上一条搜索结果</td>
</tr>
<tr>
<td>Command-K</td>
<td>清除日志信息或活动</td>
</tr>
<tr>
<td>Shift-Command-R</td>
<td>重新载入日志信息或活动</td>
</tr>
<tr>
<td>Shift-Command-N</td>
<td>跳到最近的日志信息或活动</td>
</tr>
<tr>
<td>Command-0</td>
<td>显示或隐藏边栏</td>
</tr>
<tr>
<td>Command-R</td>
<td>在 Finder 中显示报告</td>
</tr>
<tr>
<td>→</td>
<td>在本行展开所选日志信息</td>
</tr>
<tr>
<td>←</td>
<td>在本行折叠所选日志信息</td>
</tr>
<tr>
<td>Control-Command-F</td>
<td>进入或退出全屏幕视图</td>
</tr>
<tr>
<td>Command-C</td>
<td>拷贝所选日志信息文本</td>
</tr>
</tbody>
</table>
<h3 id="5、总结">5、总结</h3><p>这个过程，大家也许会发现，用快捷键是提高效率的直接方式，用 <code>Alfred</code> 来打开也很方便（后面计划写一个<code>Alfred</code>开发者效率的文章，期待吧!）。刚开始，也许对于打开控制台查看日志log输出不习惯，但有时候只是查看日志排查问题，直接打开 Console.app 真的方便很多（你知道打开Xcode需要的时候更久，并且在打开Devices更是久啊），所以，综上，这个控制台 Console.app也是一件好事！</p>
<p>说到这里，其实，我更想吐槽的是Xcdoe！！！越来越庞大，还有Swift的交替，还有功能更强大？直接导致品控越来越差。所以，从这个角度来看，苹果把Xcode的很多相关但不重要的功能单独出来，也许是到于Xcode开发团队来说，是一件好事，到后续的版本迭代也是好事吧，希望Xcode10给开发者带来<code>新</code>体验！期待9月！！</p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://support.apple.com/zh-cn/guide/console/welcome/1.0" target="_blank" rel="external">欢迎使用控制台 - Apple 支持</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>从Xcode9.4开始，Devices 界面已经移除了真机设备的日志输出log，而移到macOS系统独立的控制台app(Console.app):</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console.app.png" alt="20180713-macOS-Console.app.png-w200"></p>]]>
    
    </summary>
    
      <category term="Console.app" scheme="https://iHTCboy.com/tags/Console-app/"/>
    
      <category term="macOS" scheme="https://iHTCboy.com/tags/macOS/"/>
    
      <category term="苹果控制台" scheme="https://iHTCboy.com/tags/%E8%8B%B9%E6%9E%9C%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python爬虫实践入门篇]]></title>
    <link href="https://iHTCboy.com/2018/07/10/2018-07-10_Python%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://iHTCboy.com/2018/07/10/2018-07-10_Python爬虫实践入门篇/</id>
    <published>2018-07-10T13:49:16.000Z</published>
    <updated>2018-07-14T08:32:58.431Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>学习Python二个多月啦，周末时开始兴趣学习爬虫，虽然有点概念，但是也折腾了大半天，下面就开始简要记录一下吧。</p>
<h3 id="2、需要的准备">2、需要的准备</h3><ul>
<li>Python：需要基本的python语法基础</li>
<li>requests：专业用于请求处理，<a href="http://docs.python-requests.org/zh_CN/latest/" target="_blank" rel="external">requests库学习文档中文版</a></li>
<li>lxml：其实可以用pythonth自带的正则表达式库re，但是为了更加简单入门，用 <a href="https://lxml.de/index.html" target="_blank" rel="external">lxml</a> 中的 etree 进行网页数据定位爬取。</li>
</ul>
<a id="more"></a>
<p>通过pip安装 requests 和 lxml 库，在终端输入：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> requests</span><br><span class="line">pip <span class="keyword">install</span> lxml</span><br></pre></td></tr></table></figure></p>
<p>注：如果是安装到Python3就用<code>pip3 install</code></p>
<p>下载过程成功的输出：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Collecting lxml</span><br><span class="line">  Cache entry deserialization failed, entry ignored</span><br><span class="line">  Downloading https:<span class="comment">//files.pythonhosted.org/packages/00/fd/5e65f293e366a63198dade275b886e5d24752367c2e67e3993023b0d58ef/lxml-4.2.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.7MB)</span></span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">8.7</span>MB <span class="number">821</span>kB/s </span><br><span class="line">Installing collected packages: lxml</span><br><span class="line">Successfully installed lxml-<span class="number">4.2</span><span class="number">.3</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>注：<br>如果安装过程遇到任何问题，请谷歌吧，如果网上找不到答案，也不要问我！找不到答案我直播吃翔！！！</li>
</ul>
<h3 id="3、实践过程">3、实践过程</h3><p>为了这过程有点兴趣，我找了一个美图的网站，爬虫了一波图片~</p>
<p>实践爬虫的网站链接：<a href="https://www点aitaotu点com（注意，这不是打广告！）" target="_blank" rel="external">https://www点aitaotu点com（注意，这不是打广告！）</a></p>
<ul>
<li>下载页面html内容：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">page = <span class="string">'https://www点aitaotu点com/guonei/36350.html'</span></span><br><span class="line">data = requests.get(page).text</span><br><span class="line">dom = etree.HTML(data)</span><br></pre></td></tr></table></figure>
<ul>
<li>解析(定位)元素:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title_path = <span class="string">'//*[@id="photos"]/h1/text()'</span></span><br><span class="line">totalpage_path = <span class="string">'//*[@id="picnum"]/span[2]/text()'</span></span><br><span class="line">image_path = <span class="string">'//*[@id="big-pic"]/p/a/img'</span></span><br></pre></td></tr></table></figure>
<p>这里的xpath怎么获取，就是网页里面，打开开发者检查元素工具，在safari和chrome都有这个功能：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-html-show-element.png" alt="20180710-html-show-element.png"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-html-copy-xpath.png" alt="20180710-html-copy-xpath.png"></p>
<ul>
<li>获取元素内容：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title = dom.xpath(title_path)[<span class="number">0</span>]</span><br><span class="line">total = dom.xpath(totalpage_path)[<span class="number">0</span>]</span><br><span class="line">image_url = dom.xpath(image_path)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">img_src = image_url.xpath(<span class="string">'./@src'</span>)[<span class="number">0</span>]</span><br><span class="line">img_alt = image_url.xpath(<span class="string">'./@alt'</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p>这里解析就不解析了，其实通过PyCharm IDE可能实时查看每个对象的属性，可以更清晰的了解解析的元素结构，帮助理解，这里就暂时不说IDE的方法啦，大家有兴趣可以试试，也是很简单的~</p>
<p>最后拿到图片链接，就是下载图片然后保存输出到电脑啊！（文章尾附完整代码！）</p>
<h3 id="4、总结">4、总结</h3><p>爬虫入门就这样结束啦！学习了python后，发现语法很简单，代码很轻松就完成！不到100行！！！</p>
<p>python通过各种库，解决了编程语言自身的庞大，完成了自己是胶水语言的特点！</p>
<p>通过这次实践，其实，有很多细节东西，只有自己做了才知道，比较说保存图片的路径，找到当前目录，怎么分目录保存，目录文件操作，这些都是自己之前实践了一个django工具学习过来的。所以，现在经历多了，才知道，什么时候学习都不晚，有些东西，真的是不知道什么时候你会用上，真的，自己早知道这个道理几年，就不像年轻时那么想，这东西怎么可能会用上，不学！！！果然是年轻坑爹！！！<strong>学会老，学到老吧！</strong></p>
<h3 id="5、代码">5、代码</h3><ul>
<li><a href="https://github.com/iHTCboy/WebCrawlerExample" target="_blank" rel="external">iHTCboy/WebCrawlerExample: 网页爬虫实践示例</a></li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/local/bin/python3</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadImages</span><span class="params">(url)</span>:</span></span><br><span class="line">    data = requests.get(page).text</span><br><span class="line">    dom = etree.HTML(data)</span><br><span class="line"></span><br><span class="line">    title_path = <span class="string">'//*[@id="photos"]/h1/text()'</span></span><br><span class="line">    totalpage_path = <span class="string">'//*[@id="picnum"]/span[2]/text()'</span></span><br><span class="line">    image_path = <span class="string">'//*[@id="big-pic"]/p/a/img'</span></span><br><span class="line"></span><br><span class="line">    title = dom.xpath(title_path)[<span class="number">0</span>]</span><br><span class="line">    total = dom.xpath(totalpage_path)[<span class="number">0</span>]</span><br><span class="line">    image_url = dom.xpath(image_path)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    img_src = image_url.xpath(<span class="string">'./@src'</span>)[<span class="number">0</span>]</span><br><span class="line">    img_alt = image_url.xpath(<span class="string">'./@alt'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    print(title, total, img_src, img_alt)</span><br><span class="line"></span><br><span class="line">    cwd = os.getcwd()</span><br><span class="line">    save_path = os.path.join(cwd, <span class="string">'images/'</span> + title)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(save_path):</span><br><span class="line">        os.makedirs(save_path)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">u'保存图片的路径：'</span>, save_path)</span><br><span class="line"></span><br><span class="line">    img_path = os.path.dirname(img_src)</span><br><span class="line">    img_name = os.path.basename(img_src)</span><br><span class="line">    img_format = img_name.split(<span class="string">'.'</span>)[<span class="number">1</span>]</span><br><span class="line">    print(img_path, img_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, int(total) + <span class="number">1</span>):</span><br><span class="line">        new_img_url = <span class="string">'%s/%02d.%s'</span> % (img_path, i, img_format)</span><br><span class="line">        save_img_path = <span class="string">'%s/%02d.%s'</span> % (save_path, i, img_format)</span><br><span class="line">        <span class="comment"># 下载图片</span></span><br><span class="line">        image = requests.get(new_img_url)</span><br><span class="line">        <span class="comment"># 命名并保存图片</span></span><br><span class="line">        <span class="keyword">with</span> open(save_img_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(image.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    url = <span class="string">'https://www.aitaotu.com/'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># download list</span></span><br><span class="line">    list = [<span class="string">'guonei/36350.html'</span>, <span class="string">'guonei/36352.html'</span>, <span class="string">'guonei/36351.html'</span>, <span class="string">'guonei/36357.html'</span>, <span class="string">'guonei/36250.html'</span>,</span><br><span class="line">            <span class="string">'guonei/36341.html'</span>, <span class="string">'guonei/36334.html'</span>, <span class="string">'guonei/36306.html'</span>, <span class="string">'guonei/35969.html'</span>, <span class="string">'guonei/35219.html'</span>,</span><br><span class="line">            <span class="string">'guonei/36290.html'</span>, <span class="string">'guonei/36277.html'</span>, <span class="string">'guonei/36263.html'</span>, <span class="string">'gangtai/36303.html'</span>, <span class="string">'gangtai/36226.html'</span>,</span><br><span class="line">            <span class="string">'guonei/35260.html'</span>, <span class="string">'guonei/35247.html'</span>, <span class="string">'guonei/36257.html'</span>, <span class="string">'guonei/36221.html'</span>, <span class="string">'guonei/21647.html'</span>,</span><br><span class="line">            <span class="string">'guonei/21499.html'</span>, <span class="string">'guonei/36319.html'</span>, <span class="string">'guonei/34903.html'</span>, <span class="string">'guonei/14148.html'</span>, <span class="string">'guonei/33780.html'</span>,</span><br><span class="line">            <span class="string">'guonei/14338.html'</span>, <span class="string">'guonei/14550.html'</span>, <span class="string">'guonei/14818.html'</span>, <span class="string">'guonei/16820.html'</span>, <span class="string">'guonei/18388.html'</span>,</span><br><span class="line">            <span class="string">'guonei/13447.html'</span>, <span class="string">'guonei/25912.html'</span>, <span class="string">'guonei/13991.html'</span>, <span class="string">'guonei/8246.html'</span>, <span class="string">'guonei/36171.html'</span></span><br><span class="line">            ]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">u'准备下载：%d套图'</span>, len(list))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> type <span class="keyword">in</span> list:</span><br><span class="line">        page = url + type</span><br><span class="line">        downloadImages(page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(<span class="string">u'下载完成啦！'</span>)</span><br></pre></td></tr></table></figure>
<p>代码就没有太多注释，因为很简单，就说一下运行方式吧，在终端：</p>
<p>python2:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> YellowImage.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p>
<p>python3:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> YellowImage.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p>
<p>最后的成果：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-last-results.png" alt="20180710-last-results.png"></p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python教程 - 廖雪峰的官方网站</a></li>
<li><a href="http://docs.python-requests.org/zh_CN/latest/" target="_blank" rel="external">Requests: 让 HTTP 服务人类 — Requests 2.18.1 文档</a></li>
<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html" target="_blank" rel="external">Beautiful Soup 4.2.0 文档</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式30分钟入门教程</a></li>
<li><a href="http://tool.oschina.net/regex/" target="_blank" rel="external">在线正则表达式测试</a></li>
<li><a href="https://lxml.de/index.html" target="_blank" rel="external">lxml - Processing XML and HTML with Python</a></li>
<li><a href="https://www.kawabangga.com/posts/2058" target="_blank" rel="external">Python lxml教程 | 卡瓦邦噶！</a></li>
<li><a href="https://piaosanlang.gitbooks.io/spiders/02day/section2.3.html" target="_blank" rel="external">非结构化数据之lxml库 · 网络爬虫教程</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>学习Python二个多月啦，周末时开始兴趣学习爬虫，虽然有点概念，但是也折腾了大半天，下面就开始简要记录一下吧。</p>
<h3 id="2、需要的准备">2、需要的准备</h3><ul>
<li>Python：需要基本的python语法基础</li>
<li>requests：专业用于请求处理，<a href="http://docs.python-requests.org/zh_CN/latest/">requests库学习文档中文版</a></li>
<li>lxml：其实可以用pythonth自带的正则表达式库re，但是为了更加简单入门，用 <a href="https://lxml.de/index.html">lxml</a> 中的 etree 进行网页数据定位爬取。</li>
</ul>]]>
    
    </summary>
    
      <category term="Python" scheme="https://iHTCboy.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://iHTCboy.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[聊聊简书文章被锁定]]></title>
    <link href="https://iHTCboy.com/2018/07/08/2018-07-08_%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E8%A2%AB%E9%94%81%E5%AE%9A/"/>
    <id>https://iHTCboy.com/2018/07/08/2018-07-08_简书文章被锁定/</id>
    <published>2018-07-08T10:49:16.000Z</published>
    <updated>2018-08-05T03:34:55.842Z</updated>
    <content type="html"><![CDATA[<h3 id="1、文章被锁定">1、文章被锁定</h3><p>昨晚看到简书消息：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_lock.png" alt="20180708-jianshu_lock.png"></p>
<p>原文章已经转移到个人博客：</p>
<ul>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
<li>《绝代宠妓》（Dangerous Beauty）观后感: <a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感">https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感</a></li>
</ul>
<h3 id="2、去中心化">2、去中心化</h3><a id="more"></a>
<p>我不知道这是机器过滤还是人工选择，但作为第一批用户，见证成长，为这样的行为感觉太可惜。想起简书很久之前，我在14年无意见看到简书时，就觉得这个写作社区很棒，当时还联系了简书，与联合创始人交流了一下，当然还开玩笑说毕业后想去简书，当时我就认为简书是未来的一个方向：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_feedback.png" alt="20180708-jianshu_feedback.png"></p>
<p>今天聊这个，其实还是不想吐槽什么。但，互联网发展到现在，从web的去中心化，现在又回到一个一个的社区，一个一个的app，我想乔布斯也不认为这是未来。去中心化，我认为是未来的方向，就像现在2018年最火的区块链！虽然现在00后之前的人，在于朋友圈子，QQ圈子，形成了国内的大中心。就像每一个中国思想的人都曾想拥有自己的房子一样。</p>
<p>我想象，00后之后，大家对房子的态度不会在像现在这样，对待互联网也不像现在，百花齐放，去中心化，也许是需要时间吧，让我们一起见证~</p>
<h3 id="参考引用">参考引用</h3><ul>
<li>《绝代宠妓》（Dangerous Beauty）观后感: <a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感">https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感</a></li>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、文章被锁定">1、文章被锁定</h3><p>昨晚看到简书消息：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_lock.png" alt="20180708-jianshu_lock.png"></p>
<p>原文章已经转移到个人博客：</p>
<ul>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
<li>《绝代宠妓》（Dangerous Beauty）观后感: <a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感">https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感</a></li>
</ul>
<h3 id="2、去中心化">2、去中心化</h3>]]>
    
    </summary>
    
      <category term="去中心化" scheme="https://iHTCboy.com/tags/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96/"/>
    
      <category term="简书文章被封" scheme="https://iHTCboy.com/tags/%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E8%A2%AB%E5%B0%81/"/>
    
      <category term="违反规定" scheme="https://iHTCboy.com/tags/%E8%BF%9D%E5%8F%8D%E8%A7%84%E5%AE%9A/"/>
    
      <category term="life" scheme="https://iHTCboy.com/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[淡淡iOS12独立沙盒账户登陆]]></title>
    <link href="https://iHTCboy.com/2018/06/20/2018-06-20_%E6%B7%A1%E6%B7%A1iOS12%E7%8B%AC%E7%AB%8B%E6%B2%99%E7%9B%92%E8%B4%A6%E6%88%B7%E7%99%BB%E9%99%86/"/>
    <id>https://iHTCboy.com/2018/06/20/2018-06-20_淡淡iOS12独立沙盒账户登陆/</id>
    <published>2018-06-20T11:49:16.000Z</published>
    <updated>2018-07-10T13:31:34.613Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>在iOS12前，如果对沙盒账号测试充值不熟悉的同学，也许会遇到过这样的情况：</p>
<blockquote>
<p>不允许创建 iTunes 账户<br>此 AppleID 目前无法用于 iTunes Store。请稍后重试</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-sandbox-loginerror.png" alt="20180620-sandbox-loginerror.png"></p>
<p>其实，测试账号不能在设置里登陆，只能在测试app里面发起充值时弹窗中登陆。苹果的文档也有说明，<a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" target="_blank" rel="external">https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html</a></p>
<h3 id="2、iOS_Sandbox">2、iOS Sandbox</h3><p>iOS12 终于把沙盒储值账号单独出来：</p>
<a id="more"></a>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-iOS12-sandbox.png" alt="20180620-iOS12-sandbox.png"></p>
<p>其实，沙盒账号是苹果账号的一种，沙盒账号与正式账号是唯一，也就是说一个邮箱只能是沙盒或者是正式账号，注册了其一就无法在用于另一种。</p>
<p>现在把沙盒账号独立出来，对于开发者来说，肯定是好事，因为很多次运营测试同事跑过来问，为什么沙盒账号登陆不了？？？<br>每次遇到新人，我只能默默的，也许苹果也发现了这个问题，而现在这个问题解决了！！！</p>
<p>其实，苹果的充值很多问题，其中掉单是最严重也是吐槽最多的，也许，苹果正在优化这一块？也许~ 期待吧！</p>
<h3 id="3、参考">3、参考</h3><ul>
<li><a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" target="_blank" rel="external">Apple_TestingInAppPurchases_Guide</a></li>
<li><a href="https://stackoverflow.com/questions/38034491/unable-to-log-in-with-sandbox-test-users-on-device" target="_blank" rel="external">unable-to-log-in-with-sandbox-test-users-on-device</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>在iOS12前，如果对沙盒账号测试充值不熟悉的同学，也许会遇到过这样的情况：</p>
<blockquote>
<p>不允许创建 iTunes 账户<br>此 AppleID 目前无法用于 iTunes Store。请稍后重试</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-sandbox-loginerror.png" alt="20180620-sandbox-loginerror.png"></p>
<p>其实，测试账号不能在设置里登陆，只能在测试app里面发起充值时弹窗中登陆。苹果的文档也有说明，<a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html">https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html</a></p>
<h3 id="2、iOS_Sandbox">2、iOS Sandbox</h3><p>iOS12 终于把沙盒储值账号单独出来：</p>]]>
    
    </summary>
    
      <category term="iOS12" scheme="https://iHTCboy.com/tags/iOS12/"/>
    
      <category term="sandbox" scheme="https://iHTCboy.com/tags/sandbox/"/>
    
      <category term="沙盒账户" scheme="https://iHTCboy.com/tags/%E6%B2%99%E7%9B%92%E8%B4%A6%E6%88%B7/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS快速清除全部的消息推送]]></title>
    <link href="https://iHTCboy.com/2018/05/26/2018-05-26_iOS%E5%BF%AB%E9%80%9F%E6%B8%85%E9%99%A4%E5%85%A8%E9%83%A8%E7%9A%84%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    <id>https://iHTCboy.com/2018/05/26/2018-05-26_iOS快速清除全部的消息推送/</id>
    <published>2018-05-26T15:46:16.000Z</published>
    <updated>2018-07-12T15:09:02.721Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>越来越多的应用，请求用户推送权限，一般情况下，普通应用我是不允许的，除了通讯应用、支付宝（银行app有很多不羊毛的活动推送，不允许）、GTD（Things、Due）、健身（Kepp、SixPack），其它的像淘宝天猫、京东，每次打开app，都要反复问我还要不要打开推送，你们就不能先调查一下我用的iOS系统多久吗？请问一个用了4年以上的用户，如果他还想打你们家的app推送，难道不知道在那里开吗？脑子进水吧。</p>
<h3 id="iOS10_以上">iOS10 以上</h3><p>如果是iOS10以上，并且是iPhone 6S、iPhone 6S plus ，就可以利用3D Touch一键清除通知。</p>
<a id="more"></a>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Clear-All-Push-notification.jpeg" alt="20180526-iOS-Clear-All-Push-notification.jpeg"></p>
<p>如果是点击推送的 x ，就会出现 Clear，点击后会清除当前区的推送<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Clear.jpeg" alt="20180526-iOS-Push-notification-Clear.jpeg"></p>
<p>如果长压（3D Touch），就出现 Clear All Notifications，点击就会清楚全部的推送<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Clear-All-Push-notification.jpeg" alt="20180526-iOS-Clear-All-Push-notification.jpeg"></p>
<h3 id="iOS_9">iOS 9</h3><p>如果是iOS 9 和更老的机型，首先按住锁屏上方的把手把通知中心拉下来，拖到底，松手，然后再向上把它拖回去，锁屏瞬间清空!</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Pull.png" alt="20180526-iOS-Push-notification-Pull.png"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Push.png" alt="20180526-iOS-Push-notification-Push.png"></p>
<h3 id="总结">总结</h3><p>iOS10以后的通知中心，合并了全部和未读消息，然后没有提供一个更好的展示形式，只是推送内容和交互更新，并没有解决推送过多的问题，就比如微信推送的消息是最多的，并且推送的类型也不一样，轻重急缓不分！<br>推送作为中国人工作和生活提示，已经越来越重要，更加高效和智能的推送展现，迫在眉睫。</p>
<p>听说iOS12会重新设计通知，希望是真的，非常期待，因为苹果这2年已经没有为系统做更多的创新或颠覆，希望苹果有所创新！</p>
<h3 id="参考引用">参考引用</h3><ul>
<li><a href="https://sspai.com/post/35483" target="_blank" rel="external">具透丨好的 iOS 体验，从用好通知开始：iOS 10 通知详解 - 少数派</a></li>
<li><a href="https://www.i4.cn/news_detail_6588.html" target="_blank" rel="external">教你快速清除烦人的消息推送<em>iPhone技巧</em>爱思助手</a></li>
<li><a href="http://www.gq.com.cn/digital/news_14320c4d37b8beea-3.html#pid=4" target="_blank" rel="external">NO.3一键清除通知_数码_GQ男士网</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>越来越多的应用，请求用户推送权限，一般情况下，普通应用我是不允许的，除了通讯应用、支付宝（银行app有很多不羊毛的活动推送，不允许）、GTD（Things、Due）、健身（Kepp、SixPack），其它的像淘宝天猫、京东，每次打开app，都要反复问我还要不要打开推送，你们就不能先调查一下我用的iOS系统多久吗？请问一个用了4年以上的用户，如果他还想打你们家的app推送，难道不知道在那里开吗？脑子进水吧。</p>
<h3 id="iOS10_以上">iOS10 以上</h3><p>如果是iOS10以上，并且是iPhone 6S、iPhone 6S plus ，就可以利用3D Touch一键清除通知。</p>]]>
    
    </summary>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="消息推送" scheme="https://iHTCboy.com/tags/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iTerm配置导出与迁移方法]]></title>
    <link href="https://iHTCboy.com/2018/05/12/2018-05-12_iTerm%E9%85%8D%E7%BD%AE%E5%AF%BC%E5%87%BA%E4%B8%8E%E8%BF%81%E7%A7%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://iHTCboy.com/2018/05/12/2018-05-12_iTerm配置导出与迁移方法/</id>
    <published>2018-05-12T15:49:16.000Z</published>
    <updated>2018-07-08T10:08:59.019Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>iTerm软件的实用就不用在说了，最近迁移新工作电脑，打算把自己电脑配置好的iTerm迁移到新电脑，网上找了很久都没有找到教程，看到iTerm的profiles下有 ‘Copy Profile as JSON’，但没有导出成文件，也没有找到导入配置的地方！！ 找了好久，最后还是在官网上找到了说明，所以，软件的使用教程，直接去官网找，别在谷歌百度了！！！</p>
<a id="more"></a>
<h3 id="2、iTerm配置导出&amp;迁移">2、iTerm配置导出&amp;迁移</h3><p>如果大家英文好，直接上官网看看吧，<a href="https://www.iterm2.com/documentation-dynamic-profiles.html" target="_blank" rel="external">Dynamic Profiles - Documentation - iTerm2 - macOS Terminal Replacement</a></p>
<p>我这里简单说一下步骤，打开配置：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTerm -&gt; <span class="constant">Preferences </span>-&gt; <span class="constant">Profiles </span>-&gt; <span class="constant">Other Actions</span></span><br></pre></td></tr></table></figure>
<p>然后有2种选择方式：</p>
<ol>
<li><ul>
<li>Copy Profile as JSON （复制当前选中的配置）</li>
</ul>
</li>
</ol>
<ul>
<li>Copy All Profiles as JSON （复制全部的配置）</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180512-iTerm-Preferences-Profiles-Other_Actions.png" alt="20180512-iTerm-Preferences-Profiles-Other_Actions.png"></p>
<p>这里选择复制全部的配置，然后保存到一个文件里面，后缀可以不用选择，文件名随意起，如：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180512-iterm-myconfig.png" alt="20180512-iterm-myconfig.png"></p>
<p>然后把这个配置文件，复制到新电脑的下面目录下：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/Library/</span>Application Support<span class="regexp">/iTerm2/</span>DynamicProfiles<span class="regexp">/</span></span><br></pre></td></tr></table></figure>
<p>然后启动新电脑的 iTerm2，这时配置已经加载迁移成功啦，DynamicProfiles目录下的文件可以删除，因为 iTerm2 启动里，会自动加载这个目录下的配置内容，但是配置读取成功后，iTerm是另外保存配置的。</p>
<h3 id="总结">总结</h3><p>这次迁移新电脑过程中，很多软件都重新下载，另外，之前在淘宝买个正版的软件，比如16年时，数码荔枝正版软件，当前代理的 CleanMyMac3 优惠价只要45元，当时就下手了。但是今天，突然发现只能一台设备激活，但是在AppStore购买的软件，可以无限下载啊！！！无限设备呢！！！！</p>
<p>之前 Mweb 黑色星期五是半价，就在AppStore购买了，现在可以随意多台设备下载！所以，想想，其实还是在AppStore下载购买好！原因有:</p>
<ul>
<li>自动更新，安全可靠</li>
<li>一个账号购买，无限安装设备（家庭共享也可以免费下载）</li>
</ul>
<p>当然，有些软件不在AppStore上架，可能就是上面的无限下载导致软件开发商不愿意在AppStore上架的原因吧，比如 jetbrains, Adobe 大厂， 很多软件也是，唉，我已经在AppStore购买了很多正版软件，真心觉得自动安装更新非常方便，现在的时代时间就是金钱，希望更多开发商在AppStore for mac 上架应用（当然，如果真希望用户只能一台设备安装，如果与苹果协商有解决方案，其实也是大喜的标示~）</p>
<h3 id="参考">参考</h3><ul>
<li><a href="https://www.iterm2.com/documentation-dynamic-profiles.html" target="_blank" rel="external">Dynamic Profiles - Documentation - iTerm2 - macOS Terminal Replacement</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>iTerm软件的实用就不用在说了，最近迁移新工作电脑，打算把自己电脑配置好的iTerm迁移到新电脑，网上找了很久都没有找到教程，看到iTerm的profiles下有 ‘Copy Profile as JSON’，但没有导出成文件，也没有找到导入配置的地方！！ 找了好久，最后还是在官网上找到了说明，所以，软件的使用教程，直接去官网找，别在谷歌百度了！！！</p>]]>
    
    </summary>
    
      <category term="iTerm2_DynamicProfiles" scheme="https://iHTCboy.com/tags/iTerm2-DynamicProfiles/"/>
    
      <category term="iTerm配置导出" scheme="https://iHTCboy.com/tags/iTerm%E9%85%8D%E7%BD%AE%E5%AF%BC%E5%87%BA/"/>
    
      <category term="iTerm配置迁移" scheme="https://iHTCboy.com/tags/iTerm%E9%85%8D%E7%BD%AE%E8%BF%81%E7%A7%BB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac版QQ聊天信息备份与导出方法]]></title>
    <link href="https://iHTCboy.com/2018/05/08/2018-05-08_mac%E7%89%88QQ%E8%81%8A%E5%A4%A9%E4%BF%A1%E6%81%AF%E5%A4%87%E4%BB%BD%E4%B8%8E%E5%AF%BC%E5%87%BA%E6%96%B9%E6%B3%95/"/>
    <id>https://iHTCboy.com/2018/05/08/2018-05-08_mac版QQ聊天信息备份与导出方法/</id>
    <published>2018-05-08T11:35:16.000Z</published>
    <updated>2018-07-08T10:08:58.995Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>最近，我司终于更换新电脑的计划落实啦！！！</p>
<blockquote>
<p>Mac mini 3.0GHz 双核 Intel Core i7 处理器 (Turbo Boost 高达 3.5GHz)<br>16GB 1600MHz LPDDR3 SDRAM<br>1TB 融合硬盘<br>Intel Iris Graphics 图形处理器</p>
</blockquote>
<p>非常值的可贺！然而，就是新电脑，一切都是新！一切都是白！！非常多工具的数据需要迁移，开发环境需要配置，最近也打算总结一下新电脑配置方面的文章，作为自己备份，或者给新手参考，相信有很大帮助。今天就先从QQ说起吧~</p>
<a id="more"></a>
<h3 id="正题">正题</h3><p>说回来，因为QQ内容是工作的主要记录，所以，</p>
<h4 id="企业QQ聊天内容迁移">企业QQ聊天内容迁移</h4><p>将下面目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.eimmac/</span>Data<span class="regexp">/Library/</span>Application Support<span class="regexp">/QQ</span></span><br></pre></td></tr></table></figure>
<p>复制目录下所有内容到新电脑，就可以啦!</p>
<h4 id="用户版QQ聊天内容迁移">用户版QQ聊天内容迁移</h4><p>将下面目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.qq/</span>Data<span class="regexp">/Library/</span>Application Support<span class="regexp">/QQ/</span></span><br></pre></td></tr></table></figure>
<p>复制目录下所有内容到新电脑，</p>
<p>如果需要把聊天中的图片也迁移，就需要在复制目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.qq/</span>Data<span class="regexp">/Documents/</span></span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>上面目录中 <code>用户名</code> 是你电脑的账户名</li>
<li>企业QQ是在com.tencent.eimmac目录下，而用户版QQ是在 com.tencent.qq 下</li>
</ul>
<h4 id="授鱼&amp;授渔">授鱼&amp;授渔</h4><p>如果是其它功能的内容迁移，道理相似，把对应的软件的目录的内容复制到新电脑就可以了。当然，想方便查看软件的目录备份内容，可以用 CleanMyMac 卸载器 查看：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180508-CleanMyMac_unloader.png" alt="CleanMyMac_unloader"></p>
<h3 id="总结">总结</h3><p>作为程序员，越来越觉得云端的好处，迁移数据是一件痛苦（辛苦）的事件，如果是电脑小白，那更加是的。所以，有必要作一些更好的方法，比如云端备份软件的配置，用脚本来操作迁移过程，因为不是经常性换电脑，所以这个就不作进一步实践了。</p>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>最近，我司终于更换新电脑的计划落实啦！！！</p>
<blockquote>
<p>Mac mini 3.0GHz 双核 Intel Core i7 处理器 (Turbo Boost 高达 3.5GHz)<br>16GB 1600MHz LPDDR3 SDRAM<br>1TB 融合硬盘<br>Intel Iris Graphics 图形处理器</p>
</blockquote>
<p>非常值的可贺！然而，就是新电脑，一切都是新！一切都是白！！非常多工具的数据需要迁移，开发环境需要配置，最近也打算总结一下新电脑配置方面的文章，作为自己备份，或者给新手参考，相信有很大帮助。今天就先从QQ说起吧~</p>]]>
    
    </summary>
    
      <category term="mac版QQ信息导出" scheme="https://iHTCboy.com/tags/mac%E7%89%88QQ%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA/"/>
    
      <category term="聊天内容迁移" scheme="https://iHTCboy.com/tags/%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E8%BF%81%E7%A7%BB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Github Pages页面重定向到新网址，实现域名跳转]]></title>
    <link href="https://iHTCboy.com/2018/05/06/2018-05-06_Github_Pages%E9%A1%B5%E9%9D%A2%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E6%96%B0%E7%BD%91%E5%9D%80,%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC/"/>
    <id>https://iHTCboy.com/2018/05/06/2018-05-06_Github_Pages页面重定向到新网址,实现域名跳转/</id>
    <published>2018-05-06T08:35:16.000Z</published>
    <updated>2018-07-08T10:08:17.472Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最新还是决下心来换域名啦！从 <a href="http://ihtc.cc" target="_blank" rel="external">http://ihtc.cc</a> 换成 <a href="https://ihtcboy.com">https://ihtcboy.com</a> ！然后问题就来了，以前文章的链接打开404了，旧域名也访问不通，这样子不行呢！用了2年多的旧域名，在百度谷歌还是积累了一些爬虫，还有很多分享到第三方平台的文章呢！想一想，还是想救一救它！！！</p>
<a id="more"></a>
<h3 id="2、准备工作">2、准备工作</h3><p>首先，因为是2个域名，所以我分别用2个GitHub账号设置对应的Repo地址解析。</p>
<table>
<thead>
<tr>
<th>域名</th>
<th>Repo</th>
</tr>
</thead>
<tbody>
<tr>
<td>ihtc.cc</td>
<td>HeTianCong.github.io</td>
</tr>
<tr>
<td>ihtcboy.com</td>
<td>iHTCboy.github.io</td>
</tr>
</tbody>
</table>
<h3 id="3、域名重定向">3、域名重定向</h3><p>首先要解决的问题是 ihtc.cc 重写向到 ihtcboy.com，在网上搜索到，域名的重定向可以有以下3种方法（如果还有其它，欢迎大家补充！）：</p>
<ol>
<li>域名转发</li>
<li>301重定向</li>
<li>JS跳转</li>
</ol>
<p>方法一，域名注册商支持域名转发功能才行！放弃~<br>方法二， 就是Web 服务器（这里是GitHub）给访问老域名的请求返回一个 302，然后跳转到新域名上。考虑到使用的GitHub托管服务是不可能配置 Web 服务器的，也只能放弃~</p>
<p>最后就是剩下JavaScript 实现，在 <code>HeTianCong.github.io</code> 新建<br><code>index.html</code> 文件，内容为：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.location.href=<span class="string">"https://ihtcboy.com"</span>;</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong></p>
<p>index.html就是访问 ihtc.cc 时，GitHub 默认打开的页面，所以在里面用JS重写向到新的域名，这样就解决了旧域名重写向新网址的问题啦！！</p>
<h3 id="4、文章重定向">4、文章重定向</h3><p>旧的文章链接：</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ihtc.cc/<span class="number">2018/02/25</span>/<span class="number">2018-02-25</span>%20_Gitment评论功能接入踩坑教程/</span><br></pre></td></tr></table></figure>
<p>既然要重定向到新的域名，，就不可能在旧的Repo里增加全部旧文章吧（虽然方案是可行），但是这样又起不到读者知道新域名的问题，硬要搞2个Repo，那就没有前面的重定向必要啦！！！</p>
<p>最后想到旧的链接访问不通时，表现形式：<br><strong>404<br>There isn’t a GitHub Pages site here.</strong>！</p>
<p>那么在 Repo 下建立一个 <code>404.html</code>，这样是不是就可以拿到访问文章的链接，然后就你所欲为！（拿旧域名替换成新域名就可以啦！）马上就开始行动吧！</p>
<p><code>404.html</code> 文件，内容为：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://cdn.bootcss.com/purl/2.3.1/purl.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="keyword">var</span> url = purl();</span><br><span class="line"><span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'ihtc.cc'</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span><br><span class="line">    <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'ihtc.cc'</span>, <span class="string">"ihtcboy.com"</span>);</span><br><span class="line">    <span class="built_in">window</span>.location.replace(new_url); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.ihtc.cc'</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span><br><span class="line">    <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.ihtc.cc'</span>, <span class="string">"ihtcboy.com"</span>);</span><br><span class="line">    <span class="built_in">window</span>.location.replace(new_url);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href=<span class="string">"https://ihtcboy.com"</span>;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面js是放在 404.html 里面，当文章访问不通时会显示 404.html 页面，这时就会直接调用js判断域名，然后替换成新域名来访问！</p>
<p>最后实践发现，这个方法可行！！！（当然，有些禁止js运行的浏览器这些人群就被忽略吧，不属于大多数人的世界-.-）</p>
<p>从浏览器访问 <code>www.ihtc.cc/xxx</code> 或 <code>ihtc.cc/xxx</code> 的读者，都会被重定向到 <strong>ihtcboy.com</strong>! </p>
<p>以上全部的配置内容可参考 <a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="external">HeTianCong.github.io</a></p>
<h3 id="5、总结">5、总结</h3><p>刚开始是想放弃，因为经常中谷歌搜索文章里，常常发现404的 <strong>There isn’t a GitHub Pages site here.</strong>，都是怀疑作者域名过期或变更等，又没有自己后台服务器，只能不了而之，旧的读者从此就与这个网站失联，觉得是有点可惜！</p>
<p>所以，今天的这个文章，希望对愿意写文章，有又变更域名需求的博客同仁来说，希望是一个更好的开始！</p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="external">HeTianCong.github.io</a></li>
<li><a href="https://blog.csdn.net/dianjinmi/article/details/78383955" target="_blank" rel="external">如何实现域名A指向域名B？三种域名跳转方法供选择 - CSDN博客</a></li>
<li><a href="https://blog.jamespan.me/2015/04/12/the-blogs-migration" target="_blank" rel="external">博客折腾记之网址变更｜Ruo Dojo</a></li>
<li><a href="http://yanping.me/cn/blog/2012/02/06/github-pages-domain-3/" target="_blank" rel="external">三谈github页面域名绑定：域名跳转 - 雁起平沙的网络日志</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最新还是决下心来换域名啦！从 <a href="http://ihtc.cc">http://ihtc.cc</a> 换成 <a href="https://ihtcboy.com">https://ihtcboy.com</a> ！然后问题就来了，以前文章的链接打开404了，旧域名也访问不通，这样子不行呢！用了2年多的旧域名，在百度谷歌还是积累了一些爬虫，还有很多分享到第三方平台的文章呢！想一想，还是想救一救它！！！</p>]]>
    
    </summary>
    
      <category term="Github Pages" scheme="https://iHTCboy.com/tags/Github-Pages/"/>
    
      <category term="JS跳转" scheme="https://iHTCboy.com/tags/JS%E8%B7%B3%E8%BD%AC/"/>
    
      <category term="域名跳转" scheme="https://iHTCboy.com/tags/%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC/"/>
    
      <category term="重定向" scheme="https://iHTCboy.com/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[忆爷爷 —— 留守老人的一代]]></title>
    <link href="https://iHTCboy.com/2018/05/05/2018-05-05_%E5%BF%86%E7%88%B7%E7%88%B7%E2%80%94%E2%80%94%E7%95%99%E5%AE%88%E8%80%81%E4%BA%BA%E7%9A%84%E4%B8%80%E4%BB%A3/"/>
    <id>https://iHTCboy.com/2018/05/05/2018-05-05_忆爷爷——留守老人的一代/</id>
    <published>2018-05-04T16:05:16.000Z</published>
    <updated>2018-05-12T14:35:59.187Z</updated>
    <content type="html"><![CDATA[<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/myGrandpa.jpg" alt="my grandpa"></p>
<h3 id="忆">忆</h3><p>爷爷生于三十年代，抗日战争之际。</p>
<p>听爷爷说，我们家以前是地主，解放后，我们家族就走下坡路，爷辈各兄弟分散多地。</p>
<p>读书时，还不能体会到地主阶级的痛，改革开放后家族迁于麓阳村。</p>
<a id="more"></a>
<p>到了我爸那一代，小时候读书被人欺负，是随便一个人都可以欺负地主家的孩子，也许已经没有人能想象到是什么一个场景，历史过去，没有留下记忆的境头，没有人敢写的历史问题，越来越多的消失。最后我爸连小学都没能毕业。到了我叔那辈，读到初中，家里还穷，那时我大伯和我爸已经娶妻生子，我叔南下广东打工，为家里带来了很多改变，新录音机，当时可是了不起，因为那时家里就一台黑白小电视。</p>
<p>也就97年香港回归后，我叔在广东学会了很多，从打杂工、洗车，然后做厨师，在外面无依无靠，靠自己努力做到，在当时已经了不起，听爷爷说，当时叔的工资都寄回家了。家里穷，我依然记得吃肥猪肉都是很奢侈。</p>
<p>99年，千禧年来临前，在叔的带领下来到广州。然后一直到现在，在外打工将近二十个年头。背井离乡，那时间我才10岁不到，爷爷一个人在家里照顾2个姐姐，2个哥哥，直到他们都出来打工，最后一个一个远走他乡，离他而去。</p>
<p>20年，对于一个老人，每年过年过节一个人！春节、清明节、端午节、中秋节，都没有回去过，对于老人来说，什么又是对又是错，钱又有什么用。</p>
<p>说说那时交通，20个小时班车，因为火车站在广州市中心，所以只能就近坐班车，从下午到晚上，然后第二天早上回到南宁，回到家里，真的不容易。现在动车4个小时，公交车和地铁方便，回家当天就到，也许以后也没有人知道，甚至大多数90后也不了而之，随着历史的迁移只会越小人知道，然后就最后没有人知道这些历史，没有人知道上一辈人的辛苦，上一辈人的辛酸。</p>
<p>爷爷写的一手好的毛笔字，村里的红事白事都会叫他写，惟一的春联他就不敢写，都是叫村里的老师帮写，也许他还觉得自己文采不够？另外，爷爷自学了针灸，平时有空都会帮别人治治，虽然我不确认效果，但是中国的针灸历史很久。从这两个方面，就觉得爷爷有什么东西值得我去学习，在那个年代，那个压力，这种精神，永远不朽！</p>
<h3 id="念">念</h3><p>读高中时，因为广东不给外地人读，所以回南宁读书，有几个寒暑假都在家里陪爷爷一起过。想起高中的那时候，由于学业繁忙，每天都是爷爷买菜煮饭给我吃，这就这样，一辈子的回忆。也只有这样的机会，我才能了解这些故事，少数人才记得的历史。</p>
<p>听爷爷常常唠叨，他以为家族一辈子都不会在兴旺起来。当年闹饥荒，地主被批斗，奶奶就是被批斗而逝去。在我记忆里，没有奶奶的画面，听爷爷说，我很小时奶奶就去了。</p>
<p>爷爷不经常提说这些历史，就像他说恨毛主席。爷爷经历了我们这一代无法想象的苦，我们又享受上一辈奋斗带来的富，已经没有多少人会记住历史。就像爷爷说希望当年那些对待他的人，让他们知道错。在别人看来，爷爷过于自我，普通人没有人会理解，别人会恶评。</p>
<p>那又如何，我已经没有办法帮爷爷实现梦想了，因为历史永远回不去。大家习惯于现在，现在的小康生活。那一代人，知青，上山下乡，慢慢的被人忘记了，那些老人也慢慢消失。那一代人，在这近二十年，也许做了一些常人无法理解的事，大家都不了解。没有人知道为什么，也没有人关心，最后也再没有人知道了。</p>
<p>越来越多的留守老人逝去，越来越多的留守儿童长大成人，然后背井离乡，回到旧路。</p>
<p>有时候站在历史的回流中，看着城市里面永远不会熄灭的灯光，其实是最大的阴影，最大的黑暗。</p>
<p>在历史的车轮碾压下，尘归尘土归土。现在的小康生活，来的太容易。每天纸醉金迷，玩物丧志，玩弄人生。最可怕的是，只会羡慕别人，完全没有自我的那些生命。一辈子就这些长，有些事要记住，有些事要去做，如果不能体会到的困境，就不会意识到自己在睡觉吧。</p>
<p>那些无奈，辛勤的日子，依然会有人记得，带着梦想去奋斗吧！</p>
<p><del>忆往昔，爷爷一路走好，愿天堂没有孤独。</del></p>
<p><br></p>
<p align="right">5月4日 夜</p>



]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/myGrandpa.jpg" alt="my grandpa"></p>
<h3 id="忆">忆</h3><p>爷爷生于三十年代，抗日战争之际。</p>
<p>听爷爷说，我们家以前是地主，解放后，我们家族就走下坡路，爷辈各兄弟分散多地。</p>
<p>读书时，还不能体会到地主阶级的痛，改革开放后家族迁于麓阳村。</p>]]>
    
    </summary>
    
      <category term="下一代" scheme="https://iHTCboy.com/tags/%E4%B8%8B%E4%B8%80%E4%BB%A3/"/>
    
      <category term="爷爷" scheme="https://iHTCboy.com/tags/%E7%88%B7%E7%88%B7/"/>
    
      <category term="留守儿童" scheme="https://iHTCboy.com/tags/%E7%95%99%E5%AE%88%E5%84%BF%E7%AB%A5/"/>
    
      <category term="留守老人" scheme="https://iHTCboy.com/tags/%E7%95%99%E5%AE%88%E8%80%81%E4%BA%BA/"/>
    
      <category term="life" scheme="https://iHTCboy.com/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macOS中基于L2TP协议的VPN连接时提示“IPSec 共享密钥”丢失问题解决]]></title>
    <link href="https://iHTCboy.com/2018/04/10/2018-04-10_macOS%E4%B8%AD%E5%9F%BA%E4%BA%8EL2TP%E5%8D%8F%E8%AE%AE%E7%9A%84VPN%E8%BF%9E%E6%8E%A5%E6%97%B6%E6%8F%90%E7%A4%BA%E2%80%9CIPSec%E5%85%B1%E4%BA%AB%E5%AF%86%E9%92%A5%E2%80%9D%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://iHTCboy.com/2018/04/10/2018-04-10_macOS中基于L2TP协议的VPN连接时提示“IPSec共享密钥”丢失问题解决/</id>
    <published>2018-04-10T10:59:26.000Z</published>
    <updated>2018-05-06T13:02:45.257Z</updated>
    <content type="html"><![CDATA[<h3 id="1、遇到的问题">1、遇到的问题</h3><blockquote>
<p>“IPSec 共享密钥”丢失。请验证您的设置并尝试重新连接。</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-VPNConnetionFailure.png" alt="20180410-VPNConnetionFailure.png"></p>
<p>在网上找到很多相似的解决方法，但是却没有人说出为什么要这样做？？</p>
<a id="more"></a>
<h3 id="2、问题原因&amp;解决">2、问题原因&amp;解决</h3><h4 id="2-1_原因：">2.1 原因：</h4><p>最后在Oracle官方文档找到了解释：</p>
<p>引用 <strong>Oracle Solaris 10 8/11 Information Library</strong> 文档:</p>
<blockquote>
<p>/etc/ppp/options<br>包含缺省应用于系统中所有 PPP 链路的特征（例如，计算机是否要求对等点对其本身进行验证）的文件。如果不存在此文件，将禁止非超级用户使用 PPP。</p>
</blockquote>
<p>也就是说，默认情况下macOS跟Liunx一样，在<code>/etc/ppp/</code>目录下没有 <code>options</code>这个配置文件，所以对于非root用户就无法使用ppp链路。</p>
<h4 id="2-2_解决">2.2 解决</h4><p>知其然，所以知其后然，这时候的解决方法就是在<code>/etc/ppp/</code>目录下建立options`这个配置文件，并且配置ppp链路l2tp不需要ipsec密钥。</p>
<p>下面就是vim命令操作，如果想系统学习相关命令可查看 <a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录</a>，这里不打算详细讲解，有兴趣同学可以另行学习。</p>
<p><strong>2.2.1 操作步骤</strong><br>（1）在终端任意路径下输入命令： <code>sudo vim /etc/ppp/options</code><br>然后输入电脑密码后，显示vim操作界面后按键盘<code>i</code>进入插入模式，输入下面内容：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugin L2TP<span class="class">.ppp</span></span><br><span class="line">l2tpnoipsec</span><br></pre></td></tr></table></figure></p>
<p>（2）然后按<code>esc</code>键退出插入模式，最后输入<code>:wq!</code>，强制保存并退出vim模式。</p>
<p><strong>2.2.2 命令解释</strong></p>
<ul>
<li><code>sudo</code>：用管理员权限执行命令</li>
<li><code>vim</code>：用vim打开文件，后面跟上文件所在的路径</li>
<li><code>plugin L2TP.ppp</code>：配置ppp链路插件？具体暂未了解，知道的同学可以告诉我啊！</li>
<li><code>l2tpnoipsec</code>: 配置ppp链路l2tp不需要ipsec密钥。</li>
</ul>
<p><strong>2.2.3 终端操作示意</strong><br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-SudoVim-etc-ppp-options.png" alt="sudo vim /etc/ppp/options"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-vim-options-insert.png" alt="添加ppp的options配置文件"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-vim-wq!.png" alt="保存内容并退出vim"></p>
<p>最后，想验证是否保存成功，可以用<code>open /etc/ppp/options</code>命令打开文件查看内容：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-open-options.png" alt="打开options文件查看内容"></p>
<h3 id="3、总结">3、总结</h3><p>在这个探索的过程，自己了解得更多，就会发现自己知道的越少！求甚解，也许就是最好的学习态度，大家都要坚持！</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://docs.oracle.com/cd/E24847_01/html/E22299/pppsvrconfig.reference-65.html" target="_blank" rel="external">在文件中和命令行上使用 PPP 选项 - 系统管理指南：网络服务</a></li>
<li><a href="https://lxneng.com/posts/177" target="_blank" rel="external">Mac OS X 下无密钥方式连接基于L2TP协议的VPN</a></li>
<li><a href="https://www.jianshu.com/p/6bbfbc49e54c" target="_blank" rel="external">mac的vpn配置“IPSec 共享密钥”丢失问题 - 简书</a></li>
<li><a href="http://blog.51cto.com/nginxs/1714806" target="_blank" rel="external">Mac 笔记本无共享密钥连接L2TP VPN-我的运维历程-51CTO博客</a></li>
<li><a href="http://jiangrongyong-blog.logdown.com/posts/2013/06/14/osx-vpn-l2tp" target="_blank" rel="external">Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN « jiangrongyong’s Blog</a></li>
<li><a href="http://www.micmiu.com/os/mac/mac-osx-vpn-l2tp/" target="_blank" rel="external">Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN | micmiu - 软件开发+生活点滴</a></li>
<li><a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录 - peida - 博客园</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、遇到的问题">1、遇到的问题</h3><blockquote>
<p>“IPSec 共享密钥”丢失。请验证您的设置并尝试重新连接。</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-VPNConnetionFailure.png" alt="20180410-VPNConnetionFailure.png"></p>
<p>在网上找到很多相似的解决方法，但是却没有人说出为什么要这样做？？</p>]]>
    
    </summary>
    
      <category term="IPsec" scheme="https://iHTCboy.com/tags/IPsec/"/>
    
      <category term="PPP" scheme="https://iHTCboy.com/tags/PPP/"/>
    
      <category term="macOS" scheme="https://iHTCboy.com/tags/macOS/"/>
    
      <category term="vpn" scheme="https://iHTCboy.com/tags/vpn/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PyCharm 2018 for mac 数据库实战：链接SQLite、建表、添加、查询数据]]></title>
    <link href="https://iHTCboy.com/2018/04/03/2018-04-03_PyCharm_2018_for_mac%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E6%88%98_%E9%93%BE%E6%8E%A5SQLite_%E5%BB%BA%E8%A1%A8_%E6%B7%BB%E5%8A%A0_%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
    <id>https://iHTCboy.com/2018/04/03/2018-04-03_PyCharm_2018_for_mac数据库实战_链接SQLite_建表_添加_查询数据/</id>
    <published>2018-04-03T13:46:26.000Z</published>
    <updated>2018-05-06T13:03:14.220Z</updated>
    <content type="html"><![CDATA[<h3 id="一、前言">一、前言</h3><hr>
<p>最近开始入门python，当然是要使用PyCharm，然后在项目中遇到.db数据库文件，双击打不开？网上找到了windows版本的教程，版本也比较旧，所以有空就来一发，当备忘也好~</p>
<a id="more"></a>
<h3 id="二、链接SQLite">二、链接SQLite</h3><hr>
<h6 id="2-1_控制台创建数据库DB文件">2.1 控制台创建数据库DB文件</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createDBfile.png" alt="创建数据库DB文件"></p>
<h6 id="2-2_打开sqlite配置界面">2.2 打开sqlite配置界面</h6><p>按下图步骤打开sqlite配置目录<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-openSqliteConfig.png" alt="打开sqlite配置界面"></p>
<h6 id="2-3_安装sqlite驱动">2.3 安装sqlite驱动</h6><p>点击下载驱动，直到显示提示“no objects”：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-downloadSqliteDriver.png" alt="安装sqlite驱动"></p>
<h6 id="2-4_链接刚才创建的数据库_ios_test-db文件">2.4  链接刚才创建的数据库 ios_test.db文件</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-ConnectionSqliteFile.png" alt=" 链接数据库Sqlite文件"></p>
<p>点击步骤4的“Test Connection” 时，显示 <code>Successful</code> 就表示连接成功，点击右下角的OK返回！<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-TestConnectionSqlite.png" alt="Test Connection"></p>
<p>PyCharm自动打开Sqlite数据库：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-PycharmSqliteConsole.png" alt="SqliteConsole"></p>
<h3 id="三、操作数据库">三、操作数据库</h3><hr>
<h6 id="3-1_创建一张表">3.1 创建一张表</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createTable.png" alt="createTable"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createTableConsole.png" alt="createTableConsole"></p>
<h6 id="3-2_添加数据">3.2 添加数据</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-insertIntoValues.png" alt="insertIntoTable"></p>
<h6 id="3-3_查询数据">3.3 查询数据</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-SelectFrom.png" alt="SelectTable"></p>
<h6 id="3-4_关联表">3.4 关联表</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-referencesForeignKey.png" alt="referencesForeignKey"></p>
<h6 id="3-5_更多示例">3.5 更多示例</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-insertInfoValuesMore.png" alt="insertValues"></p>
<p>相关代码：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个表</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> iOSDevice(</span><br><span class="line">  deviceName <span class="built_in">TEXT</span></span><br><span class="line">);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhone8'</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhone8 Plus'</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhoneX'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据</span></span><br><span class="line"><span class="operator">select * <span class="keyword">from</span> iOSDevice;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个新表</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> iProduct (</span><br><span class="line">  Mac    <span class="built_in">text</span>,</span><br><span class="line">  iPhone <span class="built_in">text</span>,</span><br><span class="line">  iPad   <span class="built_in">text</span>,</span><br><span class="line">  Watch  <span class="built_in">text</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">--  关联表</span></span><br><span class="line">  foreign <span class="keyword">key</span> (iPhone) <span class="keyword">references</span> iOSDevice(deviceName)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--  插入多个值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> iProduct <span class="keyword">values</span>(</span><br><span class="line">  <span class="string">'Macbook Pro'</span>,</span><br><span class="line">  <span class="string">'iPhone'</span>,</span><br><span class="line">  <span class="string">'iPad mini4'</span>,</span><br><span class="line">  <span class="string">'apple Watch'</span></span><br><span class="line">);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表数据</span></span><br><span class="line"><span class="operator">select * <span class="keyword">from</span> iProduct;</span></span><br></pre></td></tr></table></figure>
<h3 id="四、总结">四、总结</h3><hr>
<p>通过PyCharm进行SQLite操作，之前真没有想到PyCharm如此强大！IDE就是<code>IDE</code>，收费也是硬道理！希望好好利用PyCharm做更多有趣的事件~</p>
<h3 id="五、参考引用">五、参考引用</h3><ul>
<li><a href="https://blog.csdn.net/qq_36482772/article/details/53458400" target="_blank" rel="external">PyCharm IDE 链接sqlite、建表、添加、查询数据 - CSDN博客 </a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="一、前言">一、前言</h3><hr>
<p>最近开始入门python，当然是要使用PyCharm，然后在项目中遇到.db数据库文件，双击打不开？网上找到了windows版本的教程，版本也比较旧，所以有空就来一发，当备忘也好~</p>]]>
    
    </summary>
    
      <category term="PyCharm" scheme="https://iHTCboy.com/tags/PyCharm/"/>
    
      <category term="Python" scheme="https://iHTCboy.com/tags/Python/"/>
    
      <category term="SQLite" scheme="https://iHTCboy.com/tags/SQLite/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[判断NSString为空的问题浅析]]></title>
    <link href="https://iHTCboy.com/2018/03/17/2018-03-17_%E5%88%A4%E6%96%ADNSString%E4%B8%BA%E7%A9%BA%E7%9A%84%E9%97%AE%E9%A2%98%E6%B5%85%E6%9E%90/"/>
    <id>https://iHTCboy.com/2018/03/17/2018-03-17_判断NSString为空的问题浅析/</id>
    <published>2018-03-17T15:02:26.000Z</published>
    <updated>2018-05-06T08:46:03.761Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>判断字符串是否为空的情况，一般判断的逻辑如下：</p>
<ul>
<li>是否为nil </li>
<li>是否是NSNull</li>
<li>是否去掉空格之后长度为0</li>
</ul>
<p>在某书看到如下代码：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//www.jianshu.com/p/fd32b759bace</span></span><br><span class="line">來源：简书</span><br></pre></td></tr></table></figure>
 <a id="more"></a>
<h3 id="2、判断NSString为空的问题">2、判断NSString为空的问题</h3><p>大家继续之前，可以认真看看上面的代码有没有问题？或者有没有优化的空间？</p>
<p>原作者表示里面有一个坑，调用者为nil时：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">NSString</span> *<span class="keyword">str </span>= (网络解析出来的数据，解析结果为nil)<span class="comment">;</span></span><br><span class="line"><span class="keyword">BOOL </span><span class="keyword">isBlank </span>= [<span class="keyword">str </span><span class="keyword">isBlankString];</span></span><br></pre></td></tr></table></figure>
<p>就是说，如果用实例方法进行判断为空，因为实例对象为空时，根据objc的动态性，向空对象发消息会直接返回nil，并不会找到实例方法进行调用。所以，要判断字符串为空，只能传入<code>字符串对象</code>（可能为空），进行判断。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyUtility</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)string;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"MyUtility.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyUtility</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>其中NULL、nil、Nil、NSNull的区别：</p>
<table>
<thead>
<tr>
<th>标志</th>
<th>值</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>NULL</td>
<td>(void *)0</td>
<td>C指针的字面零值</td>
</tr>
<tr>
<td>nil</td>
<td>(id)0</td>
<td>Objective-C对象的字面零值</td>
</tr>
<tr>
<td>Nil</td>
<td>(Class)0</td>
<td>Objective-C类的字面零值</td>
</tr>
<tr>
<td>NSNull</td>
<td>[NSNull null]</td>
<td>用来表示零值的单独的对象</td>
</tr>
</tbody>
</table>
<h3 id="3、总结">3、总结</h3><p>通过这个例子，可能看出看似简单的问题，其实都有非常值得探究的深渊！希望自己不要自尽为是，虚心学习，考虑问题有更多角度，细致严谨！</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://www.jianshu.com/p/fd32b759bace" target="_blank" rel="external">判断NSString为空容易犯的错 - 简书</a></li>
<li><a href="http://nshipster.cn/nil/" target="_blank" rel="external">nil / Nil / NULL / NSNull - NSHipster</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>判断字符串是否为空的情况，一般判断的逻辑如下：</p>
<ul>
<li>是否为nil </li>
<li>是否是NSNull</li>
<li>是否去掉空格之后长度为0</li>
</ul>
<p>在某书看到如下代码：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//www.jianshu.com/p/fd32b759bace</span></span><br><span class="line">來源：简书</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="NSNull" scheme="https://iHTCboy.com/tags/NSNull/"/>
    
      <category term="NSString" scheme="https://iHTCboy.com/tags/NSString/"/>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="nil" scheme="https://iHTCboy.com/tags/nil/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AppStore无法内购相关问题解决的解决方案]]></title>
    <link href="https://iHTCboy.com/2018/03/14/2018-03-14_AppStore%E6%97%A0%E6%B3%95%E5%86%85%E8%B4%AD%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://iHTCboy.com/2018/03/14/2018-03-14_AppStore无法内购相关问题解决的解决方案/</id>
    <published>2018-03-14T14:12:26.000Z</published>
    <updated>2018-05-06T08:46:14.204Z</updated>
    <content type="html"><![CDATA[<h3 id="1-如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：">1.如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：</h3><ol>
<li>请确认应用是从 App Store 上面下载的。</li>
<li>请确认不是越狱安装破解插件导致无法购买。</li>
<li>请确认网络是否通畅</li>
<li>请确认在 系统设置 &gt; 通用 &gt; 访问限制 中的 “App 内购买项目” 是否为打开状态。</li>
<li>注销你的 Apple ID 重新进入游戏，重新尝试购买；</li>
<li><p>如果你已经购买成功但是却没有收到金币，那么你可以切换网络成移动数据网络，然后重新打开游戏确认。</p>
<a id="more"></a>
</li>
</ol>
<p><code>如果以上情况都排除了还是无法进行购买，请联系我们技术。</code></p>
<h3 id="2-点击支付购买的时候，提示“您的购买无法完成，如需帮助，请联系iTunes支持”">2.点击支付购买的时候，提示“您的购买无法完成，如需帮助，请联系iTunes支持”</h3><p>您好，此情况是触发了苹果公司的安全机制，例如：高频率的购买、频繁更换国家/地区购买、高额的购买等等原因，需联系苹果公司客服提供Apple ID 核实具体原因。建议直接拨打苹果客服电话：</p>
<blockquote>
<p>中國大陸：400-666-8800<br>香港（中文） ：(852) 2112-0099<br>香港（英文）： (852) 2112-0099<br>澳門：先撥 0800-111， 再撥 800-708-5413<br>紐西蘭：0800127753<br>馬來西亞：1-800803638<br>澳洲：（61）1300321456<br>新加坡境內： 800-186-1087<br>新加坡境外： (65) 6835-1812<br>印尼：08001027753<br>日本境內： 0120-27753-5<br>日本境外： (81) 3-6365-4705<br>越南： 1800 1127</p>
</blockquote>
<p>更多查看：<a href="https://support.apple.com/zh-cn/HT201232" target="_blank" rel="external">联系 Apple 获取支持和服务 - Apple 支持</a></p>
<h3 id="3-为什么我用苹果手机充值的时候偶尔会出现延迟到账的情况？">3.为什么我用苹果手机充值的时候偶尔会出现延迟到账的情况？</h3><p>苹果系统用户在使用内购服务时候，均通过苹果账号生成订单并提交给我司进行对于商品发货，费用并非由我司直接扣除，因此中间可能会产生延迟发货情况，还请在交易过程中耐心等待。</p>
<h3 id="4-获取其他_iTunes_购买项目的帮助">4.获取其他 iTunes 购买项目的帮助</h3><ul>
<li>有些超过 90 天的项目和购买不符合退款条件。请<a href="https://www.apple.com/legal/internet-services/itunes/appstore/cn/terms.html" target="_blank" rel="external">参阅条款和条件以了解更多信息</a>。</li>
<li>了解 <a href="https://support.apple.com/zh-cn/HT201359" target="_blank" rel="external">iTunes Store 购买项目如何收费</a> — 包括通过“家人共享”功能购买的项目。</li>
<li>如果您收到一封关于帐户收费的电子邮件，但您不记得授权过这笔收费，请<a href="https://support.apple.com/zh-cn/HT204759" target="_blank" rel="external">检查确认这封电子邮件是不是合法</a>。</li>
<li>获取有关通过您可能已下载到设备上的应用进行的<a href="https://support.apple.com/zh-cn/HT202039" target="_blank" rel="external">订阅和重复购买</a>的帮助。</li>
<li>获取关于 <a href="https://support.apple.com/zh-cn/HT207594" target="_blank" rel="external">iCloud 储存空间方案降级</a>方面的帮助。</li>
<li>您还可以在 <a href="https://support.apple.com/zh-cn/HT204088" target="_blank" rel="external">App Store 或 iTunes Store 中查看购买历史记录</a>。</li>
</ul>
<h3 id="5-参考">5.参考</h3><ul>
<li><a href="https://support.apple.com/zh-cn/HT202023" target="_blank" rel="external">关于 App 内购买项目 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT204530#contact" target="_blank" rel="external">如果您没有看到应用内购买项目 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT204084" target="_blank" rel="external">获取关于从 App Store、iTunes Store 或 iBooks Store 所购项目的帮助 - Apple 支持</a></li>
<li><a href="https://griddiary.uservoice.com/knowledgebase/articles/486079-无法内购问题检查列表" target="_blank" rel="external">无法内购问题检查列表 – Support Center | Grid Diary</a></li>
<li><a href="https://support.apple.com/zh-cn/HT201266" target="_blank" rel="external">更改或移除 Apple ID 付款信息</a></li>
<li><a href="https://support.apple.com/zh-cn/HT202039" target="_blank" rel="external">查看、更改或取消您的订阅 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT201232" target="_blank" rel="external">联系 Apple 获取支持和服务 - Apple 支持</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：">1.如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：</h3><ol>
<li>请确认应用是从 App Store 上面下载的。</li>
<li>请确认不是越狱安装破解插件导致无法购买。</li>
<li>请确认网络是否通畅</li>
<li>请确认在 系统设置 &gt; 通用 &gt; 访问限制 中的 “App 内购买项目” 是否为打开状态。</li>
<li>注销你的 Apple ID 重新进入游戏，重新尝试购买；</li>
<li><p>如果你已经购买成功但是却没有收到金币，那么你可以切换网络成移动数据网络，然后重新打开游戏确认。</p>]]>
    
    </summary>
    
      <category term="AppStore" scheme="https://iHTCboy.com/tags/AppStore/"/>
    
      <category term="无法内购" scheme="https://iHTCboy.com/tags/%E6%97%A0%E6%B3%95%E5%86%85%E8%B4%AD/"/>
    
      <category term="苹果客服电话" scheme="https://iHTCboy.com/tags/%E8%8B%B9%E6%9E%9C%E5%AE%A2%E6%9C%8D%E7%94%B5%E8%AF%9D/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NSString的boolValue方法甚解]]></title>
    <link href="https://iHTCboy.com/2018/03/11/2018-03-11_NSString%E7%9A%84boolValue%E6%96%B9%E6%B3%95%E7%94%9A%E8%A7%A3/"/>
    <id>https://iHTCboy.com/2018/03/11/2018-03-11_NSString的boolValue方法甚解/</id>
    <published>2018-03-11T13:22:26.000Z</published>
    <updated>2018-05-06T08:46:40.122Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>NSString的<code>boolValue</code>之前有使用，但是一直没有真正了解什么时候返回YES（true）或NO(false)。其实，苹果在官方文档中已经写的很清楚，按<code>command</code> + <code>control</code> 点击<code>boolValue</code>进入文档就可以看到：</p>
<p>&gt;</p>
<blockquote>
<p><strong>boolValue</strong><br>The Boolean value of the string.</p>
<p><strong>Declaration</strong><br>@property(readonly) BOOL boolValue;</p>
<p><strong>Discussion</strong><br>This property is YES on encountering one of “Y”, “y”, “T”, “t”, or a digit 1-9—the method ignores any trailing characters. This property is NO if the receiver doesn’t begin with a valid decimal text representation of a number.<br>The property assumes a decimal representation and skips whitespace at the beginning of the string. It also skips initial whitespace characters, or optional -/+ sign followed by zeroes.</p>
</blockquote>
 <a id="more"></a>
<p><strong>中文意思</strong>:</p>
<blockquote>
<p>字符串中包含“Y”，“y”，“T”，“t”，或1-9的数字开关时，这个属性值为YES。</p>
<p>如果不是以有效的十进制数字开始的文本表示，则此属性为NO。</p>
<p>该属性采用十进制表示法，并在字符串的开头跳过空格。它也会跳过最初的空格字符（忽略全部的空格开头），或者单个 -/+ 符号开头。</p>
</blockquote>
<h3 id="2、测试一波">2、测试一波</h3><p>大家可以思考一下，下面的代码输出结果是什么？</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">NSArray *tests = @[ @<span class="string">"Y"</span>,</span><br><span class="line">                        @<span class="string">"N"</span>,</span><br><span class="line">                        @<span class="string">"T"</span>,</span><br><span class="line">                        @<span class="string">"F"</span>,</span><br><span class="line">                        @<span class="string">"t"</span>,</span><br><span class="line">                        @<span class="string">"f"</span>,</span><br><span class="line">                        @<span class="string">"1"</span>,</span><br><span class="line">                        @<span class="string">"0"</span>,</span><br><span class="line">                        @<span class="string">"Yes"</span>,</span><br><span class="line">                        @<span class="string">"No"</span>,</span><br><span class="line">                        @<span class="string">"No really no"</span>,</span><br><span class="line">                        @<span class="string">"true"</span>,</span><br><span class="line">                        @<span class="string">"false"</span>,</span><br><span class="line">                        @<span class="string">"To be or not to be"</span>,</span><br><span class="line">                        @<span class="string">"False"</span>,</span><br><span class="line">                        @<span class="string">"3567"</span>,</span><br><span class="line">                        @<span class="string">"0123456789"</span>,</span><br><span class="line">                        @<span class="string">"000"</span>,</span><br><span class="line">                        @<span class="string">"0ab"</span>,</span><br><span class="line">                        @<span class="string">"1cd"</span>,</span><br><span class="line">                        @<span class="string">"abc"</span>,</span><br><span class="line">                        @<span class="string">""</span>,</span><br><span class="line">                        @<span class="string">"+aeb"</span>,</span><br><span class="line">                        @<span class="string">"+3sb"</span>,</span><br><span class="line">                        @<span class="string">"-ss"</span>,</span><br><span class="line">                        @<span class="string">"-01"</span>,</span><br><span class="line">                        @<span class="string">"-21"</span>,</span><br><span class="line">                        @<span class="string">" 1"</span>,</span><br><span class="line">                        @<span class="string">" 0"</span>,</span><br><span class="line">                        @<span class="string">"--1"</span>,</span><br><span class="line">                        @<span class="string">"++1"</span>,</span><br><span class="line">                        @<span class="string">"-+1"</span>,</span><br><span class="line">                        @<span class="string">"  2"</span>,</span><br><span class="line">                        @<span class="string">"  0"</span>,</span><br><span class="line">                        @<span class="string">"   2  0"</span>,</span><br><span class="line">                        @<span class="string">"   0  2"</span>,</span><br><span class="line">                        @<span class="string">"  20"</span>,</span><br><span class="line">                        @<span class="string">"000-1"</span>,</span><br><span class="line">                        @<span class="string">" + 111"</span>,</span><br><span class="line">                        @<span class="string">"  +111"</span></span><br><span class="line">                        ];</span><br><span class="line">    NSArray *boolToString = @[@<span class="string">"NO"</span>, @<span class="string">"YES"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (NSString *test <span class="keyword">in</span> tests)&#123;</span><br><span class="line">        NSLog(@<span class="string">"boolValue:\"%@\" =&gt; %@"</span>, test, boolToString<span class="string">[[test boolValue]]</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、结果">3、结果</h3><p>运行结果：</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">boolValue:</span><span class="string">"Y"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"N"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"T"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"F"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"t"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"f"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"1"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"Yes"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"No"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"No really no"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"true"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"false"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"To be or not to be"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"False"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"3567"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0123456789"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"000"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0ab"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"1cd"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"abc"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">""</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"+aeb"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"+3sb"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-ss"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-01"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-21"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" 1"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" 0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"--1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"++1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-+1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  2"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"   2  0"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"   0  2"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  20"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"000-1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" + 111"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  +111"</span> =&gt; YES</span><br></pre></td></tr></table></figure>
<h3 id="4、总结">4、总结</h3><p>不知道大家答对多少？是不是对这个方法又熟悉了几分呢？实践见真知。</p>
<h3 id="5、参考引用">5、参考引用</h3><ul>
<li><a href="http://blog.manbolo.com/2013/07/22/nsstring-boolvalue" target="_blank" rel="external">[NSString boolValue]-Manbolo Blog</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>NSString的<code>boolValue</code>之前有使用，但是一直没有真正了解什么时候返回YES（true）或NO(false)。其实，苹果在官方文档中已经写的很清楚，按<code>command</code> + <code>control</code> 点击<code>boolValue</code>进入文档就可以看到：</p>
<p>&gt;</p>
<blockquote>
<p><strong>boolValue</strong><br>The Boolean value of the string.</p>
<p><strong>Declaration</strong><br>@property(readonly) BOOL boolValue;</p>
<p><strong>Discussion</strong><br>This property is YES on encountering one of “Y”, “y”, “T”, “t”, or a digit 1-9—the method ignores any trailing characters. This property is NO if the receiver doesn’t begin with a valid decimal text representation of a number.<br>The property assumes a decimal representation and skips whitespace at the beginning of the string. It also skips initial whitespace characters, or optional -/+ sign followed by zeroes.</p>
</blockquote>]]>
    
    </summary>
    
      <category term="NSString" scheme="https://iHTCboy.com/tags/NSString/"/>
    
      <category term="boolValue" scheme="https://iHTCboy.com/tags/boolValue/"/>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
</feed>
