<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iHTCboy's blog]]></title>
  <subtitle><![CDATA[Learn something of everything, Learn everything of something.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://iHTCboy.com/"/>
  <updated>2018-07-14T09:05:44.209Z</updated>
  <id>https://iHTCboy.com/</id>
  
  <author>
    <name><![CDATA[iHTCboy]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[macOS的控制台Console.app]]></title>
    <link href="https://iHTCboy.com/2018/07/13/2018-07-13_macOS%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0Console/"/>
    <id>https://iHTCboy.com/2018/07/13/2018-07-13_macOS的控制台Console/</id>
    <published>2018-07-13T14:29:16.000Z</published>
    <updated>2018-07-14T09:05:44.209Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>从Xcode9.4开始，Devices 界面已经移除了真机设备的日志输出log，而移到macOS系统独立的控制台app(Console.app):</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console.app.png" alt="20180713-macOS-Console.app.png-w200"></p>
<a id="more"></a>
<h3 id="2、控制台_Console-app">2、控制台 Console.app</h3><blockquote>
<p>查看日志信息和报告以获取有关 Mac 和设备的诊断信息。</p>
</blockquote>
<p>控制台应用很早的macOS版本就有了，但是不常用，其实Xcode中移除，也是因为与控制器功能相似，对于Xcode来说，也许真的是一个负担，并且Xcode现在bug已经够多了，移除也是一个好事吧。</p>
<p>可以直接看苹果文档：<a href="https://support.apple.com/zh-cn/guide/console/welcome/1.0" target="_blank" rel="external">欢迎使用控制台 - Apple 支持</a></p>
<h3 id="3、一些技巧">3、一些技巧</h3><p>相对于以前想看设备的日志，其实，控制台可谓更轻量，更快捷，更专业吧。下面就说说一些技巧：</p>
<ul>
<li>筛选所需<br>我们打开控制台的目的，一般都是调试我们自己开发的iOS应用吧！这时候，链接设备后，其实我们只关心我们自己的应用的日志，但默认情况下，会显示所有应用当前输出的日志，这时候，筛选所需显得很有必要！<br>找到你应用输出的一条日志，然后鼠标右键（或按住 Control 键点按日志信息），然后选择 <code>显示“进程&#39;XXX&#39;”</code>：</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Filter-Process-Items.png" alt="20180713-macOS-Console-Filter-Process-Items.png"></p>
<p>这里示例<code>WeRead</code>(微信读书)的进程筛选，然后就会只显示这个应用的全部日志，相对于Xcode的日志界面，其实非常方便啦~</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Filter-Process-Items-activity.png" alt="20180713-macOS-Console-Filter-Process-Items-activity.png"></p>
<ul>
<li>显示所需<br>另一方面，第一条日志默认只显示一行，如果想显示全部，可以点击后，在下方显示具体的内容：</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Show-Items.png" alt="20180713-macOS-Console-Show-Items.png"></p>
<p>如果用快捷键（→ 和 ←）左右箭头键可以快速在当前选择的行显示全部的内容：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console-Show-Specific-Items.png" alt="20180713-macOS-Console-Show-Specific-Items.png"></p>
<h3 id="4、快捷键">4、快捷键</h3><p>使用键盘快捷键快速完成“控制台”中的许多任务。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command-Option-F</td>
<td>搜索日志信息和活动</td>
</tr>
<tr>
<td>Command-F</td>
<td>在日志信息中查找文本</td>
</tr>
<tr>
<td>Command-G</td>
<td>跳到下一条搜索结果</td>
</tr>
<tr>
<td>Command-Shift-G</td>
<td>跳到上一条搜索结果</td>
</tr>
<tr>
<td>Command-K</td>
<td>清除日志信息或活动</td>
</tr>
<tr>
<td>Shift-Command-R</td>
<td>重新载入日志信息或活动</td>
</tr>
<tr>
<td>Shift-Command-N</td>
<td>跳到最近的日志信息或活动</td>
</tr>
<tr>
<td>Command-0</td>
<td>显示或隐藏边栏</td>
</tr>
<tr>
<td>Command-R</td>
<td>在 Finder 中显示报告</td>
</tr>
<tr>
<td>→</td>
<td>在本行展开所选日志信息</td>
</tr>
<tr>
<td>←</td>
<td>在本行折叠所选日志信息</td>
</tr>
<tr>
<td>Control-Command-F</td>
<td>进入或退出全屏幕视图</td>
</tr>
<tr>
<td>Command-C</td>
<td>拷贝所选日志信息文本</td>
</tr>
</tbody>
</table>
<h3 id="5、总结">5、总结</h3><p>这个过程，大家也许会发现，用快捷键是提高效率的直接方式，用 <code>Alfred</code> 来打开也很方便（后面计划写一个<code>Alfred</code>开发者效率的文章，期待吧!）。刚开始，也许对于打开控制台查看日志log输出不习惯，但有时候只是查看日志排查问题，直接打开 Console.app 真的方便很多（你知道打开Xcode需要的时候更久，并且在打开Devices更是久啊），所以，综上，这个控制台 Console.app也是一件好事！</p>
<p>说到这里，其实，我更想吐槽的是Xcdoe！！！越来越庞大，还有Swift的交替，还有功能更强大？直接导致品控越来越差。所以，从这个角度来看，苹果把Xcode的很多相关但不重要的功能单独出来，也许是到于Xcode开发团队来说，是一件好事，到后续的版本迭代也是好事吧，希望Xcode10给开发者带来<code>新</code>体验！期待9月！！</p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://support.apple.com/zh-cn/guide/console/welcome/1.0" target="_blank" rel="external">欢迎使用控制台 - Apple 支持</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>从Xcode9.4开始，Devices 界面已经移除了真机设备的日志输出log，而移到macOS系统独立的控制台app(Console.app):</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180713-macOS-Console.app.png" alt="20180713-macOS-Console.app.png-w200"></p>]]>
    
    </summary>
    
      <category term="Console.app" scheme="https://iHTCboy.com/tags/Console-app/"/>
    
      <category term="macOS" scheme="https://iHTCboy.com/tags/macOS/"/>
    
      <category term="苹果控制台" scheme="https://iHTCboy.com/tags/%E8%8B%B9%E6%9E%9C%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python爬虫实践入门篇]]></title>
    <link href="https://iHTCboy.com/2018/07/10/2018-07-10_Python%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://iHTCboy.com/2018/07/10/2018-07-10_Python爬虫实践入门篇/</id>
    <published>2018-07-10T13:49:16.000Z</published>
    <updated>2018-07-14T08:32:58.431Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>学习Python二个多月啦，周末时开始兴趣学习爬虫，虽然有点概念，但是也折腾了大半天，下面就开始简要记录一下吧。</p>
<h3 id="2、需要的准备">2、需要的准备</h3><ul>
<li>Python：需要基本的python语法基础</li>
<li>requests：专业用于请求处理，<a href="http://docs.python-requests.org/zh_CN/latest/" target="_blank" rel="external">requests库学习文档中文版</a></li>
<li>lxml：其实可以用pythonth自带的正则表达式库re，但是为了更加简单入门，用 <a href="https://lxml.de/index.html" target="_blank" rel="external">lxml</a> 中的 etree 进行网页数据定位爬取。</li>
</ul>
<a id="more"></a>
<p>通过pip安装 requests 和 lxml 库，在终端输入：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> requests</span><br><span class="line">pip <span class="keyword">install</span> lxml</span><br></pre></td></tr></table></figure></p>
<p>注：如果是安装到Python3就用<code>pip3 install</code></p>
<p>下载过程成功的输出：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Collecting lxml</span><br><span class="line">  Cache entry deserialization failed, entry ignored</span><br><span class="line">  Downloading https:<span class="comment">//files.pythonhosted.org/packages/00/fd/5e65f293e366a63198dade275b886e5d24752367c2e67e3993023b0d58ef/lxml-4.2.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.7MB)</span></span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">8.7</span>MB <span class="number">821</span>kB/s </span><br><span class="line">Installing collected packages: lxml</span><br><span class="line">Successfully installed lxml-<span class="number">4.2</span><span class="number">.3</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>注：<br>如果安装过程遇到任何问题，请谷歌吧，如果网上找不到答案，也不要问我！找不到答案我直播吃翔！！！</li>
</ul>
<h3 id="3、实践过程">3、实践过程</h3><p>为了这过程有点兴趣，我找了一个美图的网站，爬虫了一波图片~</p>
<p>实践爬虫的网站链接：<a href="https://www点aitaotu点com（注意，这不是打广告！）" target="_blank" rel="external">https://www点aitaotu点com（注意，这不是打广告！）</a></p>
<ul>
<li>下载页面html内容：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">page = <span class="string">'https://www点aitaotu点com/guonei/36350.html'</span></span><br><span class="line">data = requests.get(page).text</span><br><span class="line">dom = etree.HTML(data)</span><br></pre></td></tr></table></figure>
<ul>
<li>解析(定位)元素:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title_path = <span class="string">'//*[@id="photos"]/h1/text()'</span></span><br><span class="line">totalpage_path = <span class="string">'//*[@id="picnum"]/span[2]/text()'</span></span><br><span class="line">image_path = <span class="string">'//*[@id="big-pic"]/p/a/img'</span></span><br></pre></td></tr></table></figure>
<p>这里的xpath怎么获取，就是网页里面，打开开发者检查元素工具，在safari和chrome都有这个功能：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-html-show-element.png" alt="20180710-html-show-element.png"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-html-copy-xpath.png" alt="20180710-html-copy-xpath.png"></p>
<ul>
<li>获取元素内容：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title = dom.xpath(title_path)[<span class="number">0</span>]</span><br><span class="line">total = dom.xpath(totalpage_path)[<span class="number">0</span>]</span><br><span class="line">image_url = dom.xpath(image_path)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">img_src = image_url.xpath(<span class="string">'./@src'</span>)[<span class="number">0</span>]</span><br><span class="line">img_alt = image_url.xpath(<span class="string">'./@alt'</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p>这里解析就不解析了，其实通过PyCharm IDE可能实时查看每个对象的属性，可以更清晰的了解解析的元素结构，帮助理解，这里就暂时不说IDE的方法啦，大家有兴趣可以试试，也是很简单的~</p>
<p>最后拿到图片链接，就是下载图片然后保存输出到电脑啊！（文章尾附完整代码！）</p>
<h3 id="4、总结">4、总结</h3><p>爬虫入门就这样结束啦！学习了python后，发现语法很简单，代码很轻松就完成！不到100行！！！</p>
<p>python通过各种库，解决了编程语言自身的庞大，完成了自己是胶水语言的特点！</p>
<p>通过这次实践，其实，有很多细节东西，只有自己做了才知道，比较说保存图片的路径，找到当前目录，怎么分目录保存，目录文件操作，这些都是自己之前实践了一个django工具学习过来的。所以，现在经历多了，才知道，什么时候学习都不晚，有些东西，真的是不知道什么时候你会用上，真的，自己早知道这个道理几年，就不像年轻时那么想，这东西怎么可能会用上，不学！！！果然是年轻坑爹！！！<strong>学会老，学到老吧！</strong></p>
<h3 id="5、代码">5、代码</h3><ul>
<li><a href="https://github.com/iHTCboy/WebCrawlerExample" target="_blank" rel="external">iHTCboy/WebCrawlerExample: 网页爬虫实践示例</a></li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/local/bin/python3</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadImages</span><span class="params">(url)</span>:</span></span><br><span class="line">    data = requests.get(page).text</span><br><span class="line">    dom = etree.HTML(data)</span><br><span class="line"></span><br><span class="line">    title_path = <span class="string">'//*[@id="photos"]/h1/text()'</span></span><br><span class="line">    totalpage_path = <span class="string">'//*[@id="picnum"]/span[2]/text()'</span></span><br><span class="line">    image_path = <span class="string">'//*[@id="big-pic"]/p/a/img'</span></span><br><span class="line"></span><br><span class="line">    title = dom.xpath(title_path)[<span class="number">0</span>]</span><br><span class="line">    total = dom.xpath(totalpage_path)[<span class="number">0</span>]</span><br><span class="line">    image_url = dom.xpath(image_path)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    img_src = image_url.xpath(<span class="string">'./@src'</span>)[<span class="number">0</span>]</span><br><span class="line">    img_alt = image_url.xpath(<span class="string">'./@alt'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    print(title, total, img_src, img_alt)</span><br><span class="line"></span><br><span class="line">    cwd = os.getcwd()</span><br><span class="line">    save_path = os.path.join(cwd, <span class="string">'images/'</span> + title)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(save_path):</span><br><span class="line">        os.makedirs(save_path)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">u'保存图片的路径：'</span>, save_path)</span><br><span class="line"></span><br><span class="line">    img_path = os.path.dirname(img_src)</span><br><span class="line">    img_name = os.path.basename(img_src)</span><br><span class="line">    img_format = img_name.split(<span class="string">'.'</span>)[<span class="number">1</span>]</span><br><span class="line">    print(img_path, img_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, int(total) + <span class="number">1</span>):</span><br><span class="line">        new_img_url = <span class="string">'%s/%02d.%s'</span> % (img_path, i, img_format)</span><br><span class="line">        save_img_path = <span class="string">'%s/%02d.%s'</span> % (save_path, i, img_format)</span><br><span class="line">        <span class="comment"># 下载图片</span></span><br><span class="line">        image = requests.get(new_img_url)</span><br><span class="line">        <span class="comment"># 命名并保存图片</span></span><br><span class="line">        <span class="keyword">with</span> open(save_img_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(image.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    url = <span class="string">'https://www.aitaotu.com/'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># download list</span></span><br><span class="line">    list = [<span class="string">'guonei/36350.html'</span>, <span class="string">'guonei/36352.html'</span>, <span class="string">'guonei/36351.html'</span>, <span class="string">'guonei/36357.html'</span>, <span class="string">'guonei/36250.html'</span>,</span><br><span class="line">            <span class="string">'guonei/36341.html'</span>, <span class="string">'guonei/36334.html'</span>, <span class="string">'guonei/36306.html'</span>, <span class="string">'guonei/35969.html'</span>, <span class="string">'guonei/35219.html'</span>,</span><br><span class="line">            <span class="string">'guonei/36290.html'</span>, <span class="string">'guonei/36277.html'</span>, <span class="string">'guonei/36263.html'</span>, <span class="string">'gangtai/36303.html'</span>, <span class="string">'gangtai/36226.html'</span>,</span><br><span class="line">            <span class="string">'guonei/35260.html'</span>, <span class="string">'guonei/35247.html'</span>, <span class="string">'guonei/36257.html'</span>, <span class="string">'guonei/36221.html'</span>, <span class="string">'guonei/21647.html'</span>,</span><br><span class="line">            <span class="string">'guonei/21499.html'</span>, <span class="string">'guonei/36319.html'</span>, <span class="string">'guonei/34903.html'</span>, <span class="string">'guonei/14148.html'</span>, <span class="string">'guonei/33780.html'</span>,</span><br><span class="line">            <span class="string">'guonei/14338.html'</span>, <span class="string">'guonei/14550.html'</span>, <span class="string">'guonei/14818.html'</span>, <span class="string">'guonei/16820.html'</span>, <span class="string">'guonei/18388.html'</span>,</span><br><span class="line">            <span class="string">'guonei/13447.html'</span>, <span class="string">'guonei/25912.html'</span>, <span class="string">'guonei/13991.html'</span>, <span class="string">'guonei/8246.html'</span>, <span class="string">'guonei/36171.html'</span></span><br><span class="line">            ]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">u'准备下载：%d套图'</span>, len(list))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> type <span class="keyword">in</span> list:</span><br><span class="line">        page = url + type</span><br><span class="line">        downloadImages(page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(<span class="string">u'下载完成啦！'</span>)</span><br></pre></td></tr></table></figure>
<p>代码就没有太多注释，因为很简单，就说一下运行方式吧，在终端：</p>
<p>python2:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> YellowImage.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p>
<p>python3:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> YellowImage.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p>
<p>最后的成果：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180710-last-results.png" alt="20180710-last-results.png"></p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python教程 - 廖雪峰的官方网站</a></li>
<li><a href="http://docs.python-requests.org/zh_CN/latest/" target="_blank" rel="external">Requests: 让 HTTP 服务人类 — Requests 2.18.1 文档</a></li>
<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html" target="_blank" rel="external">Beautiful Soup 4.2.0 文档</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式30分钟入门教程</a></li>
<li><a href="http://tool.oschina.net/regex/" target="_blank" rel="external">在线正则表达式测试</a></li>
<li><a href="https://lxml.de/index.html" target="_blank" rel="external">lxml - Processing XML and HTML with Python</a></li>
<li><a href="https://www.kawabangga.com/posts/2058" target="_blank" rel="external">Python lxml教程 | 卡瓦邦噶！</a></li>
<li><a href="https://piaosanlang.gitbooks.io/spiders/02day/section2.3.html" target="_blank" rel="external">非结构化数据之lxml库 · 网络爬虫教程</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>学习Python二个多月啦，周末时开始兴趣学习爬虫，虽然有点概念，但是也折腾了大半天，下面就开始简要记录一下吧。</p>
<h3 id="2、需要的准备">2、需要的准备</h3><ul>
<li>Python：需要基本的python语法基础</li>
<li>requests：专业用于请求处理，<a href="http://docs.python-requests.org/zh_CN/latest/">requests库学习文档中文版</a></li>
<li>lxml：其实可以用pythonth自带的正则表达式库re，但是为了更加简单入门，用 <a href="https://lxml.de/index.html">lxml</a> 中的 etree 进行网页数据定位爬取。</li>
</ul>]]>
    
    </summary>
    
      <category term="Python" scheme="https://iHTCboy.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://iHTCboy.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[聊聊简书文章被锁定]]></title>
    <link href="https://iHTCboy.com/2018/07/08/2018-07-08_%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E8%A2%AB%E9%94%81%E5%AE%9A/"/>
    <id>https://iHTCboy.com/2018/07/08/2018-07-08_简书文章被锁定/</id>
    <published>2018-07-08T10:49:16.000Z</published>
    <updated>2018-07-10T13:31:42.845Z</updated>
    <content type="html"><![CDATA[<h3 id="1、文章被锁定">1、文章被锁定</h3><p>昨晚看到简书消息：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_lock.png" alt="20180708-jianshu_lock.png"></p>
<p>原文章已经转移到个人博客：</p>
<ul>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
<li><a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty">《绝代宠妓》（Dangerous Beauty）观后感</a>观后感)</li>
</ul>
<h3 id="2、去中心化">2、去中心化</h3><a id="more"></a>
<p>我不知道这是机器过滤还是人工选择，但作为第一批用户，见证成长，为这样的行为感觉太可惜。想起简书很久之前，我在14年无意见看到简书时，就觉得这个写作社区很棒，当时还联系了简书，交流了一下：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_feedback.png" alt="20180708-jianshu_feedback.png"></p>
<p>今天聊这个，其实还是不想吐槽什么。但，互联网发展到现在，从web的去中心化，现在又回到一个一个的社区，一个一个的app，我想乔布斯也不认为这是未来。去中心化，我认为是未来的方向，虽然现在00后之前的人，在于朋友圈子，QQ圈子，形成了国内的大中心。就像每一个中国思想的人都曾想拥有自己的房子一样。</p>
<p>我想象，00后之后，大家对房子的态度不会在像现在这样，对待互联网也不像现在，百花齐放，去中心化，也许是需要时间吧~</p>
<h3 id="参考引用">参考引用</h3><ul>
<li>《绝代宠妓》（Dangerous Beauty）观后感: <a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感">https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty)观后感</a></li>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、文章被锁定">1、文章被锁定</h3><p>昨晚看到简书消息：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/07/20180708-jianshu_lock.png" alt="20180708-jianshu_lock.png"></p>
<p>原文章已经转移到个人博客：</p>
<ul>
<li><a href="https://ihtcboy.com/2015/07/26/2015-07-26_建立信任机制">《建立信任机制》</a></li>
<li><a href="https://ihtcboy.com/2015/06/22/2015-06-22_《绝代宠妓》(Dangerous_Beauty">《绝代宠妓》（Dangerous Beauty）观后感</a>观后感)</li>
</ul>
<h3 id="2、去中心化">2、去中心化</h3>]]>
    
    </summary>
    
      <category term="去中心化" scheme="https://iHTCboy.com/tags/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96/"/>
    
      <category term="简书文章被封" scheme="https://iHTCboy.com/tags/%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E8%A2%AB%E5%B0%81/"/>
    
      <category term="违反规定" scheme="https://iHTCboy.com/tags/%E8%BF%9D%E5%8F%8D%E8%A7%84%E5%AE%9A/"/>
    
      <category term="life" scheme="https://iHTCboy.com/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[淡淡iOS12独立沙盒账户登陆]]></title>
    <link href="https://iHTCboy.com/2018/06/20/2018-06-20_%E6%B7%A1%E6%B7%A1iOS12%E7%8B%AC%E7%AB%8B%E6%B2%99%E7%9B%92%E8%B4%A6%E6%88%B7%E7%99%BB%E9%99%86/"/>
    <id>https://iHTCboy.com/2018/06/20/2018-06-20_淡淡iOS12独立沙盒账户登陆/</id>
    <published>2018-06-20T11:49:16.000Z</published>
    <updated>2018-07-10T13:31:34.613Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>在iOS12前，如果对沙盒账号测试充值不熟悉的同学，也许会遇到过这样的情况：</p>
<blockquote>
<p>不允许创建 iTunes 账户<br>此 AppleID 目前无法用于 iTunes Store。请稍后重试</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-sandbox-loginerror.png" alt="20180620-sandbox-loginerror.png"></p>
<p>其实，测试账号不能在设置里登陆，只能在测试app里面发起充值时弹窗中登陆。苹果的文档也有说明，<a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" target="_blank" rel="external">https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html</a></p>
<h3 id="2、iOS_Sandbox">2、iOS Sandbox</h3><p>iOS12 终于把沙盒储值账号单独出来：</p>
<a id="more"></a>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-iOS12-sandbox.png" alt="20180620-iOS12-sandbox.png"></p>
<p>其实，沙盒账号是苹果账号的一种，沙盒账号与正式账号是唯一，也就是说一个邮箱只能是沙盒或者是正式账号，注册了其一就无法在用于另一种。</p>
<p>现在把沙盒账号独立出来，对于开发者来说，肯定是好事，因为很多次运营测试同事跑过来问，为什么沙盒账号登陆不了？？？<br>每次遇到新人，我只能默默的，也许苹果也发现了这个问题，而现在这个问题解决了！！！</p>
<p>其实，苹果的充值很多问题，其中掉单是最严重也是吐槽最多的，也许，苹果正在优化这一块？也许~ 期待吧！</p>
<h3 id="3、参考">3、参考</h3><ul>
<li><a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" target="_blank" rel="external">Apple_TestingInAppPurchases_Guide</a></li>
<li><a href="https://stackoverflow.com/questions/38034491/unable-to-log-in-with-sandbox-test-users-on-device" target="_blank" rel="external">unable-to-log-in-with-sandbox-test-users-on-device</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>在iOS12前，如果对沙盒账号测试充值不熟悉的同学，也许会遇到过这样的情况：</p>
<blockquote>
<p>不允许创建 iTunes 账户<br>此 AppleID 目前无法用于 iTunes Store。请稍后重试</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/06/20180620-sandbox-loginerror.png" alt="20180620-sandbox-loginerror.png"></p>
<p>其实，测试账号不能在设置里登陆，只能在测试app里面发起充值时弹窗中登陆。苹果的文档也有说明，<a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html">https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html</a></p>
<h3 id="2、iOS_Sandbox">2、iOS Sandbox</h3><p>iOS12 终于把沙盒储值账号单独出来：</p>]]>
    
    </summary>
    
      <category term="iOS12" scheme="https://iHTCboy.com/tags/iOS12/"/>
    
      <category term="sandbox" scheme="https://iHTCboy.com/tags/sandbox/"/>
    
      <category term="沙盒账户" scheme="https://iHTCboy.com/tags/%E6%B2%99%E7%9B%92%E8%B4%A6%E6%88%B7/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS快速清除全部的消息推送]]></title>
    <link href="https://iHTCboy.com/2018/05/26/2018-05-26_iOS%E5%BF%AB%E9%80%9F%E6%B8%85%E9%99%A4%E5%85%A8%E9%83%A8%E7%9A%84%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    <id>https://iHTCboy.com/2018/05/26/2018-05-26_iOS快速清除全部的消息推送/</id>
    <published>2018-05-26T15:46:16.000Z</published>
    <updated>2018-07-12T15:09:02.721Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>越来越多的应用，请求用户推送权限，一般情况下，普通应用我是不允许的，除了通讯应用、支付宝（银行app有很多不羊毛的活动推送，不允许）、GTD（Things、Due）、健身（Kepp、SixPack），其它的像淘宝天猫、京东，每次打开app，都要反复问我还要不要打开推送，你们就不能先调查一下我用的iOS系统多久吗？请问一个用了4年以上的用户，如果他还想打你们家的app推送，难道不知道在那里开吗？脑子进水吧。</p>
<h3 id="iOS10_以上">iOS10 以上</h3><p>如果是iOS10以上，并且是iPhone 6S、iPhone 6S plus ，就可以利用3D Touch一键清除通知。</p>
<a id="more"></a>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Clear-All-Push-notification.jpeg" alt="20180526-iOS-Clear-All-Push-notification.jpeg"></p>
<p>如果是点击推送的 x ，就会出现 Clear，点击后会清除当前区的推送<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Clear.jpeg" alt="20180526-iOS-Push-notification-Clear.jpeg"></p>
<p>如果长压（3D Touch），就出现 Clear All Notifications，点击就会清楚全部的推送<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Clear-All-Push-notification.jpeg" alt="20180526-iOS-Clear-All-Push-notification.jpeg"></p>
<h3 id="iOS_9">iOS 9</h3><p>如果是iOS 9 和更老的机型，首先按住锁屏上方的把手把通知中心拉下来，拖到底，松手，然后再向上把它拖回去，锁屏瞬间清空!</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Pull.png" alt="20180526-iOS-Push-notification-Pull.png"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180526-iOS-Push-notification-Push.png" alt="20180526-iOS-Push-notification-Push.png"></p>
<h3 id="总结">总结</h3><p>iOS10以后的通知中心，合并了全部和未读消息，然后没有提供一个更好的展示形式，只是推送内容和交互更新，并没有解决推送过多的问题，就比如微信推送的消息是最多的，并且推送的类型也不一样，轻重急缓不分！<br>推送作为中国人工作和生活提示，已经越来越重要，更加高效和智能的推送展现，迫在眉睫。</p>
<p>听说iOS12会重新设计通知，希望是真的，非常期待，因为苹果这2年已经没有为系统做更多的创新或颠覆，希望苹果有所创新！</p>
<h3 id="参考引用">参考引用</h3><ul>
<li><a href="https://sspai.com/post/35483" target="_blank" rel="external">具透丨好的 iOS 体验，从用好通知开始：iOS 10 通知详解 - 少数派</a></li>
<li><a href="https://www.i4.cn/news_detail_6588.html" target="_blank" rel="external">教你快速清除烦人的消息推送<em>iPhone技巧</em>爱思助手</a></li>
<li><a href="http://www.gq.com.cn/digital/news_14320c4d37b8beea-3.html#pid=4" target="_blank" rel="external">NO.3一键清除通知_数码_GQ男士网</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>越来越多的应用，请求用户推送权限，一般情况下，普通应用我是不允许的，除了通讯应用、支付宝（银行app有很多不羊毛的活动推送，不允许）、GTD（Things、Due）、健身（Kepp、SixPack），其它的像淘宝天猫、京东，每次打开app，都要反复问我还要不要打开推送，你们就不能先调查一下我用的iOS系统多久吗？请问一个用了4年以上的用户，如果他还想打你们家的app推送，难道不知道在那里开吗？脑子进水吧。</p>
<h3 id="iOS10_以上">iOS10 以上</h3><p>如果是iOS10以上，并且是iPhone 6S、iPhone 6S plus ，就可以利用3D Touch一键清除通知。</p>]]>
    
    </summary>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="消息推送" scheme="https://iHTCboy.com/tags/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iTerm配置导出与迁移方法]]></title>
    <link href="https://iHTCboy.com/2018/05/12/2018-05-12_iTerm%E9%85%8D%E7%BD%AE%E5%AF%BC%E5%87%BA%E4%B8%8E%E8%BF%81%E7%A7%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://iHTCboy.com/2018/05/12/2018-05-12_iTerm配置导出与迁移方法/</id>
    <published>2018-05-12T15:49:16.000Z</published>
    <updated>2018-07-08T10:08:59.019Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>iTerm软件的实用就不用在说了，最近迁移新工作电脑，打算把自己电脑配置好的iTerm迁移到新电脑，网上找了很久都没有找到教程，看到iTerm的profiles下有 ‘Copy Profile as JSON’，但没有导出成文件，也没有找到导入配置的地方！！ 找了好久，最后还是在官网上找到了说明，所以，软件的使用教程，直接去官网找，别在谷歌百度了！！！</p>
<a id="more"></a>
<h3 id="2、iTerm配置导出&amp;迁移">2、iTerm配置导出&amp;迁移</h3><p>如果大家英文好，直接上官网看看吧，<a href="https://www.iterm2.com/documentation-dynamic-profiles.html" target="_blank" rel="external">Dynamic Profiles - Documentation - iTerm2 - macOS Terminal Replacement</a></p>
<p>我这里简单说一下步骤，打开配置：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTerm -&gt; <span class="constant">Preferences </span>-&gt; <span class="constant">Profiles </span>-&gt; <span class="constant">Other Actions</span></span><br></pre></td></tr></table></figure>
<p>然后有2种选择方式：</p>
<ol>
<li><ul>
<li>Copy Profile as JSON （复制当前选中的配置）</li>
</ul>
</li>
</ol>
<ul>
<li>Copy All Profiles as JSON （复制全部的配置）</li>
</ul>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180512-iTerm-Preferences-Profiles-Other_Actions.png" alt="20180512-iTerm-Preferences-Profiles-Other_Actions.png"></p>
<p>这里选择复制全部的配置，然后保存到一个文件里面，后缀可以不用选择，文件名随意起，如：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180512-iterm-myconfig.png" alt="20180512-iterm-myconfig.png"></p>
<p>然后把这个配置文件，复制到新电脑的下面目录下：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/Library/</span>Application Support<span class="regexp">/iTerm2/</span>DynamicProfiles<span class="regexp">/</span></span><br></pre></td></tr></table></figure>
<p>然后启动新电脑的 iTerm2，这时配置已经加载迁移成功啦，DynamicProfiles目录下的文件可以删除，因为 iTerm2 启动里，会自动加载这个目录下的配置内容，但是配置读取成功后，iTerm是另外保存配置的。</p>
<h3 id="总结">总结</h3><p>这次迁移新电脑过程中，很多软件都重新下载，另外，之前在淘宝买个正版的软件，比如16年时，数码荔枝正版软件，当前代理的 CleanMyMac3 优惠价只要45元，当时就下手了。但是今天，突然发现只能一台设备激活，但是在AppStore购买的软件，可以无限下载啊！！！无限设备呢！！！！</p>
<p>之前 Mweb 黑色星期五是半价，就在AppStore购买了，现在可以随意多台设备下载！所以，想想，其实还是在AppStore下载购买好！原因有:</p>
<ul>
<li>自动更新，安全可靠</li>
<li>一个账号购买，无限安装设备（家庭共享也可以免费下载）</li>
</ul>
<p>当然，有些软件不在AppStore上架，可能就是上面的无限下载导致软件开发商不愿意在AppStore上架的原因吧，比如 jetbrains, Adobe 大厂， 很多软件也是，唉，我已经在AppStore购买了很多正版软件，真心觉得自动安装更新非常方便，现在的时代时间就是金钱，希望更多开发商在AppStore for mac 上架应用（当然，如果真希望用户只能一台设备安装，如果与苹果协商有解决方案，其实也是大喜的标示~）</p>
<h3 id="参考">参考</h3><ul>
<li><a href="https://www.iterm2.com/documentation-dynamic-profiles.html" target="_blank" rel="external">Dynamic Profiles - Documentation - iTerm2 - macOS Terminal Replacement</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>iTerm软件的实用就不用在说了，最近迁移新工作电脑，打算把自己电脑配置好的iTerm迁移到新电脑，网上找了很久都没有找到教程，看到iTerm的profiles下有 ‘Copy Profile as JSON’，但没有导出成文件，也没有找到导入配置的地方！！ 找了好久，最后还是在官网上找到了说明，所以，软件的使用教程，直接去官网找，别在谷歌百度了！！！</p>]]>
    
    </summary>
    
      <category term="iTerm2_DynamicProfiles" scheme="https://iHTCboy.com/tags/iTerm2-DynamicProfiles/"/>
    
      <category term="iTerm配置导出" scheme="https://iHTCboy.com/tags/iTerm%E9%85%8D%E7%BD%AE%E5%AF%BC%E5%87%BA/"/>
    
      <category term="iTerm配置迁移" scheme="https://iHTCboy.com/tags/iTerm%E9%85%8D%E7%BD%AE%E8%BF%81%E7%A7%BB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac版QQ聊天信息备份与导出方法]]></title>
    <link href="https://iHTCboy.com/2018/05/08/2018-05-08_mac%E7%89%88QQ%E8%81%8A%E5%A4%A9%E4%BF%A1%E6%81%AF%E5%A4%87%E4%BB%BD%E4%B8%8E%E5%AF%BC%E5%87%BA%E6%96%B9%E6%B3%95/"/>
    <id>https://iHTCboy.com/2018/05/08/2018-05-08_mac版QQ聊天信息备份与导出方法/</id>
    <published>2018-05-08T11:35:16.000Z</published>
    <updated>2018-07-08T10:08:58.995Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>最近，我司终于更换新电脑的计划落实啦！！！</p>
<blockquote>
<p>Mac mini 3.0GHz 双核 Intel Core i7 处理器 (Turbo Boost 高达 3.5GHz)<br>16GB 1600MHz LPDDR3 SDRAM<br>1TB 融合硬盘<br>Intel Iris Graphics 图形处理器</p>
</blockquote>
<p>非常值的可贺！然而，就是新电脑，一切都是新！一切都是白！！非常多工具的数据需要迁移，开发环境需要配置，最近也打算总结一下新电脑配置方面的文章，作为自己备份，或者给新手参考，相信有很大帮助。今天就先从QQ说起吧~</p>
<a id="more"></a>
<h3 id="正题">正题</h3><p>说回来，因为QQ内容是工作的主要记录，所以，</p>
<h4 id="企业QQ聊天内容迁移">企业QQ聊天内容迁移</h4><p>将下面目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.eimmac/</span>Data<span class="regexp">/Library/</span>Application Support<span class="regexp">/QQ</span></span><br></pre></td></tr></table></figure>
<p>复制目录下所有内容到新电脑，就可以啦!</p>
<h4 id="用户版QQ聊天内容迁移">用户版QQ聊天内容迁移</h4><p>将下面目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.qq/</span>Data<span class="regexp">/Library/</span>Application Support<span class="regexp">/QQ/</span></span><br></pre></td></tr></table></figure>
<p>复制目录下所有内容到新电脑，</p>
<p>如果需要把聊天中的图片也迁移，就需要在复制目录：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>用户名<span class="regexp">/Library/</span>Containers<span class="regexp">/com.tencent.qq/</span>Data<span class="regexp">/Documents/</span></span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>上面目录中 <code>用户名</code> 是你电脑的账户名</li>
<li>企业QQ是在com.tencent.eimmac目录下，而用户版QQ是在 com.tencent.qq 下</li>
</ul>
<h4 id="授鱼&amp;授渔">授鱼&amp;授渔</h4><p>如果是其它功能的内容迁移，道理相似，把对应的软件的目录的内容复制到新电脑就可以了。当然，想方便查看软件的目录备份内容，可以用 CleanMyMac 卸载器 查看：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/20180508-CleanMyMac_unloader.png" alt="CleanMyMac_unloader"></p>
<h3 id="总结">总结</h3><p>作为程序员，越来越觉得云端的好处，迁移数据是一件痛苦（辛苦）的事件，如果是电脑小白，那更加是的。所以，有必要作一些更好的方法，比如云端备份软件的配置，用脚本来操作迁移过程，因为不是经常性换电脑，所以这个就不作进一步实践了。</p>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>最近，我司终于更换新电脑的计划落实啦！！！</p>
<blockquote>
<p>Mac mini 3.0GHz 双核 Intel Core i7 处理器 (Turbo Boost 高达 3.5GHz)<br>16GB 1600MHz LPDDR3 SDRAM<br>1TB 融合硬盘<br>Intel Iris Graphics 图形处理器</p>
</blockquote>
<p>非常值的可贺！然而，就是新电脑，一切都是新！一切都是白！！非常多工具的数据需要迁移，开发环境需要配置，最近也打算总结一下新电脑配置方面的文章，作为自己备份，或者给新手参考，相信有很大帮助。今天就先从QQ说起吧~</p>]]>
    
    </summary>
    
      <category term="mac版QQ信息导出" scheme="https://iHTCboy.com/tags/mac%E7%89%88QQ%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA/"/>
    
      <category term="聊天内容迁移" scheme="https://iHTCboy.com/tags/%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E8%BF%81%E7%A7%BB/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Github Pages页面重定向到新网址，实现域名跳转]]></title>
    <link href="https://iHTCboy.com/2018/05/06/2018-05-06_Github_Pages%E9%A1%B5%E9%9D%A2%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E6%96%B0%E7%BD%91%E5%9D%80,%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC/"/>
    <id>https://iHTCboy.com/2018/05/06/2018-05-06_Github_Pages页面重定向到新网址,实现域名跳转/</id>
    <published>2018-05-06T08:35:16.000Z</published>
    <updated>2018-07-08T10:08:17.472Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最新还是决下心来换域名啦！从 <a href="http://ihtc.cc" target="_blank" rel="external">http://ihtc.cc</a> 换成 <a href="https://ihtcboy.com">https://ihtcboy.com</a> ！然后问题就来了，以前文章的链接打开404了，旧域名也访问不通，这样子不行呢！用了2年多的旧域名，在百度谷歌还是积累了一些爬虫，还有很多分享到第三方平台的文章呢！想一想，还是想救一救它！！！</p>
<a id="more"></a>
<h3 id="2、准备工作">2、准备工作</h3><p>首先，因为是2个域名，所以我分别用2个GitHub账号设置对应的Repo地址解析。</p>
<table>
<thead>
<tr>
<th>域名</th>
<th>Repo</th>
</tr>
</thead>
<tbody>
<tr>
<td>ihtc.cc</td>
<td>HeTianCong.github.io</td>
</tr>
<tr>
<td>ihtcboy.com</td>
<td>iHTCboy.github.io</td>
</tr>
</tbody>
</table>
<h3 id="3、域名重定向">3、域名重定向</h3><p>首先要解决的问题是 ihtc.cc 重写向到 ihtcboy.com，在网上搜索到，域名的重定向可以有以下3种方法（如果还有其它，欢迎大家补充！）：</p>
<ol>
<li>域名转发</li>
<li>301重定向</li>
<li>JS跳转</li>
</ol>
<p>方法一，域名注册商支持域名转发功能才行！放弃~<br>方法二， 就是Web 服务器（这里是GitHub）给访问老域名的请求返回一个 302，然后跳转到新域名上。考虑到使用的GitHub托管服务是不可能配置 Web 服务器的，也只能放弃~</p>
<p>最后就是剩下JavaScript 实现，在 <code>HeTianCong.github.io</code> 新建<br><code>index.html</code> 文件，内容为：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.location.href=<span class="string">"https://ihtcboy.com"</span>;</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong></p>
<p>index.html就是访问 ihtc.cc 时，GitHub 默认打开的页面，所以在里面用JS重写向到新的域名，这样就解决了旧域名重写向新网址的问题啦！！</p>
<h3 id="4、文章重定向">4、文章重定向</h3><p>旧的文章链接：</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ihtc.cc/<span class="number">2018/02/25</span>/<span class="number">2018-02-25</span>%20_Gitment评论功能接入踩坑教程/</span><br></pre></td></tr></table></figure>
<p>既然要重定向到新的域名，，就不可能在旧的Repo里增加全部旧文章吧（虽然方案是可行），但是这样又起不到读者知道新域名的问题，硬要搞2个Repo，那就没有前面的重定向必要啦！！！</p>
<p>最后想到旧的链接访问不通时，表现形式：<br><strong>404<br>There isn’t a GitHub Pages site here.</strong>！</p>
<p>那么在 Repo 下建立一个 <code>404.html</code>，这样是不是就可以拿到访问文章的链接，然后就你所欲为！（拿旧域名替换成新域名就可以啦！）马上就开始行动吧！</p>
<p><code>404.html</code> 文件，内容为：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://cdn.bootcss.com/purl/2.3.1/purl.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="keyword">var</span> url = purl();</span><br><span class="line"><span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'ihtc.cc'</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span><br><span class="line">    <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'ihtc.cc'</span>, <span class="string">"ihtcboy.com"</span>);</span><br><span class="line">    <span class="built_in">window</span>.location.replace(new_url); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.ihtc.cc'</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span><br><span class="line">    <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.ihtc.cc'</span>, <span class="string">"ihtcboy.com"</span>);</span><br><span class="line">    <span class="built_in">window</span>.location.replace(new_url);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href=<span class="string">"https://ihtcboy.com"</span>;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面js是放在 404.html 里面，当文章访问不通时会显示 404.html 页面，这时就会直接调用js判断域名，然后替换成新域名来访问！</p>
<p>最后实践发现，这个方法可行！！！（当然，有些禁止js运行的浏览器这些人群就被忽略吧，不属于大多数人的世界-.-）</p>
<p>从浏览器访问 <code>www.ihtc.cc/xxx</code> 或 <code>ihtc.cc/xxx</code> 的读者，都会被重定向到 <strong>ihtcboy.com</strong>! </p>
<p>以上全部的配置内容可参考 <a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="external">HeTianCong.github.io</a></p>
<h3 id="5、总结">5、总结</h3><p>刚开始是想放弃，因为经常中谷歌搜索文章里，常常发现404的 <strong>There isn’t a GitHub Pages site here.</strong>，都是怀疑作者域名过期或变更等，又没有自己后台服务器，只能不了而之，旧的读者从此就与这个网站失联，觉得是有点可惜！</p>
<p>所以，今天的这个文章，希望对愿意写文章，有又变更域名需求的博客同仁来说，希望是一个更好的开始！</p>
<h3 id="6、参考">6、参考</h3><ul>
<li><a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="external">HeTianCong.github.io</a></li>
<li><a href="https://blog.csdn.net/dianjinmi/article/details/78383955" target="_blank" rel="external">如何实现域名A指向域名B？三种域名跳转方法供选择 - CSDN博客</a></li>
<li><a href="https://blog.jamespan.me/2015/04/12/the-blogs-migration" target="_blank" rel="external">博客折腾记之网址变更｜Ruo Dojo</a></li>
<li><a href="http://yanping.me/cn/blog/2012/02/06/github-pages-domain-3/" target="_blank" rel="external">三谈github页面域名绑定：域名跳转 - 雁起平沙的网络日志</a></li>
</ul>
<p><br></p>
<ul>
<li>如有疑问，欢迎在评论区一起讨论！</li>
<li>如有不正确的地方，欢迎指导！</li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="https://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最新还是决下心来换域名啦！从 <a href="http://ihtc.cc">http://ihtc.cc</a> 换成 <a href="https://ihtcboy.com">https://ihtcboy.com</a> ！然后问题就来了，以前文章的链接打开404了，旧域名也访问不通，这样子不行呢！用了2年多的旧域名，在百度谷歌还是积累了一些爬虫，还有很多分享到第三方平台的文章呢！想一想，还是想救一救它！！！</p>]]>
    
    </summary>
    
      <category term="Github Pages" scheme="https://iHTCboy.com/tags/Github-Pages/"/>
    
      <category term="JS跳转" scheme="https://iHTCboy.com/tags/JS%E8%B7%B3%E8%BD%AC/"/>
    
      <category term="域名跳转" scheme="https://iHTCboy.com/tags/%E5%9F%9F%E5%90%8D%E8%B7%B3%E8%BD%AC/"/>
    
      <category term="重定向" scheme="https://iHTCboy.com/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[忆爷爷 —— 留守老人的一代]]></title>
    <link href="https://iHTCboy.com/2018/05/05/2018-05-05_%E5%BF%86%E7%88%B7%E7%88%B7%E2%80%94%E2%80%94%E7%95%99%E5%AE%88%E8%80%81%E4%BA%BA%E7%9A%84%E4%B8%80%E4%BB%A3/"/>
    <id>https://iHTCboy.com/2018/05/05/2018-05-05_忆爷爷——留守老人的一代/</id>
    <published>2018-05-04T16:05:16.000Z</published>
    <updated>2018-05-12T14:35:59.187Z</updated>
    <content type="html"><![CDATA[<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/myGrandpa.jpg" alt="my grandpa"></p>
<h3 id="忆">忆</h3><p>爷爷生于三十年代，抗日战争之际。</p>
<p>听爷爷说，我们家以前是地主，解放后，我们家族就走下坡路，爷辈各兄弟分散多地。</p>
<p>读书时，还不能体会到地主阶级的痛，改革开放后家族迁于麓阳村。</p>
<a id="more"></a>
<p>到了我爸那一代，小时候读书被人欺负，是随便一个人都可以欺负地主家的孩子，也许已经没有人能想象到是什么一个场景，历史过去，没有留下记忆的境头，没有人敢写的历史问题，越来越多的消失。最后我爸连小学都没能毕业。到了我叔那辈，读到初中，家里还穷，那时我大伯和我爸已经娶妻生子，我叔南下广东打工，为家里带来了很多改变，新录音机，当时可是了不起，因为那时家里就一台黑白小电视。</p>
<p>也就97年香港回归后，我叔在广东学会了很多，从打杂工、洗车，然后做厨师，在外面无依无靠，靠自己努力做到，在当时已经了不起，听爷爷说，当时叔的工资都寄回家了。家里穷，我依然记得吃肥猪肉都是很奢侈。</p>
<p>99年，千禧年来临前，在叔的带领下来到广州。然后一直到现在，在外打工将近二十个年头。背井离乡，那时间我才10岁不到，爷爷一个人在家里照顾2个姐姐，2个哥哥，直到他们都出来打工，最后一个一个远走他乡，离他而去。</p>
<p>20年，对于一个老人，每年过年过节一个人！春节、清明节、端午节、中秋节，都没有回去过，对于老人来说，什么又是对又是错，钱又有什么用。</p>
<p>说说那时交通，20个小时班车，因为火车站在广州市中心，所以只能就近坐班车，从下午到晚上，然后第二天早上回到南宁，回到家里，真的不容易。现在动车4个小时，公交车和地铁方便，回家当天就到，也许以后也没有人知道，甚至大多数90后也不了而之，随着历史的迁移只会越小人知道，然后就最后没有人知道这些历史，没有人知道上一辈人的辛苦，上一辈人的辛酸。</p>
<p>爷爷写的一手好的毛笔字，村里的红事白事都会叫他写，惟一的春联他就不敢写，都是叫村里的老师帮写，也许他还觉得自己文采不够？另外，爷爷自学了针灸，平时有空都会帮别人治治，虽然我不确认效果，但是中国的针灸历史很久。从这两个方面，就觉得爷爷有什么东西值得我去学习，在那个年代，那个压力，这种精神，永远不朽！</p>
<h3 id="念">念</h3><p>读高中时，因为广东不给外地人读，所以回南宁读书，有几个寒暑假都在家里陪爷爷一起过。想起高中的那时候，由于学业繁忙，每天都是爷爷买菜煮饭给我吃，这就这样，一辈子的回忆。也只有这样的机会，我才能了解这些故事，少数人才记得的历史。</p>
<p>听爷爷常常唠叨，他以为家族一辈子都不会在兴旺起来。当年闹饥荒，地主被批斗，奶奶就是被批斗而逝去。在我记忆里，没有奶奶的画面，听爷爷说，我很小时奶奶就去了。</p>
<p>爷爷不经常提说这些历史，就像他说恨毛主席。爷爷经历了我们这一代无法想象的苦，我们又享受上一辈奋斗带来的富，已经没有多少人会记住历史。就像爷爷说希望当年那些对待他的人，让他们知道错。在别人看来，爷爷过于自我，普通人没有人会理解，别人会恶评。</p>
<p>那又如何，我已经没有办法帮爷爷实现梦想了，因为历史永远回不去。大家习惯于现在，现在的小康生活。那一代人，知青，上山下乡，慢慢的被人忘记了，那些老人也慢慢消失。那一代人，在这近二十年，也许做了一些常人无法理解的事，大家都不了解。没有人知道为什么，也没有人关心，最后也再没有人知道了。</p>
<p>越来越多的留守老人逝去，越来越多的留守儿童长大成人，然后背井离乡，回到旧路。</p>
<p>有时候站在历史的回流中，看着城市里面永远不会熄灭的灯光，其实是最大的阴影，最大的黑暗。</p>
<p>在历史的车轮碾压下，尘归尘土归土。现在的小康生活，来的太容易。每天纸醉金迷，玩物丧志，玩弄人生。最可怕的是，只会羡慕别人，完全没有自我的那些生命。一辈子就这些长，有些事要记住，有些事要去做，如果不能体会到的困境，就不会意识到自己在睡觉吧。</p>
<p>那些无奈，辛勤的日子，依然会有人记得，带着梦想去奋斗吧！</p>
<p><del>忆往昔，爷爷一路走好，愿天堂没有孤独。</del></p>
<p><br></p>
<p align="right">5月4日 夜</p>



]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/05/myGrandpa.jpg" alt="my grandpa"></p>
<h3 id="忆">忆</h3><p>爷爷生于三十年代，抗日战争之际。</p>
<p>听爷爷说，我们家以前是地主，解放后，我们家族就走下坡路，爷辈各兄弟分散多地。</p>
<p>读书时，还不能体会到地主阶级的痛，改革开放后家族迁于麓阳村。</p>]]>
    
    </summary>
    
      <category term="下一代" scheme="https://iHTCboy.com/tags/%E4%B8%8B%E4%B8%80%E4%BB%A3/"/>
    
      <category term="爷爷" scheme="https://iHTCboy.com/tags/%E7%88%B7%E7%88%B7/"/>
    
      <category term="留守儿童" scheme="https://iHTCboy.com/tags/%E7%95%99%E5%AE%88%E5%84%BF%E7%AB%A5/"/>
    
      <category term="留守老人" scheme="https://iHTCboy.com/tags/%E7%95%99%E5%AE%88%E8%80%81%E4%BA%BA/"/>
    
      <category term="life" scheme="https://iHTCboy.com/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macOS中基于L2TP协议的VPN连接时提示“IPSec 共享密钥”丢失问题解决]]></title>
    <link href="https://iHTCboy.com/2018/04/10/2018-04-10_macOS%E4%B8%AD%E5%9F%BA%E4%BA%8EL2TP%E5%8D%8F%E8%AE%AE%E7%9A%84VPN%E8%BF%9E%E6%8E%A5%E6%97%B6%E6%8F%90%E7%A4%BA%E2%80%9CIPSec%E5%85%B1%E4%BA%AB%E5%AF%86%E9%92%A5%E2%80%9D%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://iHTCboy.com/2018/04/10/2018-04-10_macOS中基于L2TP协议的VPN连接时提示“IPSec共享密钥”丢失问题解决/</id>
    <published>2018-04-10T10:59:26.000Z</published>
    <updated>2018-05-06T13:02:45.257Z</updated>
    <content type="html"><![CDATA[<h3 id="1、遇到的问题">1、遇到的问题</h3><blockquote>
<p>“IPSec 共享密钥”丢失。请验证您的设置并尝试重新连接。</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-VPNConnetionFailure.png" alt="20180410-VPNConnetionFailure.png"></p>
<p>在网上找到很多相似的解决方法，但是却没有人说出为什么要这样做？？</p>
<a id="more"></a>
<h3 id="2、问题原因&amp;解决">2、问题原因&amp;解决</h3><h4 id="2-1_原因：">2.1 原因：</h4><p>最后在Oracle官方文档找到了解释：</p>
<p>引用 <strong>Oracle Solaris 10 8/11 Information Library</strong> 文档:</p>
<blockquote>
<p>/etc/ppp/options<br>包含缺省应用于系统中所有 PPP 链路的特征（例如，计算机是否要求对等点对其本身进行验证）的文件。如果不存在此文件，将禁止非超级用户使用 PPP。</p>
</blockquote>
<p>也就是说，默认情况下macOS跟Liunx一样，在<code>/etc/ppp/</code>目录下没有 <code>options</code>这个配置文件，所以对于非root用户就无法使用ppp链路。</p>
<h4 id="2-2_解决">2.2 解决</h4><p>知其然，所以知其后然，这时候的解决方法就是在<code>/etc/ppp/</code>目录下建立options`这个配置文件，并且配置ppp链路l2tp不需要ipsec密钥。</p>
<p>下面就是vim命令操作，如果想系统学习相关命令可查看 <a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录</a>，这里不打算详细讲解，有兴趣同学可以另行学习。</p>
<p><strong>2.2.1 操作步骤</strong><br>（1）在终端任意路径下输入命令： <code>sudo vim /etc/ppp/options</code><br>然后输入电脑密码后，显示vim操作界面后按键盘<code>i</code>进入插入模式，输入下面内容：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugin L2TP<span class="class">.ppp</span></span><br><span class="line">l2tpnoipsec</span><br></pre></td></tr></table></figure></p>
<p>（2）然后按<code>esc</code>键退出插入模式，最后输入<code>:wq!</code>，强制保存并退出vim模式。</p>
<p><strong>2.2.2 命令解释</strong></p>
<ul>
<li><code>sudo</code>：用管理员权限执行命令</li>
<li><code>vim</code>：用vim打开文件，后面跟上文件所在的路径</li>
<li><code>plugin L2TP.ppp</code>：配置ppp链路插件？具体暂未了解，知道的同学可以告诉我啊！</li>
<li><code>l2tpnoipsec</code>: 配置ppp链路l2tp不需要ipsec密钥。</li>
</ul>
<p><strong>2.2.3 终端操作示意</strong><br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-SudoVim-etc-ppp-options.png" alt="sudo vim /etc/ppp/options"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-vim-options-insert.png" alt="添加ppp的options配置文件"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-vim-wq!.png" alt="保存内容并退出vim"></p>
<p>最后，想验证是否保存成功，可以用<code>open /etc/ppp/options</code>命令打开文件查看内容：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-open-options.png" alt="打开options文件查看内容"></p>
<h3 id="3、总结">3、总结</h3><p>在这个探索的过程，自己了解得更多，就会发现自己知道的越少！求甚解，也许就是最好的学习态度，大家都要坚持！</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://docs.oracle.com/cd/E24847_01/html/E22299/pppsvrconfig.reference-65.html" target="_blank" rel="external">在文件中和命令行上使用 PPP 选项 - 系统管理指南：网络服务</a></li>
<li><a href="https://lxneng.com/posts/177" target="_blank" rel="external">Mac OS X 下无密钥方式连接基于L2TP协议的VPN</a></li>
<li><a href="https://www.jianshu.com/p/6bbfbc49e54c" target="_blank" rel="external">mac的vpn配置“IPSec 共享密钥”丢失问题 - 简书</a></li>
<li><a href="http://blog.51cto.com/nginxs/1714806" target="_blank" rel="external">Mac 笔记本无共享密钥连接L2TP VPN-我的运维历程-51CTO博客</a></li>
<li><a href="http://jiangrongyong-blog.logdown.com/posts/2013/06/14/osx-vpn-l2tp" target="_blank" rel="external">Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN « jiangrongyong’s Blog</a></li>
<li><a href="http://www.micmiu.com/os/mac/mac-osx-vpn-l2tp/" target="_blank" rel="external">Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN | micmiu - 软件开发+生活点滴</a></li>
<li><a href="http://www.cnblogs.com/peida/archive/2012/12/05/2803591.html" target="_blank" rel="external">每天一个linux命令目录 - peida - 博客园</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、遇到的问题">1、遇到的问题</h3><blockquote>
<p>“IPSec 共享密钥”丢失。请验证您的设置并尝试重新连接。</p>
</blockquote>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180410-VPNConnetionFailure.png" alt="20180410-VPNConnetionFailure.png"></p>
<p>在网上找到很多相似的解决方法，但是却没有人说出为什么要这样做？？</p>]]>
    
    </summary>
    
      <category term="IPsec" scheme="https://iHTCboy.com/tags/IPsec/"/>
    
      <category term="PPP" scheme="https://iHTCboy.com/tags/PPP/"/>
    
      <category term="macOS" scheme="https://iHTCboy.com/tags/macOS/"/>
    
      <category term="vpn" scheme="https://iHTCboy.com/tags/vpn/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PyCharm 2018 for mac 数据库实战：链接SQLite、建表、添加、查询数据]]></title>
    <link href="https://iHTCboy.com/2018/04/03/2018-04-03_PyCharm_2018_for_mac%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E6%88%98_%E9%93%BE%E6%8E%A5SQLite_%E5%BB%BA%E8%A1%A8_%E6%B7%BB%E5%8A%A0_%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
    <id>https://iHTCboy.com/2018/04/03/2018-04-03_PyCharm_2018_for_mac数据库实战_链接SQLite_建表_添加_查询数据/</id>
    <published>2018-04-03T13:46:26.000Z</published>
    <updated>2018-05-06T13:03:14.220Z</updated>
    <content type="html"><![CDATA[<h3 id="一、前言">一、前言</h3><hr>
<p>最近开始入门python，当然是要使用PyCharm，然后在项目中遇到.db数据库文件，双击打不开？网上找到了windows版本的教程，版本也比较旧，所以有空就来一发，当备忘也好~</p>
<a id="more"></a>
<h3 id="二、链接SQLite">二、链接SQLite</h3><hr>
<h6 id="2-1_控制台创建数据库DB文件">2.1 控制台创建数据库DB文件</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createDBfile.png" alt="创建数据库DB文件"></p>
<h6 id="2-2_打开sqlite配置界面">2.2 打开sqlite配置界面</h6><p>按下图步骤打开sqlite配置目录<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-openSqliteConfig.png" alt="打开sqlite配置界面"></p>
<h6 id="2-3_安装sqlite驱动">2.3 安装sqlite驱动</h6><p>点击下载驱动，直到显示提示“no objects”：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-downloadSqliteDriver.png" alt="安装sqlite驱动"></p>
<h6 id="2-4_链接刚才创建的数据库_ios_test-db文件">2.4  链接刚才创建的数据库 ios_test.db文件</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-ConnectionSqliteFile.png" alt=" 链接数据库Sqlite文件"></p>
<p>点击步骤4的“Test Connection” 时，显示 <code>Successful</code> 就表示连接成功，点击右下角的OK返回！<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-TestConnectionSqlite.png" alt="Test Connection"></p>
<p>PyCharm自动打开Sqlite数据库：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-PycharmSqliteConsole.png" alt="SqliteConsole"></p>
<h3 id="三、操作数据库">三、操作数据库</h3><hr>
<h6 id="3-1_创建一张表">3.1 创建一张表</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createTable.png" alt="createTable"></p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-createTableConsole.png" alt="createTableConsole"></p>
<h6 id="3-2_添加数据">3.2 添加数据</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-insertIntoValues.png" alt="insertIntoTable"></p>
<h6 id="3-3_查询数据">3.3 查询数据</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-SelectFrom.png" alt="SelectTable"></p>
<h6 id="3-4_关联表">3.4 关联表</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-referencesForeignKey.png" alt="referencesForeignKey"></p>
<h6 id="3-5_更多示例">3.5 更多示例</h6><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/04/20180403-insertInfoValuesMore.png" alt="insertValues"></p>
<p>相关代码：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个表</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> iOSDevice(</span><br><span class="line">  deviceName <span class="built_in">TEXT</span></span><br><span class="line">);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhone8'</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhone8 Plus'</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> iOSDevice <span class="keyword">values</span>(<span class="string">'iPhoneX'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据</span></span><br><span class="line"><span class="operator">select * <span class="keyword">from</span> iOSDevice;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个新表</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> iProduct (</span><br><span class="line">  Mac    <span class="built_in">text</span>,</span><br><span class="line">  iPhone <span class="built_in">text</span>,</span><br><span class="line">  iPad   <span class="built_in">text</span>,</span><br><span class="line">  Watch  <span class="built_in">text</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">--  关联表</span></span><br><span class="line">  foreign <span class="keyword">key</span> (iPhone) <span class="keyword">references</span> iOSDevice(deviceName)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--  插入多个值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> iProduct <span class="keyword">values</span>(</span><br><span class="line">  <span class="string">'Macbook Pro'</span>,</span><br><span class="line">  <span class="string">'iPhone'</span>,</span><br><span class="line">  <span class="string">'iPad mini4'</span>,</span><br><span class="line">  <span class="string">'apple Watch'</span></span><br><span class="line">);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表数据</span></span><br><span class="line"><span class="operator">select * <span class="keyword">from</span> iProduct;</span></span><br></pre></td></tr></table></figure>
<h3 id="四、总结">四、总结</h3><hr>
<p>通过PyCharm进行SQLite操作，之前真没有想到PyCharm如此强大！IDE就是<code>IDE</code>，收费也是硬道理！希望好好利用PyCharm做更多有趣的事件~</p>
<h3 id="五、参考引用">五、参考引用</h3><ul>
<li><a href="https://blog.csdn.net/qq_36482772/article/details/53458400" target="_blank" rel="external">PyCharm IDE 链接sqlite、建表、添加、查询数据 - CSDN博客 </a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="一、前言">一、前言</h3><hr>
<p>最近开始入门python，当然是要使用PyCharm，然后在项目中遇到.db数据库文件，双击打不开？网上找到了windows版本的教程，版本也比较旧，所以有空就来一发，当备忘也好~</p>]]>
    
    </summary>
    
      <category term="PyCharm" scheme="https://iHTCboy.com/tags/PyCharm/"/>
    
      <category term="Python" scheme="https://iHTCboy.com/tags/Python/"/>
    
      <category term="SQLite" scheme="https://iHTCboy.com/tags/SQLite/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[判断NSString为空的问题浅析]]></title>
    <link href="https://iHTCboy.com/2018/03/17/2018-03-17_%E5%88%A4%E6%96%ADNSString%E4%B8%BA%E7%A9%BA%E7%9A%84%E9%97%AE%E9%A2%98%E6%B5%85%E6%9E%90/"/>
    <id>https://iHTCboy.com/2018/03/17/2018-03-17_判断NSString为空的问题浅析/</id>
    <published>2018-03-17T15:02:26.000Z</published>
    <updated>2018-05-06T08:46:03.761Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>判断字符串是否为空的情况，一般判断的逻辑如下：</p>
<ul>
<li>是否为nil </li>
<li>是否是NSNull</li>
<li>是否去掉空格之后长度为0</li>
</ul>
<p>在某书看到如下代码：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//www.jianshu.com/p/fd32b759bace</span></span><br><span class="line">來源：简书</span><br></pre></td></tr></table></figure>
 <a id="more"></a>
<h3 id="2、判断NSString为空的问题">2、判断NSString为空的问题</h3><p>大家继续之前，可以认真看看上面的代码有没有问题？或者有没有优化的空间？</p>
<p>原作者表示里面有一个坑，调用者为nil时：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">NSString</span> *<span class="keyword">str </span>= (网络解析出来的数据，解析结果为nil)<span class="comment">;</span></span><br><span class="line"><span class="keyword">BOOL </span><span class="keyword">isBlank </span>= [<span class="keyword">str </span><span class="keyword">isBlankString];</span></span><br></pre></td></tr></table></figure>
<p>就是说，如果用实例方法进行判断为空，因为实例对象为空时，根据objc的动态性，向空对象发消息会直接返回nil，并不会找到实例方法进行调用。所以，要判断字符串为空，只能传入<code>字符串对象</code>（可能为空），进行判断。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyUtility</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)string;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"MyUtility.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyUtility</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>其中NULL、nil、Nil、NSNull的区别：</p>
<table>
<thead>
<tr>
<th>标志</th>
<th>值</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>NULL</td>
<td>(void *)0</td>
<td>C指针的字面零值</td>
</tr>
<tr>
<td>nil</td>
<td>(id)0</td>
<td>Objective-C对象的字面零值</td>
</tr>
<tr>
<td>Nil</td>
<td>(Class)0</td>
<td>Objective-C类的字面零值</td>
</tr>
<tr>
<td>NSNull</td>
<td>[NSNull null]</td>
<td>用来表示零值的单独的对象</td>
</tr>
</tbody>
</table>
<h3 id="3、总结">3、总结</h3><p>通过这个例子，可能看出看似简单的问题，其实都有非常值得探究的深渊！希望自己不要自尽为是，虚心学习，考虑问题有更多角度，细致严谨！</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://www.jianshu.com/p/fd32b759bace" target="_blank" rel="external">判断NSString为空容易犯的错 - 简书</a></li>
<li><a href="http://nshipster.cn/nil/" target="_blank" rel="external">nil / Nil / NULL / NSNull - NSHipster</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>判断字符串是否为空的情况，一般判断的逻辑如下：</p>
<ul>
<li>是否为nil </li>
<li>是否是NSNull</li>
<li>是否去掉空格之后长度为0</li>
</ul>
<p>在某书看到如下代码：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">Util</span>)</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isBlankString:(<span class="built_in">NSString</span> *)str &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *string = str;</span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span> || string == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([string isKindOfClass:[<span class="built_in">NSNull</span> class]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([[string stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceCharacterSet]] length]==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//www.jianshu.com/p/fd32b759bace</span></span><br><span class="line">來源：简书</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="NSNull" scheme="https://iHTCboy.com/tags/NSNull/"/>
    
      <category term="NSString" scheme="https://iHTCboy.com/tags/NSString/"/>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="nil" scheme="https://iHTCboy.com/tags/nil/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AppStore无法内购相关问题解决的解决方案]]></title>
    <link href="https://iHTCboy.com/2018/03/14/2018-03-14_AppStore%E6%97%A0%E6%B3%95%E5%86%85%E8%B4%AD%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://iHTCboy.com/2018/03/14/2018-03-14_AppStore无法内购相关问题解决的解决方案/</id>
    <published>2018-03-14T14:12:26.000Z</published>
    <updated>2018-05-06T08:46:14.204Z</updated>
    <content type="html"><![CDATA[<h3 id="1-如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：">1.如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：</h3><ol>
<li>请确认应用是从 App Store 上面下载的。</li>
<li>请确认不是越狱安装破解插件导致无法购买。</li>
<li>请确认网络是否通畅</li>
<li>请确认在 系统设置 &gt; 通用 &gt; 访问限制 中的 “App 内购买项目” 是否为打开状态。</li>
<li>注销你的 Apple ID 重新进入游戏，重新尝试购买；</li>
<li><p>如果你已经购买成功但是却没有收到金币，那么你可以切换网络成移动数据网络，然后重新打开游戏确认。</p>
<a id="more"></a>
</li>
</ol>
<p><code>如果以上情况都排除了还是无法进行购买，请联系我们技术。</code></p>
<h3 id="2-点击支付购买的时候，提示“您的购买无法完成，如需帮助，请联系iTunes支持”">2.点击支付购买的时候，提示“您的购买无法完成，如需帮助，请联系iTunes支持”</h3><p>您好，此情况是触发了苹果公司的安全机制，例如：高频率的购买、频繁更换国家/地区购买、高额的购买等等原因，需联系苹果公司客服提供Apple ID 核实具体原因。建议直接拨打苹果客服电话：</p>
<blockquote>
<p>中國大陸：400-666-8800<br>香港（中文） ：(852) 2112-0099<br>香港（英文）： (852) 2112-0099<br>澳門：先撥 0800-111， 再撥 800-708-5413<br>紐西蘭：0800127753<br>馬來西亞：1-800803638<br>澳洲：（61）1300321456<br>新加坡境內： 800-186-1087<br>新加坡境外： (65) 6835-1812<br>印尼：08001027753<br>日本境內： 0120-27753-5<br>日本境外： (81) 3-6365-4705<br>越南： 1800 1127</p>
</blockquote>
<p>更多查看：<a href="https://support.apple.com/zh-cn/HT201232" target="_blank" rel="external">联系 Apple 获取支持和服务 - Apple 支持</a></p>
<h3 id="3-为什么我用苹果手机充值的时候偶尔会出现延迟到账的情况？">3.为什么我用苹果手机充值的时候偶尔会出现延迟到账的情况？</h3><p>苹果系统用户在使用内购服务时候，均通过苹果账号生成订单并提交给我司进行对于商品发货，费用并非由我司直接扣除，因此中间可能会产生延迟发货情况，还请在交易过程中耐心等待。</p>
<h3 id="4-获取其他_iTunes_购买项目的帮助">4.获取其他 iTunes 购买项目的帮助</h3><ul>
<li>有些超过 90 天的项目和购买不符合退款条件。请<a href="https://www.apple.com/legal/internet-services/itunes/appstore/cn/terms.html" target="_blank" rel="external">参阅条款和条件以了解更多信息</a>。</li>
<li>了解 <a href="https://support.apple.com/zh-cn/HT201359" target="_blank" rel="external">iTunes Store 购买项目如何收费</a> — 包括通过“家人共享”功能购买的项目。</li>
<li>如果您收到一封关于帐户收费的电子邮件，但您不记得授权过这笔收费，请<a href="https://support.apple.com/zh-cn/HT204759" target="_blank" rel="external">检查确认这封电子邮件是不是合法</a>。</li>
<li>获取有关通过您可能已下载到设备上的应用进行的<a href="https://support.apple.com/zh-cn/HT202039" target="_blank" rel="external">订阅和重复购买</a>的帮助。</li>
<li>获取关于 <a href="https://support.apple.com/zh-cn/HT207594" target="_blank" rel="external">iCloud 储存空间方案降级</a>方面的帮助。</li>
<li>您还可以在 <a href="https://support.apple.com/zh-cn/HT204088" target="_blank" rel="external">App Store 或 iTunes Store 中查看购买历史记录</a>。</li>
</ul>
<h3 id="5-参考">5.参考</h3><ul>
<li><a href="https://support.apple.com/zh-cn/HT202023" target="_blank" rel="external">关于 App 内购买项目 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT204530#contact" target="_blank" rel="external">如果您没有看到应用内购买项目 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT204084" target="_blank" rel="external">获取关于从 App Store、iTunes Store 或 iBooks Store 所购项目的帮助 - Apple 支持</a></li>
<li><a href="https://griddiary.uservoice.com/knowledgebase/articles/486079-无法内购问题检查列表" target="_blank" rel="external">无法内购问题检查列表 – Support Center | Grid Diary</a></li>
<li><a href="https://support.apple.com/zh-cn/HT201266" target="_blank" rel="external">更改或移除 Apple ID 付款信息</a></li>
<li><a href="https://support.apple.com/zh-cn/HT202039" target="_blank" rel="external">查看、更改或取消您的订阅 - Apple 支持</a></li>
<li><a href="https://support.apple.com/zh-cn/HT201232" target="_blank" rel="external">联系 Apple 获取支持和服务 - Apple 支持</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：">1.如果游戏无法进行内购，或者购买显示为不可用，需要玩家配合检查确认以下情况：</h3><ol>
<li>请确认应用是从 App Store 上面下载的。</li>
<li>请确认不是越狱安装破解插件导致无法购买。</li>
<li>请确认网络是否通畅</li>
<li>请确认在 系统设置 &gt; 通用 &gt; 访问限制 中的 “App 内购买项目” 是否为打开状态。</li>
<li>注销你的 Apple ID 重新进入游戏，重新尝试购买；</li>
<li><p>如果你已经购买成功但是却没有收到金币，那么你可以切换网络成移动数据网络，然后重新打开游戏确认。</p>]]>
    
    </summary>
    
      <category term="AppStore" scheme="https://iHTCboy.com/tags/AppStore/"/>
    
      <category term="无法内购" scheme="https://iHTCboy.com/tags/%E6%97%A0%E6%B3%95%E5%86%85%E8%B4%AD/"/>
    
      <category term="苹果客服电话" scheme="https://iHTCboy.com/tags/%E8%8B%B9%E6%9E%9C%E5%AE%A2%E6%9C%8D%E7%94%B5%E8%AF%9D/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NSString的boolValue方法甚解]]></title>
    <link href="https://iHTCboy.com/2018/03/11/2018-03-11_NSString%E7%9A%84boolValue%E6%96%B9%E6%B3%95%E7%94%9A%E8%A7%A3/"/>
    <id>https://iHTCboy.com/2018/03/11/2018-03-11_NSString的boolValue方法甚解/</id>
    <published>2018-03-11T13:22:26.000Z</published>
    <updated>2018-05-06T08:46:40.122Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>NSString的<code>boolValue</code>之前有使用，但是一直没有真正了解什么时候返回YES（true）或NO(false)。其实，苹果在官方文档中已经写的很清楚，按<code>command</code> + <code>control</code> 点击<code>boolValue</code>进入文档就可以看到：</p>
<p>&gt;</p>
<blockquote>
<p><strong>boolValue</strong><br>The Boolean value of the string.</p>
<p><strong>Declaration</strong><br>@property(readonly) BOOL boolValue;</p>
<p><strong>Discussion</strong><br>This property is YES on encountering one of “Y”, “y”, “T”, “t”, or a digit 1-9—the method ignores any trailing characters. This property is NO if the receiver doesn’t begin with a valid decimal text representation of a number.<br>The property assumes a decimal representation and skips whitespace at the beginning of the string. It also skips initial whitespace characters, or optional -/+ sign followed by zeroes.</p>
</blockquote>
 <a id="more"></a>
<p><strong>中文意思</strong>:</p>
<blockquote>
<p>字符串中包含“Y”，“y”，“T”，“t”，或1-9的数字开关时，这个属性值为YES。</p>
<p>如果不是以有效的十进制数字开始的文本表示，则此属性为NO。</p>
<p>该属性采用十进制表示法，并在字符串的开头跳过空格。它也会跳过最初的空格字符（忽略全部的空格开头），或者单个 -/+ 符号开头。</p>
</blockquote>
<h3 id="2、测试一波">2、测试一波</h3><p>大家可以思考一下，下面的代码输出结果是什么？</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">NSArray *tests = @[ @<span class="string">"Y"</span>,</span><br><span class="line">                        @<span class="string">"N"</span>,</span><br><span class="line">                        @<span class="string">"T"</span>,</span><br><span class="line">                        @<span class="string">"F"</span>,</span><br><span class="line">                        @<span class="string">"t"</span>,</span><br><span class="line">                        @<span class="string">"f"</span>,</span><br><span class="line">                        @<span class="string">"1"</span>,</span><br><span class="line">                        @<span class="string">"0"</span>,</span><br><span class="line">                        @<span class="string">"Yes"</span>,</span><br><span class="line">                        @<span class="string">"No"</span>,</span><br><span class="line">                        @<span class="string">"No really no"</span>,</span><br><span class="line">                        @<span class="string">"true"</span>,</span><br><span class="line">                        @<span class="string">"false"</span>,</span><br><span class="line">                        @<span class="string">"To be or not to be"</span>,</span><br><span class="line">                        @<span class="string">"False"</span>,</span><br><span class="line">                        @<span class="string">"3567"</span>,</span><br><span class="line">                        @<span class="string">"0123456789"</span>,</span><br><span class="line">                        @<span class="string">"000"</span>,</span><br><span class="line">                        @<span class="string">"0ab"</span>,</span><br><span class="line">                        @<span class="string">"1cd"</span>,</span><br><span class="line">                        @<span class="string">"abc"</span>,</span><br><span class="line">                        @<span class="string">""</span>,</span><br><span class="line">                        @<span class="string">"+aeb"</span>,</span><br><span class="line">                        @<span class="string">"+3sb"</span>,</span><br><span class="line">                        @<span class="string">"-ss"</span>,</span><br><span class="line">                        @<span class="string">"-01"</span>,</span><br><span class="line">                        @<span class="string">"-21"</span>,</span><br><span class="line">                        @<span class="string">" 1"</span>,</span><br><span class="line">                        @<span class="string">" 0"</span>,</span><br><span class="line">                        @<span class="string">"--1"</span>,</span><br><span class="line">                        @<span class="string">"++1"</span>,</span><br><span class="line">                        @<span class="string">"-+1"</span>,</span><br><span class="line">                        @<span class="string">"  2"</span>,</span><br><span class="line">                        @<span class="string">"  0"</span>,</span><br><span class="line">                        @<span class="string">"   2  0"</span>,</span><br><span class="line">                        @<span class="string">"   0  2"</span>,</span><br><span class="line">                        @<span class="string">"  20"</span>,</span><br><span class="line">                        @<span class="string">"000-1"</span>,</span><br><span class="line">                        @<span class="string">" + 111"</span>,</span><br><span class="line">                        @<span class="string">"  +111"</span></span><br><span class="line">                        ];</span><br><span class="line">    NSArray *boolToString = @[@<span class="string">"NO"</span>, @<span class="string">"YES"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (NSString *test <span class="keyword">in</span> tests)&#123;</span><br><span class="line">        NSLog(@<span class="string">"boolValue:\"%@\" =&gt; %@"</span>, test, boolToString<span class="string">[[test boolValue]]</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、结果">3、结果</h3><p>运行结果：</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">boolValue:</span><span class="string">"Y"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"N"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"T"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"F"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"t"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"f"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"1"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"Yes"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"No"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"No really no"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"true"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"false"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"To be or not to be"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"False"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"3567"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0123456789"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"000"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"0ab"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"1cd"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"abc"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">""</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"+aeb"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"+3sb"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-ss"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-01"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-21"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" 1"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" 0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"--1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"++1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"-+1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  2"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  0"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"   2  0"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"   0  2"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  20"</span> =&gt; YES</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"000-1"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">" + 111"</span> =&gt; NO</span><br><span class="line"><span class="label">boolValue:</span><span class="string">"  +111"</span> =&gt; YES</span><br></pre></td></tr></table></figure>
<h3 id="4、总结">4、总结</h3><p>不知道大家答对多少？是不是对这个方法又熟悉了几分呢？实践见真知。</p>
<h3 id="5、参考引用">5、参考引用</h3><ul>
<li><a href="http://blog.manbolo.com/2013/07/22/nsstring-boolvalue" target="_blank" rel="external">[NSString boolValue]-Manbolo Blog</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>NSString的<code>boolValue</code>之前有使用，但是一直没有真正了解什么时候返回YES（true）或NO(false)。其实，苹果在官方文档中已经写的很清楚，按<code>command</code> + <code>control</code> 点击<code>boolValue</code>进入文档就可以看到：</p>
<p>&gt;</p>
<blockquote>
<p><strong>boolValue</strong><br>The Boolean value of the string.</p>
<p><strong>Declaration</strong><br>@property(readonly) BOOL boolValue;</p>
<p><strong>Discussion</strong><br>This property is YES on encountering one of “Y”, “y”, “T”, “t”, or a digit 1-9—the method ignores any trailing characters. This property is NO if the receiver doesn’t begin with a valid decimal text representation of a number.<br>The property assumes a decimal representation and skips whitespace at the beginning of the string. It also skips initial whitespace characters, or optional -/+ sign followed by zeroes.</p>
</blockquote>]]>
    
    </summary>
    
      <category term="NSString" scheme="https://iHTCboy.com/tags/NSString/"/>
    
      <category term="boolValue" scheme="https://iHTCboy.com/tags/boolValue/"/>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[两个NSInvocation崩溃引起的反思]]></title>
    <link href="https://iHTCboy.com/2018/03/05/2018-03-05_%E4%B8%A4%E4%B8%AANSInvocation%E5%B4%A9%E6%BA%83%E5%BC%95%E8%B5%B7%E7%9A%84%E5%8F%8D%E6%80%9D/"/>
    <id>https://iHTCboy.com/2018/03/05/2018-03-05_两个NSInvocation崩溃引起的反思/</id>
    <published>2018-03-05T15:42:26.000Z</published>
    <updated>2018-05-06T08:47:33.703Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最近在使用NSInvocation进行多参数方法调用，结果就崩溃了！signature为nil 和 一直提示找不到方法！！！</p>
<p><code>method signature argument cannot be nil</code> 崩溃信息：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*** <span class="type">Terminating</span> app due to uncaught exception '<span class="type">NSInvalidArgumentException</span>', reason: '+[<span class="type">NSInvocation</span> _invocationWithMethodSignature:frame:]: <span class="keyword">method</span> signature argument cannot be <span class="keyword">nil</span>'</span><br><span class="line">*** <span class="type">First</span> throw call stack:</span><br><span class="line">(<span class="number">0x1831a6d8c</span>  .........)</span><br><span class="line">libc++abi.dylib: terminating <span class="keyword">with</span> uncaught exception <span class="keyword">of</span> <span class="keyword">type</span> <span class="type">NSException</span></span><br></pre></td></tr></table></figure></p>
<p><code>unrecognized selector sent to instance</code>崩溃信息：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-<span class="keyword">[</span>ViewController openView]: unrecognized selector sent to<span class="instruction"> instance </span>0x10510b1b0'</span><br><span class="line">*** First<span class="instruction"> throw </span>call stack:</span><br><span class="line">(0x1831a6d8c ......<span class="function">)</span></span><br><span class="line">libc++abi.dylib: terminating with uncaught exception of type NSException</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>开始的代码：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)myInvocation &#123;</span><br><span class="line">    </span><br><span class="line">    SEL myMethod = <span class="keyword">@selector</span>(sum:parm:parm:);</span><br><span class="line">    <span class="comment">//创建一个函数签名，这个签名可以是任意的,但需要注意，签名函数的参数数量要和调用的一致。</span></span><br><span class="line">    <span class="built_in">NSMethodSignature</span> * sig  = [[<span class="keyword">self</span> class] instanceMethodSignatureForSelector:myMethod];</span><br><span class="line">    <span class="comment">//通过签名初始化</span></span><br><span class="line">    <span class="built_in">NSInvocation</span> * invocatin = [<span class="built_in">NSInvocation</span> invocationWithMethodSignature:sig];</span><br><span class="line">    <span class="comment">//设置target</span></span><br><span class="line">    [invocatin setTarget:<span class="keyword">self</span>];</span><br><span class="line">    <span class="comment">//设置selecteor</span></span><br><span class="line">    [invocatin setSelector:myMethod];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">3</span>;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     //index为2 是因为0、1两个参数已经被target和selector占用，其实可以这样设置：</span><br><span class="line">     ViewController * view = self;</span><br><span class="line">     [invocatin setArgument:&amp;view atIndex:0];</span><br><span class="line">     [invocatin setArgument:&amp;myMethod atIndex:1];</span><br><span class="line">     */</span></span><br><span class="line">    [invocatin setArgument:&amp;a atIndex:<span class="number">2</span>];</span><br><span class="line">    [invocatin setArgument:&amp;b atIndex:<span class="number">3</span>];</span><br><span class="line">    [invocatin setArgument:&amp;c atIndex:<span class="number">4</span>];</span><br><span class="line">    [invocatin retainArguments];</span><br><span class="line">    <span class="comment">//我们将c的值设置为返回值</span></span><br><span class="line">    [invocatin setReturnValue:&amp;c];</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="comment">//取这个返回值</span></span><br><span class="line">    [invocatin getReturnValue:&amp;d];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%d"</span>,d);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消息调用</span></span><br><span class="line">    [invocatin invoke];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">int</span>)sum:(<span class="keyword">int</span>)a parm:(<span class="keyword">int</span>)b parm:(<span class="keyword">int</span>)c&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"sum: %d:%d:%d"</span>,a,b,c);</span><br><span class="line">    <span class="keyword">return</span> a+b+c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、NSInvocation_注意项">2、NSInvocation 注意项</h3><p>一直排查，开始以为是方法名写错了，认真一个一个字检查，没有错哦！！<br>Way?! </p>
<p>不得而，还是在看看苹果文档！！！</p>
<hr>
<p><strong>instanceMethodSignatureForSelector:</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="tag">NSMethodSignature</span> *)<span class="rule"><span class="attribute">instanceMethodSignatureForSelector</span>:<span class="value">(SEL)aSelector</span></span>;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>Returns an NSMethodSignature object that contains a description of the instance method identified by a given selector.</p>
</blockquote>
<hr>
<p><strong>methodSignatureForSelector:</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">-</span> (<span class="tag">NSMethodSignature</span> *)<span class="rule"><span class="attribute">methodSignatureForSelector</span>:<span class="value">(SEL)aSelector</span></span>;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>Returns an NSMethodSignature object that contains a description of the method identified by a given selector.</p>
</blockquote>
<hr>
<h4 id="2-1_崩溃一_分析：">2.1 崩溃一 分析：</h4><p>从苹果文档可以看到，生成NSMethodSignature对象有2个方法，一个是实例方法和一个类方法。</p>
<ul>
<li>如果SEL是类方法要使用 <strong>methodSignatureForSelector:</strong>，</li>
<li>如果SEL是实例方法就使用 <strong>instanceMethodSignatureForSelector:</strong></li>
</ul>
<p>所以，把<code>instanceMethodSignatureForSelector:</code> 改为<code>methodSignatureForSelector</code> 就解决啦！</p>
<h4 id="2-2_崩溃二_分析：">2.2 崩溃二 分析：</h4><p>有了上面的分析，崩溃二是因为 <code>setTarget:</code>使用实例self，而类方法应用使用类，所以修改为<code>[invocatin setTarget:[self class]];</code>，就解决啦！</p>
<h4 id="2-3_最终代码：">2.3 最终代码：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)myInvocation &#123;</span><br><span class="line">    </span><br><span class="line">    SEL myMethod = @selector(sum:parm:parm:);</span><br><span class="line">    <span class="comment">//创建一个函数签名，这个签名可以是任意的,但需要注意，签名函数的参数数量要和调用的一致。</span></span><br><span class="line">    NSMethodSignature * sig  = [[self <span class="keyword">class</span>] methodSignatureForSelector:myMethod];</span><br><span class="line">    <span class="comment">//通过签名初始化</span></span><br><span class="line">    NSInvocation * invocatin = [NSInvocation invocationWithMethodSignature:sig];</span><br><span class="line">    <span class="comment">//设置target</span></span><br><span class="line">    [invocatin setTarget:[self <span class="keyword">class</span>]];</span><br><span class="line">    <span class="comment">//设置selecteor</span></span><br><span class="line">    [invocatin setSelector:myMethod];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">3</span>;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     //index为2 是因为0、1两个参数已经被target和selector占用，其实可以这样设置：</span><br><span class="line">     ViewController * view = self;</span><br><span class="line">     [invocatin setArgument:&amp;view atIndex:0];</span><br><span class="line">     [invocatin setArgument:&amp;myMethod atIndex:1];</span><br><span class="line">     */</span></span><br><span class="line">    [invocatin setArgument:&amp;a atIndex:<span class="number">2</span>];</span><br><span class="line">    [invocatin setArgument:&amp;b atIndex:<span class="number">3</span>];</span><br><span class="line">    [invocatin setArgument:&amp;c atIndex:<span class="number">4</span>];</span><br><span class="line">    [invocatin retainArguments];</span><br><span class="line">    <span class="comment">//我们将c的值设置为返回值</span></span><br><span class="line">    [invocatin setReturnValue:&amp;c];</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="comment">//取这个返回值</span></span><br><span class="line">    [invocatin getReturnValue:&amp;d];</span><br><span class="line">    NSLog(@<span class="string">"%d"</span>,d);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消息调用</span></span><br><span class="line">    [invocatin invoke];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">int</span>)sum:(<span class="keyword">int</span>)a parm:(<span class="keyword">int</span>)b parm:(<span class="keyword">int</span>)c&#123;</span><br><span class="line">    NSLog(@<span class="string">"sum: %d:%d:%d"</span>,a,b,c);</span><br><span class="line">    <span class="keyword">return</span> a+b+c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、总结">3、总结</h3><p>出现这样一个问题，直接说明平时没有关注文档和API实现，当前NSInvocation不常用，但是这次排查也用半天时间，有时候怀疑自己代码时，还是要从根本上找原因——— 从官方文档重新开始！ </p>
<p>另外，复制网上的代码是一个危险的动作，不求甚解有时候坑就越深，希望自己以后不懂的知识要使用时，除了工期赶&amp;复制，还要及时补充自己的空白，知其码，并知其然！努力成为一个优秀工程师！严谨！</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://stackoverflow.com/questions/10900403/how-can-i-invoke-a-class-method-by-nsinvocation" target="_blank" rel="external">objective c - How can I invoke a class method by NSInvocation? - Stack Overflow</a></li>
<li><a href="https://developer.apple.com/documentation/foundation/nsinvocation" target="_blank" rel="external">NSInvocation - Foundation | Apple Developer Documentation</a></li>
<li><a href="https://developer.apple.com/documentation/objectivec/nsobject/1571960-methodsignatureforselector?language=objc" target="_blank" rel="external">methodSignatureForSelector: - NSObject | Apple Developer Documentation</a></li>
<li><a href="https://developer.apple.com/documentation/objectivec/nsobject/1571959-instancemethodsignatureforselect?language=objc" target="_blank" rel="external">instanceMethodSignatureForSelector: - NSObject | Apple Developer Documentation</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最近在使用NSInvocation进行多参数方法调用，结果就崩溃了！signature为nil 和 一直提示找不到方法！！！</p>
<p><code>method signature argument cannot be nil</code> 崩溃信息：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*** <span class="type">Terminating</span> app due to uncaught exception '<span class="type">NSInvalidArgumentException</span>', reason: '+[<span class="type">NSInvocation</span> _invocationWithMethodSignature:frame:]: <span class="keyword">method</span> signature argument cannot be <span class="keyword">nil</span>'</span><br><span class="line">*** <span class="type">First</span> throw call stack:</span><br><span class="line">(<span class="number">0x1831a6d8c</span>  .........)</span><br><span class="line">libc++abi.dylib: terminating <span class="keyword">with</span> uncaught exception <span class="keyword">of</span> <span class="keyword">type</span> <span class="type">NSException</span></span><br></pre></td></tr></table></figure></p>
<p><code>unrecognized selector sent to instance</code>崩溃信息：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-<span class="keyword">[</span>ViewController openView]: unrecognized selector sent to<span class="instruction"> instance </span>0x10510b1b0'</span><br><span class="line">*** First<span class="instruction"> throw </span>call stack:</span><br><span class="line">(0x1831a6d8c ......<span class="function">)</span></span><br><span class="line">libc++abi.dylib: terminating with uncaught exception of type NSException</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="NSInvocation" scheme="https://iHTCboy.com/tags/NSInvocation/"/>
    
      <category term="NSMethodSignature" scheme="https://iHTCboy.com/tags/NSMethodSignature/"/>
    
      <category term="iOS" scheme="https://iHTCboy.com/tags/iOS/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gitment评论功能接入踩坑教程]]></title>
    <link href="https://iHTCboy.com/2018/02/25/2018-02-25_Gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%8E%A5%E5%85%A5%E8%B8%A9%E5%9D%91%E6%95%99%E7%A8%8B/"/>
    <id>https://iHTCboy.com/2018/02/25/2018-02-25_Gitment评论功能接入踩坑教程/</id>
    <published>2018-02-25T04:45:26.000Z</published>
    <updated>2018-06-09T02:21:38.863Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>之前接入的评论功能，都因为各种原因被放弃了，今天从新计划接入评论功能，所以就有了今天这篇文章。</p>
<h3 id="2、评论模块简介">2、评论模块简介</h3><ul>
<li><strong>多说</strong> - 最多用户使用的评论，但遗憾2017年6月将暂定服务；不建议新用户使用，但为旧用户保留，也感谢多说一路的陪伴；</li>
<li><strong>网易云跟帖</strong> - 网易提供的评论组件，功能比较简单，性能优秀；管理后台在查询上还不算特别智能，但足够普通用户使用；</li>
<li><strong>畅言</strong> - 搜狐提供的评论组件，功能丰富，体验优异；但必须进行域名备案。只要域名备过案就可以通过审核，简单问题复杂化。</li>
<li><strong>Disqus</strong> - 国外使用较多的评论组件。万里长城永不倒，一枝红杏出墙来，你懂的。</li>
</ul>
<p>以上评论模块应该大家都知道，多说和网易云跟帖没有了，畅言要备案，对于只是挂靠在GitHub的博客非常的不友好，放弃！Disqus，我们都希望自己的博客可以不分国界！所以Disqus也只能放弃！</p>
<p>综上所述，将是我们要重点介绍的Gitment ！！！</p>
<a id="more"></a>
<h3 id="3、Gitment评论模块">3、Gitment评论模块</h3><blockquote>
<p>Gitment is a comment system based on GitHub Issues, which can be used in the frontend without any server-side implementation.</p>
<p>Gitment 基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。</p>
</blockquote>
<p>想了解具体示例，可以点击查看官方Demo Page：<a href="https://imsun.github.io/gitment/" target="_blank" rel="external">Gitment Demo</a></p>
<p>具体的接入我就不在这里说了，本文末有参考链接大家可以去了解学习，主要是说一下其中的坑点。</p>
<h3 id="4、Gitment坑点小结">4、Gitment坑点小结</h3><h5 id="4-1、owner:_‘Your_GitHub_ID’">4.1、owner: ‘Your GitHub ID’</h5><p> <code>owner: &#39;你的 GitHub ID&#39;,</code><br> 可以是你的GitHub用户名，也可以是github id，建议直接用GitHub用户名就可以。</p>
<h5 id="4-2、repo:_‘The_repo_to_store_comments">4.2、repo: ‘The repo to store comments</h5><p><code>repo: &#39;存储评论的 github repo&#39;</code><br>这个是你要存储评论内容的仓库名，可以与博客下的仓库，也可以新建一个仓库专门存储评论内容的。</p>
<h5 id="4-3、Error:_Not_Found问题">4.3、Error: Not Found问题</h5><p>owner或者repo配置错误了，注意名字和仓库名字的大小写。</p>
<h5 id="4-4、Error:_Comments_Not_Initialized">4.4、Error: Comments Not Initialized</h5><ul>
<li>在注册OAuth Application这个步骤中，给Authorization callback URL指定的地址错了</li>
<li>还没有在该页面的Gitment评论区登陆GitHub账号</li>
</ul>
<p>如果还是不行，可以参考另一个情况 <a href="https://github.com/imsun/gitment/issues/95" target="_blank" rel="external">Error: Comments Not Initialized · Issue #95 · imsun/gitment</a></p>
<h5 id="4-5、Error：validation_failed">4.5、Error：validation failed</h5><p>issue的标签label有长度限制！labels的最大长度限制是50个字符。</p>
<p><code>id: &#39;页面 ID&#39;, // 可选。默认为 location.href</code></p>
<p>这个id的作用，就是针对一个文章有唯一的标识来判断这篇本章。</p>
<p>在issues里面，可以发现是根据网页标题来新建issues的，然后每个issues有两个labels（标签），一个是gitment，另一个就是id。</p>
<p>所以明白了原理后，就是因为id太长，导致初始化失败，现在就是要让id保证在50个字符内。</p>
<p>对应配置的id为：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">id</span>:<span class="value"> <span class="string">'&lt;%= page.title %&gt;'</span></span></span></span><br></pre></td></tr></table></figure></p>
<p>如果用网页标题也不能保证在50个字符！</p>
<p>最后，我用文章的时间，这样长度是保证在50个字符内，完美解决！<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="property">id</span>: '&lt;%= page.<span class="type">date</span> %&gt;'</span><br></pre></td></tr></table></figure></p>
<p>注意事项：</p>
<ol>
<li>用文章时间，避免了文章每次更新标题或路径时，会重新创建一个issue评论的问题，也解决了label长度问题。</li>
<li>关于Gitment的id在那里修改的问题，大家需要根据自己使用的主题，找到id配置的位置进行修改。（ps 可以在主题的github仓库中搜索gitment来定位）</li>
</ol>
<h5 id="4-6、gitment的汉化">4.6、gitment的汉化</h5><p>只需到模板里将原来定义CSS和JS的那两行改成：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"https://billts.site/extra_css/gitment.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"https://billts.site/js/gitment.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>即可。来源：<a href="https://github.com/imsun/gitment/issues/104" target="_blank" rel="external">https://github.com/imsun/gitment/issues/104</a></p>
<h5 id="4-7、所有文章一键初始化评论">4.7、所有文章一键初始化评论</h5><p>配置正确的文章，第一次显示，提示还没有初始化：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0225-Error Comments Not Initialized.png" alt="0225-Error Comments Not Initialized.png"></p>
<p>文章作者需要登陆GitHub授权后，会显示初始化按钮(注意，不要多点按钮，否则issues出现多条一样的)：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0225-Initialize Comments.png" alt="0225-Initialize Comments.png"></p>
<p>点击初始化按钮后，如果正常就会出现：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0225-No Comment Yet.png" alt="0225-No Comment Yet.png"></p>
<p>关于自动初始化所有文章的功能，到本文编写时，还没有一个完善的解决方法，就是用脚本来执行自动化，有需要的可以详细了解：<a href="https://github.com/imsun/gitment/issues/5" target="_blank" rel="external">https://github.com/imsun/gitment/issues/5</a></p>
<h5 id="4-8、请保持克制，切勿滥用。">4.8、请保持克制，切勿滥用。</h5><p>作者提醒使用本项目的用户，请保持克制，切勿滥用。<a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">详见 Gitment：使用 GitHub Issues 搭建评论系统</a></p>
<h5 id="4-9、订阅issue">4.9、订阅issue</h5><p>issue订阅，有新评论时就可以通过邮件提醒，这个功能是把双刃剑，因为有些垃圾订阅邮件骚扰，大家看着用吧。</p>
<h3 id="5、总结">5、总结</h3><p>Gitment目前来说，已经解决了一个博客简单的评论功能，点赞 / 有完整的 Markdown / GFM 和代码高亮支持!</p>
<p>通过Gitment至少可以证明一点，生产力的发展有无限可能，环境的限制，会有的各种奇异的想法，或者奇异的东西出现，Gitment就是一个完美的证明，充分解决了一个简单博客的评论功能。另一方面，与国内的生活要求，希望大家能够遵守规则，让GitHub和Gitment在我们生活中快乐成长！</p>
<h3 id="6、参考引用">6、参考引用</h3><ul>
<li><a href="https://github.com/imsun/gitment" target="_blank" rel="external">GitHub imsun/gitment: A comment system based on GitHub Issues.</a></li>
<li><a href="https://imsun.github.io/gitment/" target="_blank" rel="external">Gitment Demo</a></li>
<li><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">Gitment：使用 GitHub Issues 搭建评论系统 | I’m Sun</a></li>
<li><a href="http://xichen.pub/2018/01/31/2018-01-31-gitment/" target="_blank" rel="external">添加Gitment评论系统踩过的坑 | XiChen’s Blog</a></li>
<li><a href="https://zonghongyan.github.io/2017/06/29/201706292034/" target="_blank" rel="external">Hexo博客框架下Gitment取代多说评论 | 仁伯安</a></li>
<li><a href="http://www.xjdesyxx.top/2018/02/07/errsln/" target="_blank" rel="external">GITMENT系统VALIDATION FAILED问题的解决</a></li>
<li><a href="https://github.com/imsun/gitment/issues/5" target="_blank" rel="external">所有文章一键初始化评论 · Issue #5 · imsun/gitment</a></li>
<li><a href="https://github.com/imsun/gitment/issues/104" target="_blank" rel="external">评论框汉化问题 · Issue #104 · imsun/gitment</a></li>
<li><a href="https://github.com/imsun/gitment/issues/95" target="_blank" rel="external">Error: Comments Not Initialized · Issue #95 · imsun/gitment</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>之前接入的评论功能，都因为各种原因被放弃了，今天从新计划接入评论功能，所以就有了今天这篇文章。</p>
<h3 id="2、评论模块简介">2、评论模块简介</h3><ul>
<li><strong>多说</strong> - 最多用户使用的评论，但遗憾2017年6月将暂定服务；不建议新用户使用，但为旧用户保留，也感谢多说一路的陪伴；</li>
<li><strong>网易云跟帖</strong> - 网易提供的评论组件，功能比较简单，性能优秀；管理后台在查询上还不算特别智能，但足够普通用户使用；</li>
<li><strong>畅言</strong> - 搜狐提供的评论组件，功能丰富，体验优异；但必须进行域名备案。只要域名备过案就可以通过审核，简单问题复杂化。</li>
<li><strong>Disqus</strong> - 国外使用较多的评论组件。万里长城永不倒，一枝红杏出墙来，你懂的。</li>
</ul>
<p>以上评论模块应该大家都知道，多说和网易云跟帖没有了，畅言要备案，对于只是挂靠在GitHub的博客非常的不友好，放弃！Disqus，我们都希望自己的博客可以不分国界！所以Disqus也只能放弃！</p>
<p>综上所述，将是我们要重点介绍的Gitment ！！！</p>]]>
    
    </summary>
    
      <category term="Gitment" scheme="https://iHTCboy.com/tags/Gitment/"/>
    
      <category term="博客评论功能" scheme="https://iHTCboy.com/tags/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    
      <category term="评论配置" scheme="https://iHTCboy.com/tags/%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[免费将音频转成文字的快速方法]]></title>
    <link href="https://iHTCboy.com/2018/02/23/2018-02-23_%E5%85%8D%E8%B4%B9%E5%B0%86%E9%9F%B3%E9%A2%91%E8%BD%AC%E6%88%90%E6%96%87%E5%AD%97%E7%9A%84%E5%BF%AB%E9%80%9F%E6%96%B9%E6%B3%95/"/>
    <id>https://iHTCboy.com/2018/02/23/2018-02-23_免费将音频转成文字的快速方法/</id>
    <published>2018-02-23T15:30:36.000Z</published>
    <updated>2018-05-06T08:48:52.357Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最近在看YouTube视频时，里面有自动字幕功能，当时非常激动，字幕很准确；其实YouTube这个功能在2010就上线了。今天就是想利用YouTube这个强大的功能，将音频转换成文本啊！因为尝试了讯飞和百度后，不只是收费，准确率也不好，特别是英文。</p>
<h3 id="2、自己的音频（视频）">2、自己的音频（视频）</h3><p>如果是视频，直接在YouTube上传就可以，如果是音频，YouTube不接受纯音频文件。所以，我们得通过第三方网站  <a href="https://www.tunestotube.com" target="_blank" rel="external">TunesToTube - Upload</a> 上传，给音频配上画面。</p>
<a id="more"></a>
<p>上传音频后转换视频：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223- TunesToTube - Upload.png" alt="0223- TunesToTube - Upload.png"></p>
<p>在YouTube视频管理，查看刚才上传的视频，需要等待一下，会自动生成字幕：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223-YouTube视频自动生成字幕.png" alt="0223-YouTube视频自动生成字幕.png"></p>
<p>可以查看自动生成的字幕，并且下载！</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223-YouTube自动生成的字幕下载.png" alt="0223-YouTube自动生成的字幕下载.png"></p>
<h3 id="3、YouTube的视频">3、YouTube的视频</h3><p>如果是YouTube上已经有的视频，你想下载字幕，则可以通过第三方API来下载完整的字幕，以下是用 - <a href="https://zhuwei.me/y2b/" target="_blank" rel="external">YouTube字幕下载</a> 网站示意:</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223-YouTube字幕下载工具.png" alt="0223-YouTube字幕下载工具.png"></p>
<p>选择下载的字幕：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223-选择下载的字幕的类型.png" alt="0223-选择下载的字幕的类型.png"></p>
<p>下载的字幕示意：</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0223-下载的字幕示意（中英文）.png" alt="0223-下载的字幕示意(中英文).png"></p>
<h3 id="4、总结">4、总结</h3><p>随着今年AI人工智能的发展，谷歌的自动翻译已经给世界带来了巨大的改变，相反国内，其实一直在说AI，却没有做出大的变化，就像优酷，没有考虑谷歌的强大，一直与爱x艺视频，腾x视频都在为版本争，而且国内都是综艺视频占大头，有点可惜。希望，AI在未来能解决更多简单操作但繁琐的重复劳动工作的问题，一起加油！</p>
<h3 id="5、参考引用">5、参考引用</h3><ul>
<li><a href="https://mp.weixin.qq.com/s/-N_6VBg2HO59l5ORsqbMuw" target="_blank" rel="external">一款自动、免费整理英文录音的神器，居然是它</a></li>
<li><a href="https://www.tunestotube.com" target="_blank" rel="external">TunesToTube - Upload</a></li>
<li><a href="https://zhuwei.me/y2b/" target="_blank" rel="external">YouTube字幕下载_Vimeo字幕下载<em>Download Youtube and Vimeo Captions(Subtitles)</em>朱炜</a></li>
<li><a href="https://www.douban.com/group/topic/61859907/" target="_blank" rel="external">推荐YouTube视频自动识别字幕的下载工具</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最近在看YouTube视频时，里面有自动字幕功能，当时非常激动，字幕很准确；其实YouTube这个功能在2010就上线了。今天就是想利用YouTube这个强大的功能，将音频转换成文本啊！因为尝试了讯飞和百度后，不只是收费，准确率也不好，特别是英文。</p>
<h3 id="2、自己的音频（视频）">2、自己的音频（视频）</h3><p>如果是视频，直接在YouTube上传就可以，如果是音频，YouTube不接受纯音频文件。所以，我们得通过第三方网站  <a href="https://www.tunestotube.com">TunesToTube - Upload</a> 上传，给音频配上画面。</p>]]>
    
    </summary>
    
      <category term="YouTube字幕" scheme="https://iHTCboy.com/tags/YouTube%E5%AD%97%E5%B9%95/"/>
    
      <category term="字幕下载" scheme="https://iHTCboy.com/tags/%E5%AD%97%E5%B9%95%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="自动翻译" scheme="https://iHTCboy.com/tags/%E8%87%AA%E5%8A%A8%E7%BF%BB%E8%AF%91/"/>
    
      <category term="音频转文本" scheme="https://iHTCboy.com/tags/%E9%9F%B3%E9%A2%91%E8%BD%AC%E6%96%87%E6%9C%AC/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用iPhone“破解”下载百度云文件限速问题]]></title>
    <link href="https://iHTCboy.com/2018/02/16/2018-02-16_%E5%88%A9%E7%94%A8iPhone%E2%80%9C%E7%A0%B4%E8%A7%A3%E2%80%9D%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E6%96%87%E4%BB%B6%E9%99%90%E9%80%9F%E9%97%AE%E9%A2%98/"/>
    <id>https://iHTCboy.com/2018/02/16/2018-02-16_利用iPhone“破解”下载百度云文件限速问题/</id>
    <published>2018-02-16T09:12:16.000Z</published>
    <updated>2018-05-06T08:49:09.307Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>最近想下载一个资源，找到百度网盘的，文件总大小871.84M，下载速度100kb/s，没有开会员，这速度有良心了！but，下载到300多m就断开了！！！wtf！！！然后网上找到 <a href="https://github.com/yangshun1029/aria2gui" target="_blank" rel="external">Aria2GUI</a>，然后发现，现在百度网盘已经封杀了。</p>
<p>纠结，开会员？这是一个伪需求，因为自己不经常使用百度网盘，就下载一次开一次会员15元，不是说这个贵，总会觉得感觉有点大财小用的样子，所以如果百度云能推出下载一次一分钱或一毛钱酱紫，我觉得是可以接受的。好了，废话就不多说了，今天我们的另一个方法吧。</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0216-下载的百度云文件有可能会断开.png" alt="0216-下载的百度云文件有可能会断开.png"></p>
<a id="more"></a>
<h3 id="2、打开iPhone百度网盘下载">2、打开iPhone百度网盘下载</h3><p>因为发现用手机百度网盘App下载，网速是根据你的网线速度决定的，不需要开通会员，网速也不会受到限制。因为百度网盘下载上的资源是不能分享到其它应用的（.rar、.zip、视频等），所以没有网速的限制吧！？</p>
<p>正是利用这点，百度网盘找到你要下载的文件，点击下载就可以了，下载完后就是好事！接下来要考虑的是怎么把下载好的文件，拉出来！<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0216-百度网盘 for iPhone.JPG" alt="已经下载好的文件示例-百度网盘 for iPhone.JPG"></p>
<h3 id="3、打开iTunes提取文件">3、打开iTunes提取文件</h3><p>用iTunes找到手机，点击手机查看手机信息，点击<code>文件共享</code>，找到百度网盘的文稿：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0216-iTunes-文件共享-百度网盘.png" alt="0216-iTunes-文件共享-百度网盘.png"></p>
<p>把拖拽出来的文件，找到<code>Cache</code>文件，里面就是缓存的资源，包括下载的文件、在线看的视频内容、预览的图片等。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0216-百度网盘在iTunes中子文件夹Cache.png" alt="0216-百度网盘在iTunes中子文件夹Cache.png"></p>
<h3 id="4、总结">4、总结</h3><p>利用这个方法，我在家里网速10M情况下，不到半个小时，就已经下载完这个文件并且得到源文件！！所以比用其他的下载方法方便可靠又安全。用官方的应用下载确实是便捷！密码帐号这些都不会外漏，无安全的隐患。在这里祝大家玩得开心，下载的开心，新年快乐！</p>
<h3 id="5、参考引用">5、参考引用</h3><ul>
<li><a href="https://github.com/yangshun1029/aria2gui" target="_blank" rel="external">Aria2GUI</a></li>
<li><a href="https://www.zhihu.com/question/38463514/answer/320312462" target="_blank" rel="external">iPhone的百度云下载的压缩包如何用其他软件解压？ - 知乎</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>最近想下载一个资源，找到百度网盘的，文件总大小871.84M，下载速度100kb/s，没有开会员，这速度有良心了！but，下载到300多m就断开了！！！wtf！！！然后网上找到 <a href="https://github.com/yangshun1029/aria2gui">Aria2GUI</a>，然后发现，现在百度网盘已经封杀了。</p>
<p>纠结，开会员？这是一个伪需求，因为自己不经常使用百度网盘，就下载一次开一次会员15元，不是说这个贵，总会觉得感觉有点大财小用的样子，所以如果百度云能推出下载一次一分钱或一毛钱酱紫，我觉得是可以接受的。好了，废话就不多说了，今天我们的另一个方法吧。</p>
<p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0216-下载的百度云文件有可能会断开.png" alt="0216-下载的百度云文件有可能会断开.png"></p>]]>
    
    </summary>
    
      <category term="百度云下载" scheme="https://iHTCboy.com/tags/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="百度网盘限制" scheme="https://iHTCboy.com/tags/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E5%88%B6/"/>
    
      <category term="破解下载限速" scheme="https://iHTCboy.com/tags/%E7%A0%B4%E8%A7%A3%E4%B8%8B%E8%BD%BD%E9%99%90%E9%80%9F/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于16进制颜色值转换为UIColor的思考]]></title>
    <link href="https://iHTCboy.com/2018/02/07/2018-02-07_%E5%85%B3%E4%BA%8E16%E8%BF%9B%E5%88%B6%E9%A2%9C%E8%89%B2%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BAUIColor%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://iHTCboy.com/2018/02/07/2018-02-07_关于16进制颜色值转换为UIColor的思考/</id>
    <published>2018-02-07T12:26:16.000Z</published>
    <updated>2018-05-06T08:49:26.543Z</updated>
    <content type="html"><![CDATA[<h3 id="1、前言">1、前言</h3><p>大家都知道iOS的UIColor提供的自定义初始化是通过RGB(A) 4个10进行制的参数，那么为什么用16进制呢？因为web和安卓端以常识性用16进制读取，所以为了方便设计师出图标注，很多时候都是16进制的效果图。而今天就是要讨论一下，这个16进制的转换的方法。</p>
<p><a href="https://zh.wikipedia.org/wiki/网页颜色#十六进制数字表示方法" target="_blank" rel="external">网页颜色 - 维基百科</a>:</p>
<blockquote>
<p>在<a href="https://zh.wikipedia.org/wiki/HTML" title="HTML" target="_blank" rel="external">HTML</a>和<a href="https://zh.wikipedia.org/wiki/CSS" title="CSS" target="_blank" rel="external">CSS</a>中使用3<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82" title="字节" target="_blank" rel="external">字节</a>共6个<a href="https://zh.wikipedia.org/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六进制" target="_blank" rel="external">十六进制</a>数字表示一种颜色，每字节从00到FF，相当十进位数字从0到255，按顺序前两位是红色的值，中间两位是绿的值，最后两位是蓝色的值。</p>
<p>由于<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5" title="网页" target="_blank" rel="external">网页</a>（WEB）是基于计算机浏览器开发的媒体，所以颜色以光学<a href="https://zh.wikipedia.org/wiki/%E9%A2%9C%E8%89%B2" title="颜色" target="_blank" rel="external">颜色</a>RGB（红、绿、蓝）为主。 网页颜色是以16进制代码表示，一般以“#”号开头，后面分别为R、G、B的16位进制数。 FF为最大数，代表十进制255。比如白色是R、G、B三个颜色最大，在网页代码便是：#FFFFFF。黑色是三个颜色为0，在网页代码便是：#000000。当颜色代码为#XXYYZZ时，可以用#XYZ表示，如#135与#113355表示同样的颜色。在<a href="https://zh.wikipedia.org/wiki/CSS" title="CSS" target="_blank" rel="external">CSS</a>中，也可以使用<code>rgb(127,127,127)</code>代替#7F7F7F（<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5%E9%A2%9C%E8%89%B2#RGBA%E5%92%8CHSLA%E7%9A%84%E5%8D%81%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA" target="_blank" rel="external">十进制表示</a>）。</p>
</blockquote>
<p>有意思的是，可以知道表示颜色数总共有： 256^3 = 16,777,216 种，这个颜色就是我们常说的<strong>真彩色</strong>。</p>
<h3 id="2、几种16进制颜色值转换UIColor的方式">2、几种16进制颜色值转换UIColor的方式</h3><p>16进制转换为10进制后的整形转换为UIColor：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// rgb颜色转换（rgbValue为16进制转换成10进制的整形）</span></span><br><span class="line"><span class="hexcolor">#def</span>ine <span class="function"><span class="title">MACRO_COLOR_HexCOLOR</span><span class="params">(rgbValue)</span></span>         ([UIColor colorWithRed:((<span class="attribute">float</span>)((rgbValue &amp; <span class="number">0</span>xFF0000) &gt;&gt; <span class="number">16</span>))/<span class="number">255.0</span>f green:((<span class="attribute">float</span>)((rgbValue &amp; <span class="number">0</span>xFF00) &gt;&gt; <span class="number">8</span>))/<span class="number">255.0</span>f blue:((<span class="attribute">float</span>)(rgbValue &amp; <span class="number">0</span>xFF))/<span class="number">255.0</span>f alpha:<span class="number">1.0</span>])</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>方法一：</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> mark -<span class="number">16</span>进制颜色值转化UIColor</span></span><br><span class="line">+ (UIColor *)colorFromHexString:(NSString *)hexString</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> rgbValue = <span class="number">0</span>;</span><br><span class="line">    NSScanner *scanner = [NSScanner scannerWithString:hexString];</span><br><span class="line">    [scanner setScanLocation:<span class="number">1</span>]; <span class="comment">// bypass '#' character</span></span><br><span class="line">    [scanner scanHexInt:&amp;rgbValue]; <span class="comment">// Optionally prefixed with "0x" or "0X"</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> MACRO_COLOR_HexCOLOR(rgbValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种方法，只能输入以<code>#</code>开头的十六进制颜色，比如<code>#3c93fd</code>，如果输入<code>0X3c93fd</code>，最后都会得到黑色。（因为rgbValue为0，所以全部颜色为0，得到黑色。）</p>
<ul>
<li>方法二：</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIColor</span> *)colorWithHexString:(<span class="built_in">NSString</span> *) hexString</span><br><span class="line"> &#123;</span><br><span class="line">	<span class="built_in">NSScanner</span> *scanner = [<span class="built_in">NSScanner</span> scannerWithString: hexString];</span><br><span class="line">	<span class="keyword">unsigned</span> hexNum;</span><br><span class="line">	<span class="keyword">if</span> (![scanner scanHexInt:&amp;hexNum]) <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">	<span class="keyword">return</span> MACRO_COLOR_HexCOLOR(hexNum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种方法，只能输入以<code>0X</code>或<code>0x</code>开头的十六进制颜色，比如<code>0x3c93fd</code>，如果输入<code>#3c93fd</code>，最后都会得到nil（透明）。（scanner转换10进制失败，hexNum为0，但是直接return nil，）</p>
<ul>
<li>方法三：</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 颜色转换三：iOS中十六进制的颜色（以#开头）转换为UIColor</span></span><br><span class="line">+ (UIColor *) <span class="string">colorWithHexString:</span> (NSString *)color</span><br><span class="line">&#123;</span><br><span class="line">    NSString *cString = [[color <span class="string">stringByTrimmingCharactersInSet:</span>[NSCharacterSet whitespaceAndNewlineCharacterSet]] uppercaseString];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// String should be 6 or 8 characters</span></span><br><span class="line">    <span class="keyword">if</span> ([cString length] &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [UIColor clearColor];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断前缀并剪切掉</span></span><br><span class="line">    <span class="keyword">if</span> ([cString <span class="string">hasPrefix:</span>@<span class="string">"0X"</span>])</span><br><span class="line">        cString = [cString <span class="string">substringFromIndex:</span><span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span> ([cString <span class="string">hasPrefix:</span>@<span class="string">"#"</span>])</span><br><span class="line">        cString = [cString <span class="string">substringFromIndex:</span><span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> ([cString length] != <span class="number">6</span>)</span><br><span class="line">        <span class="keyword">return</span> [UIColor clearColor];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从六位数值中找到RGB对应的位数并转换</span></span><br><span class="line">    NSRange range;</span><br><span class="line">    range.location = <span class="number">0</span>;</span><br><span class="line">    range.length = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//R、G、B</span></span><br><span class="line">    NSString *rString = [cString <span class="string">substringWithRange:</span>range];</span><br><span class="line"></span><br><span class="line">    range.location = <span class="number">2</span>;</span><br><span class="line">    NSString *gString = [cString <span class="string">substringWithRange:</span>range];</span><br><span class="line"></span><br><span class="line">    range.location = <span class="number">4</span>;</span><br><span class="line">    NSString *bString = [cString <span class="string">substringWithRange:</span>range];   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Scan values</span></span><br><span class="line">    unsigned <span class="typename">int</span> r, g, b;</span><br><span class="line">    [[NSScanner <span class="string">scannerWithString:</span>rString] <span class="string">scanHexInt:</span>&amp;r];</span><br><span class="line">    [[NSScanner <span class="string">scannerWithString:</span>gString] <span class="string">scanHexInt:</span>&amp;g];</span><br><span class="line">    [[NSScanner <span class="string">scannerWithString:</span>bString] <span class="string">scanHexInt:</span>&amp;b];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [UIColor <span class="string">colorWithRed:</span>((<span class="typename">float</span>) r <span class="regexp">/ 255.0f) green:((float) g /</span> <span class="number">255.0</span>f) <span class="string">blue:</span>((<span class="typename">float</span>) b / <span class="number">255.0</span>f) <span class="string">alpha:</span><span class="number">1.0</span>f];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：艳晓</span><br><span class="line">链接：<span class="string">https:</span><span class="comment">//www.jianshu.com/p/96835798e4fc</span></span><br></pre></td></tr></table></figure>
<p>这种方法，做了<code>0x</code>和<code>#</code>判断，但是为什么那么长！！！有没有办法优化？</p>
<h3 id="3、优化的方法？">3、优化的方法？</h3><p>因为用了<code>NSScanner</code>进行转换，所以为什么不用NSScanner直接判断，然后转换呢？另外苹果文档注释：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">BOOL</span>)scanHexInt:(nullable unsigned *)<span class="literal">result</span>;   // <span class="type">Optionally</span> prefixed <span class="keyword">with</span> <span class="string">"0x"</span> <span class="keyword">or</span> <span class="string">"0X"</span></span><br></pre></td></tr></table></figure>
<p>所以，其实用<code>NSScanner</code>进行转换时，不用判断 “0x” or “0X”，所以直接判断 <code>#</code>后过滤掉(跳过)就可以啦！！！</p>
<p>直接看代码吧，发现看代码比文字更有力！：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIColor</span> *) colorWithHexString:(<span class="built_in">NSString</span> *)hexString </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSScanner</span> *scanner = [<span class="built_in">NSScanner</span> scannerWithString:hexString];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从当前的扫描位置开始扫描，判断扫描字符串是否从当前位置能扫描到和传入字符串相同的一串字符，如果能扫描到就返回YES，指针指向的地址存储的就是这段字符串的内容。</span></span><br><span class="line">    [scanner scanString:<span class="string">@"#"</span> intoString:<span class="literal">NULL</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">unsigned</span> rgbValue = <span class="number">0</span>;</span><br><span class="line">    [scanner scanHexInt:&amp;rgbValue];<span class="comment">// Optionally prefixed with "0x" or "0X"</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> MACRO_COLOR_HexCOLOR(rgbValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的<code>scanString: intoString:</code>方法是一个技巧，判断是否包含#，如果包括时，scanner的<code>scanLocation</code>会指向下一个字符。所以用<code>scanHexInt:</code>将十六进制无符号整形时，已经不包含<code>#</code>，所以能成功转换。</p>
<h3 id="4、参考引用">4、参考引用</h3><ul>
<li><a href="https://github.com/kballard/uicolor-utilities/blob/master/UIColor-Expanded.m" target="_blank" rel="external">uicolor-utilities/UIColor-Expanded.m at master · kballard/uicolor-utilities</a></li>
<li><a href="https://www.jianshu.com/p/96835798e4fc" target="_blank" rel="external">iOS中十六进制的颜色转换UIColor（RGB） - 简书</a></li>
<li><a href="https://www.jianshu.com/p/a0ee15f94131" target="_blank" rel="external">NSScanner：一个陌生的条件判断利器 - 简书</a></li>
<li><a href="http://blog.csdn.net/likendsl/article/details/7974761" target="_blank" rel="external">NSScanner类的基本用法 - CSDN博客</a></li>
<li><a href="https://www.jianshu.com/p/dee32c7401e1" target="_blank" rel="external">NSScanner使用详解 - 简书</a></li>
<li><a href="https://zh.wikipedia.org/wiki/网页颜色#十六进制数字表示方法" target="_blank" rel="external">网页颜色 - 维基百科</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、前言">1、前言</h3><p>大家都知道iOS的UIColor提供的自定义初始化是通过RGB(A) 4个10进行制的参数，那么为什么用16进制呢？因为web和安卓端以常识性用16进制读取，所以为了方便设计师出图标注，很多时候都是16进制的效果图。而今天就是要讨论一下，这个16进制的转换的方法。</p>
<p><a href="https://zh.wikipedia.org/wiki/网页颜色#十六进制数字表示方法">网页颜色 - 维基百科</a>:</p>
<blockquote>
<p>在<a href="https://zh.wikipedia.org/wiki/HTML" title="HTML">HTML</a>和<a href="https://zh.wikipedia.org/wiki/CSS" title="CSS">CSS</a>中使用3<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82" title="字节">字节</a>共6个<a href="https://zh.wikipedia.org/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六进制">十六进制</a>数字表示一种颜色，每字节从00到FF，相当十进位数字从0到255，按顺序前两位是红色的值，中间两位是绿的值，最后两位是蓝色的值。</p>
<p>由于<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5" title="网页">网页</a>（WEB）是基于计算机浏览器开发的媒体，所以颜色以光学<a href="https://zh.wikipedia.org/wiki/%E9%A2%9C%E8%89%B2" title="颜色">颜色</a>RGB（红、绿、蓝）为主。 网页颜色是以16进制代码表示，一般以“#”号开头，后面分别为R、G、B的16位进制数。 FF为最大数，代表十进制255。比如白色是R、G、B三个颜色最大，在网页代码便是：#FFFFFF。黑色是三个颜色为0，在网页代码便是：#000000。当颜色代码为#XXYYZZ时，可以用#XYZ表示，如#135与#113355表示同样的颜色。在<a href="https://zh.wikipedia.org/wiki/CSS" title="CSS">CSS</a>中，也可以使用<code>rgb(127,127,127)</code>代替#7F7F7F（<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5%E9%A2%9C%E8%89%B2#RGBA%E5%92%8CHSLA%E7%9A%84%E5%8D%81%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA">十进制表示</a>）。</p>
</blockquote>
<p>有意思的是，可以知道表示颜色数总共有： 256^3 = 16,777,216 种，这个颜色就是我们常说的<strong>真彩色</strong>。</p>
<h3 id="2、几种16进制颜色值转换UIColor的方式">2、几种16进制颜色值转换UIColor的方式</h3><p>16进制转换为10进制后的整形转换为UIColor：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// rgb颜色转换（rgbValue为16进制转换成10进制的整形）</span></span><br><span class="line"><span class="hexcolor">#def</span>ine <span class="function"><span class="title">MACRO_COLOR_HexCOLOR</span><span class="params">(rgbValue)</span></span>         ([UIColor colorWithRed:((<span class="attribute">float</span>)((rgbValue &amp; <span class="number">0</span>xFF0000) &gt;&gt; <span class="number">16</span>))/<span class="number">255.0</span>f green:((<span class="attribute">float</span>)((rgbValue &amp; <span class="number">0</span>xFF00) &gt;&gt; <span class="number">8</span>))/<span class="number">255.0</span>f blue:((<span class="attribute">float</span>)(rgbValue &amp; <span class="number">0</span>xFF))/<span class="number">255.0</span>f alpha:<span class="number">1.0</span>])</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="16进制颜色" scheme="https://iHTCboy.com/tags/16%E8%BF%9B%E5%88%B6%E9%A2%9C%E8%89%B2/"/>
    
      <category term="NSScanner" scheme="https://iHTCboy.com/tags/NSScanner/"/>
    
      <category term="UIColor" scheme="https://iHTCboy.com/tags/UIColor/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac查看文件内容常用的命令小结]]></title>
    <link href="https://iHTCboy.com/2018/02/04/2018-02-04_Mac%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/"/>
    <id>https://iHTCboy.com/2018/02/04/2018-02-04_Mac查看文件内容常用的命令小结/</id>
    <published>2018-02-04T14:04:16.000Z</published>
    <updated>2018-05-06T08:49:37.061Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>最近苹果的热更新和私有库问题检查的更严了，如果应用被拒，苹果在拒绝信中会说到使用<code>strings</code>/<code>otool</code>/<code>nm</code>命令进行自查，所以总结了一些命令，方便查找和定位文件内容相关信息。</p>
<h3 id="1、grep">1、grep</h3><ul>
<li><p>作用：判断是否包含字符串</p>
</li>
<li><p>使用示例：</p>
<p>  <code>grep -r &quot;xxx” path</code></p>
</li>
</ul>
<p>检查是否包含（weixin）字符串：<br>    <img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-grep%20-r%20%22xxx”%20path.png" alt="grep -r &quot;xxx” path.png"><br> <code>matches</code> 表示包含。</p>
<a id="more"></a>
<h3 id="2、strings">2、strings</h3><ul>
<li><p>作用：find the printable strings in a object, or other binary, file</p>
</li>
<li><p>使用示例：</p>
<p>  <code>strings a.out | grep hello</code> //检查 a.out 文件中含有 hello 字符串的字节序列</p>
</li>
<li><p>检查二进制是否含有关键词的库（比如检查私有库）：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-strings a.out | grep hello.png" alt="strings a.out | grep hello.png"></p>
</li>
</ul>
<ul>
<li>更多使用说明 <code>man strings</code></li>
</ul>
<h3 id="3、otool">3、otool</h3><ul>
<li><p>作用： object file displaying tool. (针对目标文件的展示工具，用来发现应用中使用到了哪些系统库，调用了其中哪些方法，使用了库中哪些对象及属性)</p>
</li>
<li><p>使用示例：<br>  <code>otool -L path</code> //查看可执行程序都链接了那些库</p>
<p>  <code>otool -L path | grep &quot;xxx&quot;</code> //筛选是否链接了xxx库</p>
<p>  <code>otool -D path</code> //查看支持的架构</p>
<p>  <code>otool -ov path</code> //output the Objective-C class structures and their defined methods.(输出Object-C类结构以及定义的方法)</p>
</li>
<li><p>查看该应用是否砸壳:<br>  <code>otool -l path | grep crypt</code> //<strong>cryptid  0</strong>（砸壳） 1（未砸壳）<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-otool -l path | grep crypt.png" alt="otool -l path | grep crypt.png"></p>
</li>
<li><p>更多用法 <code>man otool</code></p>
</li>
</ul>
<h3 id="4、nm">4、nm</h3><ul>
<li><p>作用：display name list (symbol table). (显示符号表)</p>
</li>
<li><p>使用示例：<br>  <code>nm path</code> //得到Mach-O中的程序符号表</p>
<p>  <code>nm -nm path</code>//目标文件的所有符号<br>  <img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-nm -nm path.png" alt="nm -nm path.png"></p>
<p>  符号表中标示为 undefined，意思是目标文件引用了类_XXX（XXX库），不过这并没有实现它。</p>
</li>
<li><p>更多用法 <code>man nm</code></p>
</li>
</ul>
<h3 id="5、file">5、file</h3><ul>
<li><p>作用：determine file type. (判断文件类型)</p>
</li>
<li><p>使用示例：<br>  <code>file path</code></p>
<p>  判断.a/framework是静态库还是动态库:<br>静态库：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-file path - static Lib.png" alt="file path - static Lib.png"><br>动态库：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-file path - dynamically Lib.png" alt="file path - dynamically Lib.png"></p>
</li>
</ul>
<h3 id="6、lipo">6、lipo</h3><ul>
<li><p>作用：create or operate on universal files（创建或处理通用文件的工具）</p>
</li>
<li><p>使用示例：<br>  <code>lipo -info &#39;file path&#39;</code> // 判断静态库所支持的平台 - i386 armv7 armv7s x86_64 arm64</p>
<p> <code>lipo -remove i386 origin_xxx.a -output op_xxx.a</code> // 删除静态库包括的i386平台</p>
<p><code>lipo -thin i386 origin_xxx.a -output op_xxx.a</code> // 拆分静态库，只保留i386 CPU架构</p>
<p><code>lipo -create device_xxx.a simulator_xxx.a -output universal_xxx.a</code> //对真机或者模拟器分别打出 .a 文件合并</p>
</li>
</ul>
<h3 id="7、参考阅读">7、参考阅读</h3><ul>
<li><a href="https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/nm.1.html" target="_blank" rel="external">“nm tool” Xcode manual page</a></li>
<li><a href="https://github.com/mrmign/iOS-private-api-scanner/blob/master/iOS-api-scan.md" target="_blank" rel="external">iOS-private-api-scanner/iOS私有API扫描工作总结· mrmign/iOS-private-api-scanner</a></li>
<li><a href="https://github.com/NetEaseGame/iOS-private-api-checker" target="_blank" rel="external">iOS-private-api-checker苹果iOS私有API检查工具</a></li>
<li><a href="https://www.jianshu.com/p/77343def4574?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" target="_blank" rel="external">iOS开发-如何判断framework是动态库或静态库以及framework静态库转.a静态库</a></li>
</ul>
<p><br></p>
<blockquote>
<p>注：本文首发于 <a href="http://iHTCboy.com">iHTCboy’s blog</a>，如若转载，请注来源</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p>最近苹果的热更新和私有库问题检查的更严了，如果应用被拒，苹果在拒绝信中会说到使用<code>strings</code>/<code>otool</code>/<code>nm</code>命令进行自查，所以总结了一些命令，方便查找和定位文件内容相关信息。</p>
<h3 id="1、grep">1、grep</h3><ul>
<li><p>作用：判断是否包含字符串</p>
</li>
<li><p>使用示例：</p>
<p>  <code>grep -r &quot;xxx” path</code></p>
</li>
</ul>
<p>检查是否包含（weixin）字符串：<br>    <img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2018/02/0204-grep%20-r%20%22xxx”%20path.png" alt="grep -r &quot;xxx” path.png"><br> <code>matches</code> 表示包含。</p>]]>
    
    </summary>
    
      <category term="grep" scheme="https://iHTCboy.com/tags/grep/"/>
    
      <category term="iOS命令行" scheme="https://iHTCboy.com/tags/iOS%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="lipo" scheme="https://iHTCboy.com/tags/lipo/"/>
    
      <category term="mac命令行" scheme="https://iHTCboy.com/tags/mac%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="nm" scheme="https://iHTCboy.com/tags/nm/"/>
    
      <category term="otool" scheme="https://iHTCboy.com/tags/otool/"/>
    
      <category term="strings" scheme="https://iHTCboy.com/tags/strings/"/>
    
      <category term="technology" scheme="https://iHTCboy.com/categories/technology/"/>
    
  </entry>
  
</feed>
